var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,1.235,1,2.102]],["body/components/AboutPage.html",[0,1.906,1,3.486,2,3.016,3,0.049,4,0.049,5,2.253,6,2.299,7,2.253,8,2.253,9,0.049,10,5.02,11,0.974,12,3.305,13,2.011,14,4.031,15,3.876,16,2.902,17,7.808,18,2.902,19,6.856,20,0.291,21,0.794,22,4.14,23,1.444,24,3.843,25,1.503,26,4.154,27,4.637,28,4.868,29,1.601,30,6.856,31,1.043,32,0.005,33,0.737,34,0.406,35,0.765,36,3.911,37,5.02,38,1.043,39,1.787,40,0.388,41,0.117,42,0.271,43,1.976,44,2.011,45,2.854,46,0.049,47,0.264,48,3.376,49,1.72,50,2.939,51,2.939,52,6.143,53,6.856,54,6.856,55,6.856,56,2.902,57,6.856,58,6.856,59,1.704,60,3.016,61,3.016,62,1.942,63,3.765,64,2.253,65,2.253,66,2.125,67,2.253,68,2.048,69,2.253,70,2.086,71,2.166,72,2.253,73,2.125,74,1.543,75,3.368,76,3.765,77,2.125,78,3.765,79,2.086,80,2.253,81,2.086,82,2.253,83,2.086,84,2.253,85,2.086,86,2.521,87,2.253,88,2.086,89,2.253,90,2.086,91,2.253,92,2.086,93,1.511,94,2.125,95,2.064,96,2.125,97,2.125,98,2.253,99,2.125,100,1.731,101,2.086,102,2.253,103,2.086,104,2.253,105,2.125,106,2.253,107,2.048,108,2.253,109,2.125,110,1.651,111,2.125,112,2.125,113,2.253,114,2.086,115,1.368,116,2.048,117,2.086,118,2.253,119,2.086,120,2.253,121,2.086,122,2.253,123,2.086,124,2.208,125,2.253,126,0.003,127,0.003]],["title/modules/AboutPageModule.html",[128,1.545,129,3.928]],["body/modules/AboutPageModule.html",[1,4.09,3,0.066,4,0.066,9,0.066,32,0.005,41,0.15,42,0.368,43,2.682,44,2.73,46,0.066,47,0.359,59,2.313,126,0.004,127,0.004,128,2.081,129,7.818,130,2.548,131,3.256,132,4.628,133,3.488,134,3.058,135,2.636,136,6.105,137,6.105,138,6.105,139,7.242,140,4.278,141,3.406,142,3.488,143,6.813,144,3.233,145,3.29,146,4.498,147,3.488,148,4.498,149,2.73,150,4.278,151,2.548,152,3.667,153,6.105,154,3.574,155,3.766]],["title/modules/AboutPageRoutingModule.html",[128,1.545,139,3.721]],["body/modules/AboutPageRoutingModule.html",[0,1.815,1,3.66,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,126,0.004,127,0.004,130,2.78,135,2.876,139,6.48,144,2.876,145,3.468,153,6.662,156,7.435,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11]],["title/guards/AdminGuard.html",[164,4.533,165,4.187]],["body/guards/AdminGuard.html",[3,0.062,4,0.062,9,0.062,11,0.914,20,0.373,23,1.699,25,1.768,29,1.654,31,1.337,32,0.005,33,0.565,34,0.381,35,0.98,38,1.337,41,0.143,42,0.347,46,0.062,47,0.339,49,2.21,126,0.004,127,0.004,160,2.625,161,1.13,165,6.675,166,6.434,167,6.434,168,8.699,169,6.434,170,7.645,171,8.811,172,5.579,173,6.15,174,6.434,175,7.228,176,6.434,177,5.659,178,0.851,179,4.514,180,1.753,181,6.434,182,3.144,183,6.434,184,1.124,185,1.109,186,1.022,187,2.086,188,6.434,189,6.434,190,6.675,191,4.341,192,6.434,193,6.434,194,6.434,195,6.434,196,5.325,197,6.434,198,5.765,199,6.434]],["title/components/AppComponent.html",[0,1.235,66,2.142]],["body/components/AppComponent.html",[0,1.297,1,1.094,2,1.864,3,0.026,4,0.026,5,1.182,6,1.207,7,1.182,8,1.182,9,0.026,11,0.602,12,2.249,13,1.055,14,3.801,15,3.625,16,1.793,18,1.793,20,0.153,21,0.491,22,3.209,23,0.892,24,2.788,25,0.929,28,3.737,29,1.905,31,1.265,32,0.005,33,0.658,34,0.536,35,0.927,36,3.705,38,1.386,39,2.374,40,0.516,41,0.131,42,0.142,46,0.026,47,0.139,49,1.787,50,2.48,51,1.542,56,1.793,59,0.894,60,1.864,61,1.864,62,1.019,63,2.731,64,1.182,65,1.182,66,2.576,67,1.182,68,1.075,69,1.182,70,1.094,71,1.137,72,1.182,73,1.115,74,1.37,75,2.292,76,2.731,77,1.115,78,2.731,79,1.094,80,1.182,81,1.094,82,1.182,83,1.094,84,1.182,85,1.094,86,1.558,87,1.182,88,1.094,89,1.182,90,1.094,91,1.182,92,1.094,93,0.793,94,1.115,95,1.832,96,1.115,97,1.115,98,1.182,99,1.115,100,0.908,101,1.094,102,1.182,103,1.094,104,1.182,105,1.115,106,1.182,107,1.075,108,1.182,109,1.115,110,1.606,111,1.115,112,1.115,113,1.182,114,1.094,115,1.817,116,1.075,117,1.094,118,1.182,119,1.094,120,1.182,121,1.094,122,1.182,123,1.094,124,1.159,125,1.182,126,0.002,127,0.002,151,0.985,160,1.075,161,0.934,172,4.028,173,4.675,179,1.848,180,1.154,182,1.287,185,0.73,187,1.373,190,5.037,191,2.859,200,2.634,201,5.313,202,4.236,203,4.125,204,4.376,205,4.679,206,5.313,207,5.519,208,5.519,209,5.976,210,5.313,211,4.315,212,3.278,213,4.905,214,5.313,215,3.289,216,4.236,217,4.236,218,5.454,219,3.506,220,4.236,221,2.36,222,3.119,223,5.253,224,4.679,225,3.904,226,4.905,227,2.634,228,2.36,229,3.8,230,2.634,231,6.087,232,4.236,233,3.289,234,2.634,235,3.289,236,4.236,237,3.116,238,4.236,239,4.236,240,2.634,241,2.634,242,2.634,243,4.028,244,1.352,245,2.166,246,2.634,247,2.634,248,2.634,249,0.923,250,4.236,251,4.236,252,4.236,253,2.634,254,2.634,255,5.313,256,1.427,257,4.236,258,4.236,259,2.72,260,2.634,261,2.634,262,1.532,263,2.169,264,2.634,265,2.634,266,1.979,267,3.289,268,2.634,269,2.634,270,2.634,271,2.18,272,2.045,273,3.796,274,1.094,275,1.848,276,2.36,277,2.634,278,2.36,279,2.36,280,2.634,281,2.36,282,2.36,283,2.634,284,2.634,285,2.634,286,2.634,287,2.634,288,4.236,289,1.848,290,2.634,291,2.634,292,2.634,293,2.634,294,2.045,295,2.634,296,2.408,297,2.634,298,2.634,299,2.485,300,1.456,301,1.94,302,2.18,303,2.634,304,1.848,305,2.18,306,1.497,307,2.634,308,1.611,309,2.36,310,2.36,311,2.634,312,1.645,313,2.36,314,4.236,315,4.236,316,4.236,317,1.645,318,1.349,319,2.36,320,2.36,321,2.045,322,2.36,323,2.634,324,2.634,325,2.36,326,2.045,327,1.704,328,2.634,329,2.634,330,2.634,331,2.634,332,2.36,333,2.045,334,2.634,335,4.236,336,2.634,337,2.634,338,2.045,339,2.36,340,2.634,341,2.634,342,2.634,343,2.634,344,2.634,345,2.634,346,2.634,347,2.634,348,2.634,349,2.045,350,2.36,351,2.634,352,2.18,353,2.634,354,2.634,355,2.634,356,2.634,357,2.634,358,2.634,359,2.634,360,2.634,361,2.634,362,2.634,363,2.634,364,2.634,365,2.634,366,2.634,367,2.634,368,5.313,369,2.18,370,2.634,371,2.634,372,4.236,373,2.634,374,2.18,375,2.18,376,2.36,377,2.18,378,4.236,379,4.236,380,4.236,381,4.236,382,4.236,383,4.236,384,4.236,385,4.236,386,4.236,387,4.236,388,3.796]],["title/modules/AppModule.html",[128,1.545,389,3.928]],["body/modules/AppModule.html",[3,0.038,4,0.038,9,0.038,15,1.462,32,0.005,41,0.153,42,0.211,43,2.679,44,1.566,46,0.056,47,0.206,59,1.327,66,3.988,95,2.048,126,0.003,127,0.003,128,1.194,130,1.462,131,1.868,132,3.484,133,3.484,134,2.577,135,1.512,140,2.939,141,1.954,142,2.001,144,2.221,145,2.26,150,2.001,151,1.462,152,2.104,154,2.051,160,1.595,172,4.529,182,1.91,186,0.495,187,1.267,222,1.828,224,4.028,225,3.361,226,4.223,276,5.145,278,3.503,279,3.503,281,3.503,282,3.503,389,7.231,390,3.503,391,3.503,392,3.503,393,3.503,394,6.143,395,4.747,396,3.503,397,5.742,398,3.503,399,3.235,400,5.742,401,5.742,402,3.909,403,3.054,404,5.742,405,1.828,406,5.145,407,5.145,408,5.145,409,5.145,410,5.145,411,5.145,412,5.145,413,5.145,414,5.145,415,5.145,416,5.145,417,5.145,418,5.145,419,5.145,420,5.145,421,5.145,422,5.145,423,5.145,424,5.145,425,5.145,426,5.145,427,3.909,428,5.145,429,3.503,430,3.235,431,5.145,432,5.145,433,3.503,434,3.235,435,5.145,436,5.145,437,3.503,438,3.909,439,4.752,440,4.752,441,4.752,442,3.909,443,5.145,444,3.503,445,5.145,446,5.145,447,3.264,448,5.145,449,5.145,450,5.145,451,5.145,452,3.909,453,2.441,454,5.742,455,1.996,456,4.39,457,2.161,458,5.742,459,2.222,460,5.742,461,2.222,462,3.909,463,2.001,464,1.095,465,5.145,466,3.503,467,3.235,468,4.752,469,3.909,470,4.458,471,2.743,472,5.742,473,3.503,474,3.909,475,3.235,476,6.805,477,3.235,478,3.235,479,4.248,480,3.909,481,5.005,482,3.909,483,3.503,484,3.503,485,3.909,486,3.909,487,2.529,488,3.909,489,3.909,490,6.563,491,3.503,492,3.503,493,3.503,494,7.989,495,3.235,496,9.843,497,2.629,498,2.529,499,2.441,500,2.441,501,3.503,502,2.529,503,2.441,504,2.441,505,8.352,506,3.909,507,3.909,508,3.909,509,2.288,510,3.909,511,3.909,512,3.909,513,3.909,514,6.805,515,3.909,516,3.909,517,3.909,518,3.909,519,3.909,520,3.909,521,3.909,522,3.503,523,3.909,524,3.909,525,3.909,526,3.909,527,3.909,528,3.909,529,3.909]],["title/modules/AppRoutingModule.html",[128,1.545,394,3.721]],["body/modules/AppRoutingModule.html",[3,0.052,4,0.052,9,0.052,32,0.005,41,0.13,42,0.291,46,0.052,47,0.284,115,1.468,126,0.004,127,0.004,130,2.015,135,2.085,144,2.085,145,2.831,157,2.901,158,4.047,159,3.871,160,2.199,161,0.755,162,4.387,165,5.952,168,6.445,294,5.584,394,5.291,499,3.365,500,3.365,502,3.487,503,3.365,530,5.39,531,7.193,532,6.445,533,5.39,534,5.39,535,3.964,536,10.129,537,5.39,538,10.129,539,5.39,540,5.39,541,5.39,542,4.83,543,5.39,544,5.39,545,5.39,546,7.193,547,7.193,548,5.39,549,7.193,550,7.193,551,3.964,552,5.39,553,5.39,554,4.46,555,5.39,556,5.39,557,5.39,558,5.39,559,5.39,560,5.39,561,4.46,562,5.39,563,5.39,564,5.39,565,5.39,566,5.39,567,5.39,568,5.39,569,5.39,570,5.39,571,5.39,572,5.39,573,5.39,574,5.39,575,5.39]],["title/injectables/BaseAuthenticationService.html",[178,0.534,222,2.366]],["body/injectables/BaseAuthenticationService.html",[3,0.047,4,0.047,9,0.047,11,0.688,20,0.28,21,0.775,23,1.409,25,1.466,29,2.048,31,1.592,32,0.005,33,0.673,34,0.563,35,1.168,38,1.863,39,1.724,41,0.13,42,0.261,46,0.047,47,0.255,49,1.922,126,0.003,127,0.003,177,4.693,178,0.706,180,1.32,184,0.846,185,0.835,187,3.036,203,5.194,204,4.645,212,3.126,222,3.129,243,4.991,244,2.081,245,3.334,266,2.884,267,5.194,576,1.697,577,6.492,578,4.009,579,5.179,580,5.536,581,5.536,582,5.536,583,6.341,584,6.341,585,5.194,586,6.839,587,8.992,588,6.078,589,4.498,590,6.416,591,4.328,592,4.844,593,4.124,594,4.844,595,4.009,596,4.844,597,4.844,598,4.844,599,5.194,600,4.844,601,3.761,602,4.844,603,5.994,604,4.844,605,4.34,606,7.421,607,4.844,608,4.844,609,5.536,610,4.844,611,5.536,612,4.844,613,4.34,614,5.536,615,4.34,616,5.536,617,4.844,618,4.34,619,1.594,620,4.328,621,4.34,622,2.753,623,0.98,624,2.677,625,4.844,626,4.844,627,4.844,628,4.844,629,4.844,630,4.844,631,4.844,632,4.844,633,4.009]],["title/injectables/BaseMediaService.html",[178,0.534,463,2.59]],["body/injectables/BaseMediaService.html",[3,0.071,4,0.071,9,0.071,20,0.423,23,1.835,29,1.497,31,1.517,32,0.005,33,0.641,34,0.432,35,1.112,38,1.517,41,0.131,42,0.394,46,0.071,47,0.384,126,0.004,127,0.004,178,0.919,180,1.988,184,1.275,185,1.258,204,4.551,266,2.585,463,4.46,576,2.557,577,5.637,587,8.645,634,4.149,635,7.21,636,6.04,637,5.149,638,7.299,639,4.408]],["title/injectables/BaseRepositoryFirebaseService.html",[178,0.534,640,4.533]],["body/injectables/BaseRepositoryFirebaseService.html",[3,0.034,4,0.034,9,0.034,11,0.499,15,1.313,20,0.203,21,0.614,23,1.116,25,1.162,29,1.8,31,1.732,32,0.005,33,0.732,34,0.494,35,1.27,38,1.668,40,0.745,41,0.132,42,0.189,46,0.034,47,0.185,49,2.202,74,0.791,86,1.291,95,1.057,110,0.846,115,0.957,126,0.003,127,0.003,161,1.168,178,0.559,180,0.957,184,0.613,185,0.605,186,1.133,212,1.432,244,0.78,245,3.317,266,2.655,274,2.202,301,3.817,306,3.013,308,2.016,350,3.146,447,1.996,455,1.477,499,2.192,500,2.192,502,2.272,503,2.192,576,1.23,579,3.436,619,1.156,623,0.71,640,4.749,641,7.405,642,4.473,643,2.361,644,6.385,645,4.131,646,2.713,647,2.65,648,2.853,649,2.853,650,3.529,651,5.301,652,2.853,653,2.121,654,4.957,655,1.645,656,5.301,657,3.201,658,2.479,659,3.848,660,3.511,661,3.755,662,2.533,663,3.511,664,1.347,665,2.272,666,1.29,667,1.691,668,3.201,669,3.269,670,2.906,671,2.273,672,2.781,673,3.511,674,5.301,675,3.146,676,3.511,677,2.479,678,3.511,679,3.511,680,2.121,681,2.121,682,2.272,683,3.146,684,2.361,685,3.511,686,3.511,687,3.511,688,3.511,689,3.511,690,5.301,691,3.511,692,3.511,693,3.511,694,5.301,695,3.511,696,1.89,697,3.511,698,2.479,699,1.276,700,1.545,701,3.146,702,1.996,703,1.797,704,1.459,705,1.755,706,0.613,707,0.683,708,2.726,709,3.511,710,2.121,711,2.726,712,2.272,713,3.146,714,3.511,715,3.146,716,7.113,717,3.511,718,3.511,719,3.511,720,5.301,721,3.511,722,3.511,723,3.511,724,3.511,725,3.511,726,3.511,727,3.511,728,3.511,729,8.334,730,7.635,731,5.134,732,1.842,733,3.103,734,3.511,735,2.726,736,2.906,737,7.635,738,3.511,739,3.511,740,2.718,741,5.769,742,7.113,743,3.511,744,3.511,745,3.511,746,3.511,747,3.511,748,3.511,749,3.511,750,3.146,751,3.511,752,6.385,753,3.511,754,3.511,755,3.511,756,3.511,757,3.511,758,3.511,759,1.755,760,5.301,761,3.201,762,3.511,763,6.385,764,6.385,765,2.192,766,6.385,767,5.301,768,5.301,769,3.511,770,3.146,771,0.998,772,3.511,773,3.511,774,3.511,775,3.511,776,3.511,777,3.511,778,3.511,779,3.511,780,3.511,781,3.511,782,3.511]],["title/injectables/BaseRepositoryHttpService.html",[178,0.534,783,3.158]],["body/injectables/BaseRepositoryHttpService.html",[3,0.047,4,0.047,9,0.047,11,0.691,20,0.282,23,1.413,25,1.47,29,1.841,31,1.866,32,0.005,33,0.789,34,0.532,35,1.368,38,1.805,40,0.769,41,0.146,42,0.262,46,0.047,47,0.256,56,2.059,126,0.003,127,0.003,178,0.708,180,1.325,182,2.376,184,0.849,185,0.838,186,1.1,222,2.275,266,2.886,274,2.021,299,2.275,301,2.228,308,1.85,403,3.715,405,2.275,455,1.551,576,1.704,579,4.674,619,1.601,620,5.355,623,0.984,641,7.614,642,4.6,646,3.434,647,3.354,648,3.61,649,3.61,652,3.61,655,1.776,658,3.138,659,3.801,661,3.872,662,3.206,664,1.138,665,3.146,666,1.193,667,1.617,668,4.051,669,3.931,671,1.731,672,3.519,677,3.138,698,3.138,699,1.615,700,2.14,702,2.765,703,2.49,704,2.021,705,2.431,706,0.849,707,0.946,710,2.937,783,4.188,784,4.864,785,4.025,786,2.971,787,5.168,788,4.188,789,4.864,790,4.051,791,4.864,792,4.864,793,4.864,794,4.864,795,4.864,796,3.036,797,3.577,798,2.937,799,3.146,800,2.324,801,3.412,802,2.431,803,4.025,804,3.776,805,3.146,806,1.577,807,1.577,808,3.036,809,3.146,810,3.146,811,3.146,812,2.14,813,3.519,814,3.146,815,3.036,816,3.146,817,4.864,818,2.765,819,2.376,820,2.765,821,4.864,822,2.49,823,4.864,824,4.864,825,4.864,826,4.864,827,4.864,828,4.864,829,4.864]],["title/injectables/BaseRespositoryLocalStorageService.html",[178,0.534,830,4.533]],["body/injectables/BaseRespositoryLocalStorageService.html",[3,0.045,4,0.045,9,0.045,11,0.66,20,0.434,21,0.752,23,1.368,25,1.018,29,1.901,31,1.839,32,0.005,33,0.777,34,0.538,35,1.348,38,1.839,40,0.753,41,0.136,42,0.251,46,0.045,47,0.245,49,1.879,126,0.003,127,0.003,161,0.651,178,0.685,180,1.265,184,0.811,185,0.8,186,1.082,187,2.429,244,1.443,245,2.312,266,2.83,455,1.502,576,1.626,619,1.528,623,0.939,641,7.794,642,4.708,646,3.325,647,3.247,648,3.496,649,3.496,652,3.496,655,1.733,658,3.038,659,3.845,661,3.994,662,3.104,664,1.312,665,3.004,666,1.169,667,1.709,668,3.923,669,3.835,671,1.653,672,3.408,677,3.038,698,3.038,699,1.564,700,2.043,702,2.639,703,2.377,704,1.929,705,2.321,706,0.811,707,0.903,765,2.899,771,1.32,788,2.899,798,2.804,822,3.325,830,5.82,831,5.688,832,3.842,833,6.496,834,7.492,835,4.643,836,4.643,837,4.643,838,4.643,839,4.643,840,4.643,841,4.643,842,4.643,843,4.643,844,4.643,845,4.643,846,4.643,847,4.643,848,3.842,849,4.643,850,4.643,851,4.643,852,4.643,853,4.643,854,4.643,855,4.643,856,4.643,857,4.643,858,4.643,859,4.643,860,4.643,861,4.643,862,4.643,863,7.492,864,7.492,865,4.643,866,6.496,867,6.496,868,4.643,869,4.643,870,3.692,871,6.496,872,6.496,873,4.643,874,1.736,875,4.643]],["title/injectables/BaseService.html",[178,0.534,876,3.273]],["body/injectables/BaseService.html",[3,0.048,4,0.048,9,0.048,11,0.701,20,0.285,23,1.426,25,1.484,29,1.957,31,1.955,32,0.005,33,0.826,34,0.557,35,1.433,38,1.955,40,0.738,41,0.139,42,0.266,46,0.048,47,0.26,126,0.003,127,0.003,178,0.714,180,1.343,184,0.861,185,0.85,186,1.105,244,1.095,245,1.755,266,2.984,576,1.727,577,6.247,579,2.654,619,1.623,642,3.385,646,3.466,647,3.385,648,5.197,649,3.645,652,3.645,658,3.167,659,3.817,661,4.082,662,3.236,664,1.146,665,5.387,666,1.435,667,1.981,668,5.445,669,4.616,671,2.753,672,3.553,677,3.167,698,3.894,700,2.169,704,2.048,705,2.465,706,0.861,707,0.959,818,3.849,820,2.803,874,2.532,876,4.381,877,4.931,878,3.315,879,4.931,880,4.931,881,4.931,882,4.931,883,4.931,884,4.931,885,4.931,886,3.459,887,4.931,888,4.931,889,4.227,890,4.931,891,2.725,892,3.828,893,4.418,894,2.306,895,4.931,896,4.931,897,4.931,898,4.08,899,4.931,900,4.931,901,4.931,902,4.931]],["title/interfaces/CollectionChange.html",[903,0.062,904,3.549]],["body/interfaces/CollectionChange.html",[3,0.068,4,0.068,9,0.068,20,0.404,21,0.981,32,0.005,34,0.593,35,1.292,39,2.482,40,0.753,41,0.127,46,0.082,126,0.004,127,0.004,180,1.9,266,2.515,659,3.866,664,1.408,704,2.897,705,3.486,903,0.104,904,5.946,905,0.977,906,5.413,907,5.77,908,2.055,909,6.718,910,6.718,911,6.718,912,4.891,913,5.77,914,5.77]],["title/interfaces/Data.html",[903,0.062,908,1.094]],["body/interfaces/Data.html",[3,0.053,4,0.053,9,0.053,11,0.782,20,0.319,21,0.845,32,0.005,33,0.765,34,0.432,40,0.674,41,0.136,42,0.297,46,0.092,47,0.29,74,1.642,126,0.004,127,0.004,161,1.146,178,0.77,184,0.962,185,0.949,186,1.222,244,1.223,453,3.437,455,1.273,464,1.543,623,1.114,655,1.687,664,1.38,666,1.255,667,1.159,699,1.326,706,1.274,707,1.07,903,0.114,905,0.771,908,2.176,915,3.325,916,1.869,917,2.809,918,4.239,919,3.043,920,2.133,921,1.869,922,1.758,923,3.203,924,2.547,925,2.522,926,1.439,927,1.439,928,1.869,929,1.5,930,4.905,931,2.752,932,1.5,933,3.702,934,1.706,935,1.869,936,1.633,937,3.702,938,1.657,939,3.043,940,1.633,941,1.521,942,1.869,943,1.657,944,1.657,945,1.657,946,2.206,947,1.657,948,1.5,949,3.702,950,4.905,951,1.869,952,1.869,953,1.869,954,1.706,955,1.869,956,1.869,957,1.5,958,5.108,959,2.777,960,1.5,961,1.5]],["title/interfaces/Data-1.html",[874,1.582,903,0.052,908,0.915]],["body/interfaces/Data-1.html",[3,0.045,4,0.045,9,0.045,11,0.666,20,0.271,21,0.757,32,0.005,33,0.753,34,0.387,40,0.73,41,0.133,42,0.253,46,0.063,47,0.247,74,1.472,95,1.968,100,2.809,110,1.962,126,0.003,127,0.003,161,1.141,178,0.69,184,0.818,185,0.807,186,1.177,244,1.041,249,1.641,256,1.098,455,1.512,456,2.743,459,2.663,464,1.313,623,0.948,655,1.512,664,1.35,666,1.36,667,0.987,699,1.128,706,1.142,707,0.911,740,1.668,771,2.14,903,0.116,905,0.656,908,2.161,916,1.59,917,2.751,920,1.912,921,1.59,922,1.496,923,2.404,924,1.912,926,1.225,927,1.225,928,1.59,929,1.277,932,1.277,934,1.452,935,1.59,936,2.756,938,2.796,940,1.39,941,1.295,942,1.59,943,1.41,944,1.41,945,1.41,946,1.877,947,1.41,948,1.277,951,1.59,952,1.59,953,1.59,954,1.452,955,1.59,956,1.59,957,1.277,959,2.555,960,1.277,961,1.277,962,2.59,963,5.195,964,2.343,965,2.716,966,2.061,967,2.876,968,1.911,969,4.385,970,2.743,971,4.17,972,4.17,973,3.323,974,2.146,975,4.17,976,4.17,977,3.948,978,1.983,979,2.743,980,2.83,981,2.743,982,2.743,983,2.743,984,2.743,985,2.83,986,2.486,987,1.59,988,2.146,989,2.83,990,2.83,991,2.83,992,2.83,993,2.83,994,2.83,995,2.83,996,2.83,997,1.782,998,2.83,999,3.948,1000,2.83,1001,2.83,1002,2.83,1003,2.83,1004,2.83,1005,2.83,1006,2.83,1007,2.83,1008,4.28]],["title/interfaces/Data-2.html",[903,0.052,908,0.915,1009,2.339]],["body/interfaces/Data-2.html",[3,0.048,4,0.048,9,0.048,20,0.289,21,0.79,25,1.093,32,0.005,34,0.404,40,0.647,41,0.147,42,0.269,46,0.085,47,0.263,49,1.25,56,2.11,126,0.003,127,0.003,161,0.698,178,0.72,180,1.358,182,2.436,184,0.871,185,0.859,186,1.237,222,2.332,256,1.169,266,2.599,274,2.071,299,2.332,301,2.283,308,1.896,403,3.062,405,2.332,455,1.153,619,1.641,623,1.009,642,2.492,655,1.153,658,2.332,659,3.709,661,2.332,662,2.382,664,1.24,666,1.335,667,1.437,669,2.552,671,1.774,677,2.332,698,2.332,699,1.643,700,2.193,702,2.834,703,2.552,704,2.071,705,2.492,706,0.871,707,0.969,710,3.011,765,3.112,783,4.26,786,2.64,787,4.26,788,3.112,790,3.011,796,3.112,798,3.011,799,3.225,800,3.261,801,3.497,802,2.492,805,3.225,806,1.616,807,2.212,808,3.112,809,3.225,810,3.225,811,3.225,812,2.193,813,3.58,814,3.225,815,3.112,816,3.225,818,2.834,819,2.436,820,2.834,874,1.864,903,0.103,905,0.698,908,1.809,917,2.593,924,2.275,1010,3.667,1011,3.352,1012,2.615,1013,3.352,1014,3.112,1015,5.457,1016,3.667,1017,2.918,1018,3.497,1019,1.417,1020,2.683,1021,5.891,1022,3.352,1023,2.683,1024,3.982,1025,2.683,1026,2.683,1027,2.683,1028,2.615,1029,3.112,1030,3.352,1031,3.352,1032,4.588,1033,3.667,1034,3.352,1035,3.352,1036,3.352,1037,4.588,1038,3.667,1039,5.722,1040,3.667,1041,3.352,1042,3.352,1043,3.667,1044,3.667,1045,3.352,1046,3.352,1047,3.352,1048,3.667,1049,3.352,1050,3.667,1051,3.352,1052,3.667,1053,3.352,1054,3.667,1055,3.667]],["title/interfaces/Data-3.html",[903,0.052,908,0.915,1056,2.968]],["body/interfaces/Data-3.html",[3,0.048,4,0.048,9,0.048,11,0.698,20,0.284,21,0.782,32,0.005,33,0.766,34,0.4,40,0.727,41,0.131,42,0.265,46,0.048,47,0.259,74,1.871,110,1.626,126,0.003,127,0.003,161,1.165,178,0.712,184,0.858,185,0.846,186,1.19,244,1.091,249,1.72,256,1.151,455,1.136,457,2.714,464,1.376,623,0.994,655,1.562,664,1.367,666,1.374,667,1.034,699,1.182,706,1.179,707,0.955,740,1.748,771,2.193,903,0.118,905,0.688,908,2.164,916,1.667,917,2.791,918,3.61,920,1.975,921,1.667,922,1.568,923,2.483,924,2.431,925,3.535,926,1.765,927,1.765,928,2.292,929,1.338,932,1.338,934,1.522,935,1.667,936,2.585,938,2.623,940,1.457,941,1.357,942,1.667,943,1.478,944,1.478,945,1.478,946,1.967,947,1.478,948,1.338,951,1.667,952,1.667,953,1.667,954,1.522,955,1.667,956,1.667,957,1.338,959,2.62,960,1.338,961,1.338,965,3.453,966,2.16,967,3.961,968,3.391,978,2.078,986,2.568,987,1.667,988,2.249,997,1.867,1057,2.643,1058,2.455,1059,4.255,1060,4.255,1061,3.953,1062,2.791,1063,2.643,1064,2.643,1065,2.874,1066,2.874,1067,2.874,1068,2.874,1069,2.874,1070,2.874,1071,3.953,1072,2.874,1073,2.874,1074,2.874,1075,2.874,1076,2.874,1077,4.266]],["title/interfaces/Data-4.html",[903,0.052,908,0.915,1078,2.968]],["body/interfaces/Data-4.html",[3,0.045,4,0.045,9,0.045,11,0.656,20,0.267,21,0.749,32,0.005,33,0.656,34,0.383,40,0.745,41,0.128,42,0.249,46,0.045,47,0.243,93,1.946,115,1.762,126,0.003,127,0.003,161,1.134,178,0.682,184,0.806,185,0.795,186,1.172,249,2.265,256,1.516,262,2.339,455,1.067,461,2.622,464,1.293,623,0.933,655,1.495,664,1.344,666,1.307,667,0.972,699,1.111,706,1.129,707,0.897,740,2.302,771,2.3,806,1.495,903,0.115,905,0.646,908,2.133,916,1.566,917,2.737,920,1.891,921,1.566,922,1.473,924,2.366,926,1.69,927,1.69,928,1.566,929,1.257,931,2.306,932,1.257,934,1.43,935,1.566,936,2.528,938,2.564,940,1.369,941,1.275,942,1.566,943,1.389,944,1.389,945,1.389,947,1.389,948,1.257,951,1.566,952,1.566,953,1.566,954,1.43,955,1.566,956,1.566,957,1.257,959,2.534,960,1.257,961,1.257,973,1.882,986,2.459,987,2.195,997,2.459,1079,2.55,1080,5.17,1081,1.953,1082,2.483,1083,3.676,1084,3.785,1085,2.158,1086,1.785,1087,1.882,1088,2.254,1089,2.254,1090,4.737,1091,3.785,1092,3.822,1093,2.786,1094,2.786,1095,2.483,1096,2.786,1097,2.786,1098,2.786,1099,2.786,1100,2.622,1101,2.786,1102,5.145,1103,2.786,1104,2.302,1105,2.786,1106,2.786,1107,2.786,1108,2.786,1109,2.786,1110,3.905,1111,2.786,1112,2.786,1113,2.786,1114,2.786,1115,5.145,1116,1.816,1117,2.786,1118,1.816,1119,2.786,1120,1.816,1121,2.786,1122,1.816,1123,2.786,1124,2.254,1125,2.786,1126,4.509]],["title/directives/DragDropDirective.html",[62,1.957,117,2.102]],["body/directives/DragDropDirective.html",[3,0.044,4,0.044,9,0.044,13,1.809,14,2.464,20,0.464,23,1.341,25,0.99,29,2.015,31,1.822,32,0.005,33,0.77,34,0.554,35,1.336,38,1.756,39,3.008,41,0.068,42,0.244,46,0.044,47,0.238,49,1.132,62,2.464,116,1.842,117,2.646,126,0.003,127,0.003,161,1.034,187,1.463,219,5.271,228,7.573,229,6.307,237,6.216,263,2.311,271,3.736,301,2.068,308,2.806,321,3.505,666,0.918,813,2.369,874,1.688,908,1.377,1127,9.889,1128,8.861,1129,4.515,1130,6.369,1131,6.369,1132,6.369,1133,6.369,1134,6.369,1135,5.707,1136,3.728,1137,8.015,1138,6.369,1139,7.379,1140,6.369,1141,6.369,1142,6.369,1143,6.369,1144,5.707,1145,3.505,1146,6.223,1147,6.106,1148,6.633,1149,6.369,1150,4.515,1151,4.515,1152,7.379,1153,6.369,1154,6.369,1155,6.369,1156,6.369,1157,6.369,1158,6.369,1159,9.889,1160,6.369,1161,6.369,1162,6.369,1163,6.369,1164,6.369,1165,6.369,1166,6.369,1167,6.369,1168,5.707,1169,3.777,1170,6.369,1171,4.515,1172,4.045,1173,2.311,1174,3.505,1175,3.167,1176,4.515,1177,4.515,1178,4.515,1179,4.515,1180,4.515,1181,6.633,1182,6.369,1183,6.369,1184,3.736,1185,6.369,1186,7.379,1187,3.321,1188,4.515,1189,4.515,1190,4.515,1191,4.515,1192,4.045,1193,4.515,1194,4.045,1195,3.976,1196,4.515,1197,4.515,1198,6.106,1199,4.515]],["title/directives/FilterByTeamDirective.html",[62,1.957,119,2.102]],["body/directives/FilterByTeamDirective.html",[3,0.059,4,0.059,9,0.059,11,1.1,13,2.417,14,2.996,20,0.349,23,1.631,25,1.323,29,1.85,31,1.254,32,0.005,33,0.53,34,0.507,35,0.919,38,1.254,39,2.756,41,0.116,42,0.326,46,0.059,47,0.318,49,1.513,56,2.554,61,3.407,62,2.996,95,1.816,116,2.461,119,3.217,126,0.004,127,0.004,161,1.085,186,0.764,244,1.72,245,2.756,308,2.945,502,5.533,771,2.431,822,3.089,1136,4.533,1145,4.685,1146,7.005,1147,7.077,1148,7.467,1169,4.378,1174,4.685,1175,4.233,1195,3.767,1200,9.331,1201,6.034,1202,7.663,1203,7.744,1204,8.085,1205,8.552,1206,7.744,1207,6.034,1208,6.034,1209,4.685,1210,4.233,1211,6.034,1212,5.406,1213,6.034,1214,6.034,1215,8.552,1216,6.034,1217,6.034,1218,6.034,1219,6.034,1220,6.034,1221,6.034,1222,7.744,1223,4.677,1224,5.406]],["title/injectables/FirebaseAuthMappingService.html",[178,0.534,1225,4.533]],["body/injectables/FirebaseAuthMappingService.html",[3,0.051,4,0.051,9,0.051,11,0.751,20,0.306,23,1.495,29,1.833,31,1.858,32,0.005,33,0.785,34,0.557,35,1.362,38,1.858,40,0.663,41,0.129,42,0.285,46,0.051,47,0.278,126,0.004,127,0.004,178,0.749,184,0.923,185,0.911,186,1.132,212,3.9,300,2.922,326,4.104,497,3.555,576,1.852,589,4.774,591,4.593,593,3.821,622,3.005,623,1.07,624,2.922,664,1.188,786,3.561,1085,4.008,1086,3.638,1225,6.362,1226,7.147,1227,3.3,1228,4.954,1229,4.712,1230,4.288,1231,7.597,1232,5.287,1233,5.897,1234,4.288,1235,5.287,1236,4.288,1237,5.287,1238,5.876,1239,4.433,1240,4.288,1241,5.287,1242,4.288,1243,5.287,1244,5.287,1245,4.737,1246,5.35,1247,7.1,1248,7.1,1249,5.287,1250,4.737,1251,4.737,1252,3.42,1253,4.375,1254,8.017,1255,8.017,1256,9.206]],["title/injectables/FirebaseAuthenticationService.html",[170,4.187,178,0.534]],["body/injectables/FirebaseAuthenticationService.html",[3,0.039,4,0.039,9,0.039,15,1.491,20,0.231,21,0.675,23,1.227,25,1.277,29,2.024,31,1.43,32,0.005,33,0.605,34,0.547,35,1.049,38,1.805,39,1.419,40,0.586,41,0.134,42,0.215,46,0.039,47,0.21,49,2.233,126,0.003,127,0.003,161,0.964,170,4.821,177,4.087,178,0.615,180,1.086,182,1.948,184,0.696,185,0.687,186,1.15,187,2.61,191,3.135,203,4.523,204,4.109,212,3.632,222,4.593,243,4.157,244,2.017,245,3.233,263,2.041,266,2.806,267,3.096,274,1.657,275,2.797,447,2.267,576,1.397,578,3.3,579,4.675,580,4.821,581,4.821,582,5.696,583,4.821,584,4.821,585,5.344,586,5.696,588,5.568,589,3.917,590,6.252,591,3.769,593,4.075,595,5.696,599,4.523,601,3.096,606,5.696,609,3.3,611,3.3,613,3.573,614,3.3,615,5.22,616,3.3,619,1.312,622,2.267,623,0.807,624,2.204,650,4.185,653,2.408,657,3.518,680,2.408,681,2.408,708,3.096,711,3.096,771,2.468,786,2.663,807,1.293,870,2.267,894,1.865,1019,1.656,1086,2.929,1226,6.252,1229,2.041,1245,3.573,1246,3.637,1257,6.884,1258,6.265,1259,5.474,1260,3.988,1261,3.988,1262,3.988,1263,3.988,1264,3.988,1265,5.22,1266,3.988,1267,3.573,1268,3.573,1269,3.573,1270,3.573,1271,3.573,1272,3.573,1273,3.573,1274,3.573,1275,3.573,1276,5.22,1277,2.797,1278,3.3,1279,3.988,1280,3.988,1281,3.988,1282,3.988,1283,3.988,1284,3.573,1285,3.573,1286,3.988,1287,3.988,1288,3.988,1289,6.884,1290,3.988,1291,3.573,1292,3.988,1293,5.22,1294,5.22,1295,3.573,1296,3.573,1297,3.573,1298,3.988,1299,3.988,1300,5.826,1301,5.826,1302,3.988,1303,3.988,1304,3.988,1305,3.988,1306,3.988,1307,3.988,1308,3.573,1309,3.988]],["title/injectables/FirebaseCollectionSubscriptionService.html",[178,0.534,1310,4.533]],["body/injectables/FirebaseCollectionSubscriptionService.html",[3,0.045,4,0.045,9,0.045,11,0.662,15,1.741,20,0.27,21,0.754,23,1.37,25,1.426,29,1.864,31,1.559,32,0.005,33,0.659,34,0.525,35,1.143,38,1.559,39,2.892,40,0.685,41,0.141,42,0.251,46,0.045,47,0.245,49,2.364,126,0.003,127,0.003,161,1.241,178,0.686,180,1.268,184,0.813,185,0.802,186,0.824,187,2.771,244,1.446,245,2.316,266,2.226,274,3.854,296,2.646,308,1.77,318,3.331,447,2.646,455,1.735,576,1.631,579,3.502,619,1.532,623,0.942,645,4.854,653,2.811,654,6.307,655,1.879,657,3.93,659,1.971,664,0.964,680,2.811,681,2.811,682,3.012,683,8.444,696,2.506,702,2.646,704,1.934,705,2.327,708,3.614,710,2.811,711,3.614,712,3.012,713,4.171,715,4.171,770,4.171,892,3.614,894,2.177,904,4.565,907,3.852,909,3.424,910,3.424,911,4.787,912,4.565,913,5.385,914,5.385,1173,2.383,1226,7.201,1310,5.831,1311,7.503,1312,7.503,1313,6.307,1314,5.385,1315,8.311,1316,6.508,1317,4.655,1318,4.655,1319,4.655,1320,4.655,1321,4.655,1322,6.508,1323,6.508,1324,4.655,1325,7.936,1326,6.508,1327,5.385,1328,4.655,1329,4.655,1330,4.655,1331,4.655,1332,4.655,1333,4.655,1334,5.385,1335,6.508,1336,4.655,1337,4.655,1338,4.655,1339,4.655,1340,4.655,1341,4.655,1342,4.655,1343,4.655,1344,4.655,1345,4.655,1346,4.655,1347,6.508,1348,4.655,1349,4.655,1350,4.171,1351,3.614,1352,4.655,1353,4.171,1354,4.655,1355,4.655,1356,4.655,1357,4.655,1358,4.655]],["title/interfaces/FirebaseLeague.html",[903,0.062,1359,4.187]],["body/interfaces/FirebaseLeague.html",[3,0.071,4,0.071,9,0.071,20,0.426,21,1.014,32,0.005,33,0.85,34,0.554,35,1.474,40,0.776,41,0.11,46,0.071,93,2.912,126,0.004,127,0.004,696,3.96,731,6.505,903,0.09,905,1.031,1104,3.443,1359,7.246,1360,5.162,1361,7.358]],["title/interfaces/FirebaseMatch.html",[903,0.062,1362,4.187]],["body/interfaces/FirebaseMatch.html",[3,0.065,4,0.065,9,0.065,20,0.388,21,0.958,32,0.005,34,0.595,35,1.494,40,0.783,41,0.101,46,0.065,126,0.004,127,0.004,696,3.605,731,6.847,903,0.082,905,0.938,974,4.491,1104,3.335,1360,4.699,1362,6.845,1363,6.699,1364,6.892,1365,6.301,1366,6.892,1367,6.892,1368,5.326,1369,7.275,1370,6.892,1371,6.699]],["title/interfaces/FirebaseMatchStatistics.html",[903,0.062,1372,4.187]],["body/interfaces/FirebaseMatchStatistics.html",[3,0.069,4,0.069,9,0.069,20,0.414,21,0.997,32,0.005,33,0.628,34,0.581,35,1.46,40,0.714,41,0.107,46,0.069,126,0.004,127,0.004,666,1.241,696,3.85,731,6.773,903,0.088,905,1.002,1104,3.411,1239,5.374,1360,5.018,1372,7.124,1373,7.153,1374,7.049,1375,6.444,1376,5.553,1377,5.553]],["title/injectables/FirebaseMediaService.html",[178,0.534,1378,4.533]],["body/injectables/FirebaseMediaService.html",[3,0.056,4,0.056,9,0.056,13,2.309,15,2.155,20,0.334,21,0.87,23,1.583,25,1.648,29,1.715,31,1.562,32,0.005,33,0.66,34,0.445,35,1.145,38,1.197,41,0.144,42,0.311,46,0.056,47,0.303,49,2.224,126,0.004,127,0.004,161,1.242,178,0.793,180,1.57,184,1.006,185,0.993,186,0.952,187,1.868,204,4.088,212,2.351,266,2.482,274,2.394,305,4.769,447,3.275,463,4.539,464,1.615,576,2.018,579,3.101,619,1.896,620,5.736,621,5.163,634,3.275,635,6.221,636,6.221,637,5.084,653,3.48,657,4.539,680,3.48,681,3.48,708,4.474,711,4.474,786,3.236,797,4.238,804,4.474,806,1.868,807,1.868,870,3.275,894,2.695,1019,2.136,1226,6.495,1259,3.275,1378,6.735,1379,7.496,1380,7.517,1381,5.762,1382,5.762,1383,5.762,1384,5.762,1385,5.762,1386,7.517,1387,5.762,1388,4.238,1389,3.48,1390,5.762,1391,5.762,1392,5.762,1393,5.762,1394,5.762,1395,5.762,1396,5.762,1397,5.762,1398,5.762,1399,5.762,1400,5.762,1401,5.762,1402,5.762,1403,5.762,1404,5.762,1405,5.762,1406,5.762,1407,5.762,1408,5.762,1409,5.762,1410,5.762]],["title/interfaces/FirebasePlayer.html",[903,0.062,1411,3.721]],["body/interfaces/FirebasePlayer.html",[3,0.063,4,0.063,9,0.063,20,0.375,21,0.937,32,0.005,33,0.813,34,0.6,35,1.519,40,0.806,41,0.097,46,0.063,93,2.786,100,3.191,110,2.229,126,0.004,127,0.004,666,1.273,696,3.482,731,6.632,903,0.079,905,0.906,971,4.738,972,4.738,973,3.776,974,4.046,975,4.738,976,4.738,1104,3.295,1360,4.538,1411,5.953,1412,6.469]],["title/interfaces/FirebaseTeam.html",[903,0.062,1413,4.187]],["body/interfaces/FirebaseTeam.html",[3,0.066,4,0.066,9,0.066,20,0.395,21,0.969,32,0.005,33,0.829,34,0.591,35,1.501,40,0.762,41,0.102,46,0.066,74,2.124,93,2.839,126,0.004,127,0.004,666,1.463,696,3.674,731,6.708,903,0.084,905,0.956,968,3.848,1059,4.828,1060,4.828,1104,3.357,1360,4.789,1413,6.924,1414,6.826]],["title/interfaces/FirebaseUser.html",[903,0.062,1231,3.928]],["body/interfaces/FirebaseUser.html",[3,0.064,4,0.064,9,0.064,20,0.381,21,0.948,32,0.005,33,0.782,34,0.598,35,1.548,40,0.797,41,0.099,46,0.064,93,2.681,126,0.004,127,0.004,696,3.546,731,6.658,903,0.081,905,0.923,1086,3.445,1092,4.559,1095,3.546,1104,3.316,1124,4.352,1231,6.355,1360,4.622,1415,6.588,1416,6.915,1417,7.37,1418,7.37,1419,4.846,1420,4.846,1421,5.903,1422,5.452,1423,5.903,1424,5.903,1425,4.622,1426,5.903,1427,6.588,1428,6.588,1429,6.588,1430,6.588]],["title/interfaces/Formats.html",[903,0.062,1431,3.055]],["body/interfaces/Formats.html",[3,0.047,4,0.047,9,0.047,20,0.282,21,0.778,25,1.069,32,0.005,33,0.764,34,0.515,40,0.805,41,0.135,42,0.263,46,0.094,47,0.257,49,2.079,126,0.003,127,0.003,161,0.942,162,3.576,180,1.329,186,0.974,187,1.581,204,2.383,256,1.143,266,1.447,274,2.026,403,2.189,405,2.281,463,3.44,464,1.367,509,2.855,619,1.605,634,2.772,637,2.696,639,2.945,664,0.723,666,1.447,759,4.346,786,1.887,800,3.212,802,2.438,806,2.818,807,1.581,894,2.281,903,0.115,905,0.683,920,1.426,926,1.275,927,1.275,1012,2.559,1019,1.386,1020,2.625,1023,2.625,1024,3.937,1025,2.625,1026,2.625,1027,2.625,1028,2.559,1087,1.989,1116,3.693,1118,3.693,1120,3.693,1122,3.693,1389,2.945,1431,5.005,1432,2.331,1433,2.945,1434,2.945,1435,3.934,1436,3.045,1437,3.045,1438,3.045,1439,3.045,1440,4.248,1441,4.248,1442,5.427,1443,5.427,1444,5.427,1445,3.045,1446,5.427,1447,5.427,1448,3.045,1449,3.045,1450,2.945,1451,3.045,1452,3.045,1453,2.945,1454,4.801,1455,3.045,1456,2.945,1457,3.045,1458,3.045,1459,3.045,1460,3.045]],["title/interfaces/GroupRaw.html",[903,0.062,1461,3.158]],["body/interfaces/GroupRaw.html",[3,0.055,4,0.055,9,0.055,11,0.801,20,0.326,21,0.858,32,0.005,34,0.439,40,0.796,41,0.137,42,0.304,46,0.091,47,0.297,115,1.535,126,0.004,127,0.004,178,0.781,184,0.984,185,0.971,186,1.157,212,3.824,262,3.18,593,3.987,622,3.203,623,1.14,624,3.115,664,1.389,666,1.068,706,0.984,707,1.096,786,2.18,812,3.867,903,0.117,905,0.79,926,1.936,927,1.936,1081,2.385,1085,3.465,1086,2.866,1087,3.022,1088,3.62,1089,3.62,1227,3.518,1228,3.033,1229,2.885,1230,3.403,1234,3.403,1236,3.403,1240,3.403,1242,3.403,1432,2.693,1461,4.625,1462,4.474,1463,4.474,1464,4.625,1465,5.166,1466,4.474,1467,3.518,1468,3.646,1469,4.337,1470,3.518,1471,3.299,1472,3.299,1473,3.518,1474,3.646,1475,3.646,1476,4.793,1477,3.646,1478,3.646,1479,3.646,1480,3.646,1481,4.793,1482,4.793,1483,4.793,1484,3.646,1485,3.646,1486,3.646]],["title/directives/HighLightDirective.html",[62,1.957,121,2.102]],["body/directives/HighLightDirective.html",[3,0.045,4,0.045,9,0.045,13,1.865,14,2.517,20,0.27,21,0.754,23,1.37,25,1.02,29,1.996,31,1.559,32,0.005,33,0.659,34,0.525,35,1.143,38,1.776,39,3.043,40,0.753,41,0.07,42,0.251,46,0.045,47,0.245,49,2.461,56,3.176,62,2.517,116,1.899,121,2.704,126,0.003,127,0.003,219,5.385,237,5.518,244,1.667,245,2.67,271,3.852,296,3.699,308,3.457,320,4.171,732,3.414,1135,7.279,1136,3.809,1144,5.831,1145,3.614,1146,6.307,1147,6.209,1148,6.723,1168,5.831,1169,2.383,1175,3.266,1194,4.171,1195,2.906,1487,9.811,1488,8.79,1489,8.79,1490,4.655,1491,8.124,1492,7.503,1493,7.503,1494,8.124,1495,8.124,1496,6.508,1497,6.508,1498,6.508,1499,6.508,1500,6.508,1501,6.508,1502,7.503,1503,7.503,1504,5.518,1505,4.655,1506,6.508,1507,6.508,1508,6.508,1509,6.508,1510,6.508,1511,6.508,1512,4.655,1513,4.859,1514,6.508,1515,4.655,1516,4.787,1517,4.655,1518,4.655,1519,4.655,1520,7.074,1521,6.508,1522,4.171,1523,4.655,1524,5.052,1525,4.655,1526,4.655,1527,4.655,1528,2.811,1529,3.93,1530,2.906,1531,4.655,1532,4.655,1533,3.852,1534,4.655,1535,4.171,1536,4.655,1537,4.655,1538,4.655,1539,4.655,1540,4.655,1541,4.655,1542,4.655,1543,4.655,1544,4.655,1545,4.655,1546,4.655,1547,6.508,1548,4.655,1549,2.725]],["title/components/HomePage.html",[0,1.235,68,2.064]],["body/components/HomePage.html",[0,1.762,1,1.803,2,2.724,3,0.042,4,0.042,5,1.948,6,1.988,7,1.948,8,1.948,9,0.042,13,1.739,14,3.989,15,3.83,16,2.621,18,2.621,20,0.251,21,0.717,22,3.74,25,1.357,26,3.591,27,4.352,28,4.675,29,1.481,31,0.902,32,0.005,33,0.692,34,0.428,35,0.661,36,4.265,40,0.336,41,0.108,42,0.234,43,1.708,44,1.739,45,2.467,46,0.042,47,0.229,48,2.918,49,1.553,50,2.541,51,2.541,52,5.549,59,1.473,60,2.724,61,2.724,62,1.679,63,3.534,64,1.948,65,1.948,66,1.837,67,1.948,68,3.212,69,1.948,70,1.803,71,1.872,72,1.948,73,1.837,74,1.394,75,3.115,76,3.534,77,1.837,78,3.534,79,1.803,80,1.948,81,1.803,82,1.948,83,1.803,84,1.948,85,1.803,86,2.277,87,1.948,88,1.803,89,1.948,90,1.803,91,1.948,92,1.803,93,1.306,94,1.837,95,1.864,96,1.837,97,1.837,98,1.948,99,1.837,100,1.496,101,1.803,102,1.948,103,1.803,104,1.948,105,1.837,106,1.948,107,1.77,108,1.948,109,1.837,110,1.491,111,1.837,112,1.837,113,1.948,114,1.803,115,1.182,116,1.77,117,1.803,118,1.948,119,1.803,120,1.948,121,1.803,122,1.948,123,1.803,124,1.909,125,1.948,126,0.003,127,0.003,244,0.964,245,1.545,499,3.866,500,3.866,502,4.006,503,3.866,535,4.555,1550,4.34,1551,7.221,1552,6.193,1553,7.221,1554,6.193,1555,5.687,1556,5.549,1557,7.539,1558,6.193,1559,9.111,1560,9.111,1561,6.193,1562,6.193,1563,6.193,1564,6.193,1565,6.193,1566,6.193,1567,6.193,1568,6.193,1569,6.193,1570,6.193,1571,4.34,1572,6.193,1573,6.193,1574,6.193,1575,6.193,1576,6.193,1577,6.193]],["title/modules/HomePageModule.html",[128,1.545,1578,3.928]],["body/modules/HomePageModule.html",[3,0.066,4,0.066,9,0.066,32,0.005,41,0.15,42,0.367,43,2.677,44,2.725,46,0.066,47,0.358,59,2.308,68,4.014,126,0.004,127,0.004,128,2.077,130,2.543,131,3.25,132,4.624,133,3.481,134,3.052,135,2.631,140,4.273,141,3.4,142,3.481,144,3.229,145,3.286,146,4.493,147,3.481,148,4.493,149,2.725,150,4.273,151,2.543,152,3.66,154,3.568,155,3.759,535,5.002,1578,7.815,1579,6.093,1580,6.093,1581,6.093,1582,7.238,1583,6.8,1584,6.093]],["title/modules/HomePageRoutingModule.html",[128,1.545,1582,3.721]],["body/modules/HomePageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,68,3.593,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,1582,6.48,1584,6.662,1585,7.435]],["title/interfaces/IAuthMapping.html",[593,2.723,903,0.062]],["body/interfaces/IAuthMapping.html",[3,0.064,4,0.064,9,0.064,20,0.382,23,1.726,29,1.965,31,1.992,32,0.005,33,0.842,34,0.568,35,1.461,38,1.992,41,0.123,46,0.064,115,1.798,126,0.004,127,0.004,212,3.803,589,5.511,591,5.302,593,4.411,624,3.648,903,0.081,905,0.925,1081,2.794,1228,5.159,1229,4.907,1230,3.986,1233,6.556,1234,3.986,1236,3.986,1238,6.782,1240,3.986,1242,3.986,1586,9.77,1587,5.914,1588,5.914,1589,5.914,1590,6.6,1591,5.914,1592,6.6,1593,6.6,1594,6.6,1595,6.6,1596,6.6,1597,6.6]],["title/interfaces/IAuthentication.html",[620,3.273,903,0.062]],["body/interfaces/IAuthentication.html",[3,0.068,4,0.068,9,0.068,20,0.408,23,1.796,29,2.002,31,1.772,32,0.005,33,0.749,34,0.505,35,1.299,38,2.029,41,0.106,46,0.068,126,0.004,127,0.004,177,4.939,180,1.918,266,2.896,588,6.746,589,5.733,590,7.121,591,5.516,599,5.466,601,5.466,603,6.309,605,6.309,620,5.516,633,5.826,903,0.086,905,0.986,1598,7.041,1599,7.041,1600,7.041,1601,7.041,1602,7.041,1603,7.041,1604,7.041,1605,7.041,1606,7.041,1607,7.041]],["title/interfaces/IBaseMapping.html",[655,1.17,903,0.062]],["body/interfaces/IBaseMapping.html",[3,0.058,4,0.058,9,0.058,20,0.349,23,1.629,29,1.99,31,2.017,32,0.005,33,0.853,34,0.575,35,1.479,38,2.017,41,0.128,46,0.058,126,0.004,127,0.004,180,1.641,266,1.787,655,1.789,659,4.04,666,1.399,667,1.8,671,2.144,704,2.503,705,3.011,706,1.351,707,1.171,903,0.074,905,0.844,908,2.126,929,1.641,932,1.641,940,1.787,941,1.664,948,1.641,957,1.641,960,1.641,961,1.641,1587,5.397,1588,5.397,1589,5.397,1591,5.397,1608,8.136,1609,4.058,1610,4.058,1611,4.058,1612,4.058,1613,4.058,1614,4.058,1615,4.058,1616,6.024,1617,3.16,1618,3.543,1619,6.024,1620,6.024,1621,6.024,1622,6.024,1623,6.024,1624,6.024,1625,6.024,1626,6.024,1627,6.024,1628,6.024]],["title/interfaces/IBaseRepository.html",[698,2.366,903,0.062]],["body/interfaces/IBaseRepository.html",[3,0.058,4,0.058,9,0.058,20,0.344,23,1.613,29,1.903,31,1.929,32,0.005,33,0.815,34,0.55,35,1.415,38,1.929,40,0.778,41,0.127,46,0.074,126,0.004,127,0.004,180,1.617,266,2.983,299,2.775,300,3.28,308,2.913,349,4.607,646,3.922,647,3.83,648,4.123,649,4.123,652,4.123,658,3.583,659,4.024,661,4.194,662,3.661,664,1.329,665,3.839,666,1.292,667,1.613,668,4.627,669,4.343,671,2.112,672,4.019,677,3.583,698,3.583,704,2.465,705,2.967,706,1.036,707,1.154,818,3.373,819,2.899,820,3.373,903,0.094,905,0.831,1608,7.867,1629,3.839,1630,5.934,1631,5.934,1632,5.934,1633,5.934,1634,5.934,1635,3.839,1636,5.317,1637,5.317,1638,3.113,1639,4.607,1640,5.317,1641,5.317]],["title/interfaces/IBaseService.html",[889,3.158,903,0.062]],["body/interfaces/IBaseService.html",[3,0.056,4,0.056,9,0.056,20,0.336,23,1.591,29,1.974,31,1.964,32,0.005,33,0.83,34,0.56,35,1.44,38,2,40,0.763,41,0.126,46,0.056,126,0.004,127,0.004,180,1.583,266,3.021,646,3.868,647,3.778,648,5.18,649,4.067,652,4.067,658,3.534,659,4.001,661,4.16,662,3.611,664,1.245,665,4.888,666,1.406,667,1.873,668,4.563,669,4.299,671,2.69,672,3.964,677,3.534,700,2.555,706,1.015,707,1.129,818,4.295,819,3.692,820,3.302,889,4.717,892,4.51,903,0.071,905,0.814,1642,9.758,1643,3.906,1644,5.809,1645,5.809,1646,5.809,1647,4.807,1648,5.809,1649,5.809,1650,5.809,1651,5.809]],["title/interfaces/ICollectionSubscription.html",[903,0.062,912,3.549]],["body/interfaces/ICollectionSubscription.html",[3,0.067,4,0.067,9,0.067,20,0.401,23,1.779,29,1.732,31,1.755,32,0.005,33,0.742,34,0.54,35,1.287,38,1.755,39,3.006,40,0.774,41,0.127,46,0.082,126,0.004,127,0.004,180,1.889,266,2.703,654,6.558,659,2.934,664,1.027,704,2.88,705,3.465,903,0.104,904,4.863,905,0.971,906,7.073,907,5.736,908,1.499,909,5.099,910,5.099,911,5.099,912,5.925,913,6.99,914,6.99,1314,6.99,1315,7.568,1652,6.932,1653,6.932]],["title/interfaces/ILeagueRepository.html",[903,0.062,1654,4.187]],["body/interfaces/ILeagueRepository.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.136,46,0.075,74,1.746,126,0.005,127,0.005,698,4.469,700,3.412,807,2.514,903,0.095,905,1.087,919,4.287,1019,2.567,1629,5.018,1654,7.474,1655,7.756]],["title/interfaces/ILeagueService.html",[903,0.062,1656,4.187]],["body/interfaces/ILeagueService.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.136,46,0.075,74,1.746,126,0.005,127,0.005,807,2.514,889,5.965,891,4.287,903,0.095,905,1.087,919,4.287,1019,2.567,1643,5.215,1656,7.474,1657,7.756]],["title/interfaces/IMatchRepository.html",[903,0.062,1658,4.187]],["body/interfaces/IMatchRepository.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.136,46,0.075,86,2.852,126,0.005,127,0.005,698,4.469,700,3.412,807,2.514,903,0.095,905,1.087,1019,2.567,1629,5.018,1658,7.474,1659,7.756,1660,6.022]],["title/interfaces/IMatchService.html",[903,0.062,1661,4.187]],["body/interfaces/IMatchService.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.136,46,0.075,86,2.852,126,0.005,127,0.005,807,2.514,889,5.965,891,4.287,903,0.095,905,1.087,1019,2.567,1643,5.215,1660,6.022,1661,7.474,1662,7.756]],["title/interfaces/IMatchStatsRepository.html",[903,0.062,1663,4.533]],["body/interfaces/IMatchStatsRepository.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.136,46,0.075,126,0.005,127,0.005,504,4.842,698,4.469,700,3.412,807,2.514,903,0.095,905,1.087,1019,2.567,1629,5.018,1663,8.092,1664,7.756,1665,6.022]],["title/interfaces/IMatchStatsService.html",[903,0.062,1666,4.187]],["body/interfaces/IMatchStatsService.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.136,46,0.075,126,0.005,127,0.005,504,4.842,807,2.514,889,5.965,891,4.287,903,0.095,905,1.087,1019,2.567,1643,5.215,1665,6.022,1666,7.474,1667,7.756]],["title/interfaces/IPlayerRepository.html",[903,0.062,1668,4.187]],["body/interfaces/IPlayerRepository.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.136,46,0.075,95,2.335,126,0.005,127,0.005,698,4.469,700,3.412,807,2.514,903,0.095,905,1.087,964,3.878,1019,2.567,1629,5.018,1668,7.474,1669,7.756]],["title/interfaces/IPlayerService.html",[903,0.062,1670,4.187]],["body/interfaces/IPlayerService.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.136,46,0.075,95,2.335,126,0.005,127,0.005,807,2.514,889,5.965,891,4.287,903,0.095,905,1.087,964,3.878,1019,2.567,1643,5.215,1670,7.474,1671,7.756]],["title/interfaces/IStrapiAuthentication.html",[800,2.418,903,0.062]],["body/interfaces/IStrapiAuthentication.html",[3,0.073,4,0.073,9,0.073,20,0.433,23,1.862,29,1.534,32,0.005,38,1.555,40,0.579,41,0.133,46,0.073,126,0.004,127,0.004,180,2.038,266,2.219,620,6.089,771,2.513,800,4.226,802,3.74,903,0.092,905,1.048,1019,2.513,1258,7.789,1672,8.842,1673,7.481,1674,7.481,1675,7.481]],["title/interfaces/ITeamRepository.html",[903,0.062,1676,4.187]],["body/interfaces/ITeamRepository.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.136,46,0.075,110,1.868,126,0.005,127,0.005,698,4.469,700,3.412,807,2.514,903,0.095,905,1.087,1019,2.567,1058,3.878,1629,5.018,1676,7.474,1677,7.756]],["title/interfaces/ITeamService.html",[903,0.062,1678,4.187]],["body/interfaces/ITeamService.html",[3,0.068,4,0.068,9,0.068,20,0.408,23,1.798,29,1.447,31,1.466,32,0.005,33,0.62,34,0.418,35,1.075,38,1.466,40,0.71,41,0.143,46,0.068,74,1.588,110,1.699,126,0.004,127,0.004,180,1.922,266,2.723,666,1.431,667,1.933,671,3.267,706,1.232,707,1.371,807,2.287,889,5.731,891,3.899,903,0.086,905,0.988,1019,2.426,1058,3.527,1643,4.743,1647,5.838,1678,7.064,1679,8.537,1680,7.649,1681,7.649]],["title/interfaces/IUserRepository.html",[903,0.062,1682,4.187]],["body/interfaces/IUserRepository.html",[3,0.075,4,0.075,9,0.075,32,0.005,41,0.135,46,0.075,115,2.109,126,0.005,127,0.005,698,4.465,700,3.405,807,2.509,903,0.095,905,1.084,1019,2.563,1081,3.276,1629,5.007,1682,7.464,1683,7.74]],["title/interfaces/IUserService.html",[903,0.062,1684,4.187]],["body/interfaces/IUserService.html",[3,0.07,4,0.07,9,0.07,20,0.417,23,1.819,29,1.476,31,1.495,32,0.005,33,0.632,34,0.426,35,1.097,38,1.495,40,0.716,41,0.139,46,0.07,115,1.961,126,0.004,127,0.004,180,1.961,266,2.747,732,3.775,807,2.333,889,5.78,891,3.978,903,0.088,905,1.008,1019,2.455,1081,3.046,1104,2.561,1638,3.775,1643,4.839,1647,5.955,1684,7.15,1685,8.64,1686,7.741,1687,7.741,1688,4.839,1689,4.655,1690,4.492]],["title/injectables/JsonServerRepositoryService.html",[178,0.534,1691,4.187]],["body/injectables/JsonServerRepositoryService.html",[3,0.044,4,0.044,9,0.044,20,0.263,23,1.346,25,1.401,29,1.801,31,1.825,32,0.005,33,0.772,34,0.52,35,1.339,38,1.76,40,0.756,41,0.144,42,0.245,46,0.062,47,0.239,56,1.921,126,0.003,127,0.003,178,0.674,180,1.236,182,2.217,184,0.792,185,0.782,186,1.187,222,2.122,244,1.008,245,1.615,266,2.779,274,1.885,299,2.122,301,2.078,308,1.726,403,3.605,405,2.122,455,1.711,576,1.589,619,1.493,620,5.197,623,0.918,642,2.268,646,3.272,647,3.195,648,3.44,649,3.44,652,3.44,655,1.711,658,2.989,659,3.821,661,3.757,662,2.168,664,1.097,665,2.935,666,1.328,667,1.558,668,3.86,669,3.788,671,1.615,672,2.381,677,2.989,698,2.122,699,1.539,700,1.996,702,2.579,703,2.323,704,1.885,705,2.268,706,0.792,707,0.882,710,2.74,761,2.74,765,2.833,783,5.753,785,3.755,786,3.107,787,5.015,788,4.619,790,3.86,796,2.833,797,3.337,798,2.74,799,2.935,803,3.755,804,3.523,805,2.935,806,1.471,807,2.072,808,2.833,809,2.935,810,2.935,811,2.935,812,1.996,813,3.353,814,2.935,815,2.833,816,2.935,818,2.579,819,2.217,820,2.579,874,1.697,903,0.056,908,0.981,1011,3.051,1013,3.051,1014,2.833,1019,1.816,1021,4.975,1022,3.051,1029,2.833,1030,3.051,1031,3.051,1032,4.298,1034,3.051,1035,3.051,1036,3.051,1037,4.298,1041,3.051,1042,3.051,1045,3.051,1046,3.051,1047,3.051,1049,3.051,1051,3.051,1053,3.051,1259,4.813,1618,2.078,1691,5.289,1692,5.727,1693,5.289,1694,4.538,1695,4.538,1696,4.538,1697,4.538,1698,4.538,1699,4.066,1700,4.066,1701,4.066,1702,5.727,1703,2.74,1704,4.066,1705,4.066,1706,4.066,1707,5.727,1708,4.066,1709,4.066,1710,4.066,1711,4.066,1712,4.066]],["title/interfaces/Language.html",[71,2.183,903,0.062]],["body/interfaces/Language.html",[0,1.708,3,0.05,4,0.05,9,0.05,11,0.735,12,2.189,14,2.706,15,1.934,16,2.189,18,2.189,20,0.299,21,0.81,25,1.134,28,4.159,32,0.005,33,0.876,34,0.47,39,3.256,40,0.767,41,0.119,42,0.279,45,2.94,46,0.05,47,0.272,49,1.297,56,2.961,70,2.907,71,3.946,126,0.003,127,0.003,134,2.321,149,2.072,186,0.655,245,2.49,259,4.059,262,1.871,263,2.648,490,3.346,733,4.096,848,8.298,903,0.063,905,0.725,1173,2.648,1713,4.635,1714,4.28,1715,4.635,1716,8.935,1717,4.704,1718,5.432,1719,4.704,1720,4.635,1721,4.635,1722,3.478,1723,3.478,1724,4.635,1725,4.635,1726,4.016,1727,4.635,1728,6.269,1729,4.635,1730,4.635,1731,4.635,1732,4.635,1733,4.635,1734,4.635,1735,6.269,1736,4.635,1737,6.269,1738,4.635,1739,6.269,1740,4.635,1741,4.635,1742,4.28,1743,4.016,1744,7.611,1745,4.635,1746,4.28,1747,4.635,1748,4.635,1749,5.432,1750,7.104,1751,4.635,1752,4.635,1753,4.635,1754,4.635,1755,6.269,1756,4.635,1757,4.635,1758,4.635,1759,4.28,1760,3.629,1761,4.635,1762,4.908,1763,3.629,1764,3.804,1765,3.804]],["title/components/LanguageSelectorComponent.html",[0,1.235,70,2.102]],["body/components/LanguageSelectorComponent.html",[0,1.227,1,1.009,2,1.745,3,0.024,4,0.024,5,1.09,6,2.303,7,1.09,8,1.09,9,0.024,11,0.564,12,1.028,13,0.973,14,3.796,15,3.583,16,1.679,18,1.679,20,0.23,21,0.459,23,0.835,25,0.869,28,3.6,29,1.778,31,1.426,32,0.005,33,0.848,34,0.476,35,1.046,36,2.504,38,1.505,39,2.988,40,0.637,41,0.075,42,0.131,45,1.381,46,0.024,47,0.128,49,0.609,56,2.457,59,0.825,60,1.745,61,1.745,62,0.94,63,2.604,64,1.09,65,1.09,66,1.028,67,1.09,68,0.991,69,1.09,70,2.851,71,4.055,72,1.09,73,1.028,74,0.893,75,2.169,76,2.604,77,1.028,78,2.604,79,1.009,80,1.09,81,1.009,82,1.09,83,1.009,84,1.09,85,1.009,86,1.459,87,1.09,88,1.009,89,1.09,90,1.009,91,1.09,92,1.009,93,0.731,94,1.028,95,1.194,96,1.028,97,1.028,98,1.09,99,1.028,100,1.733,101,1.009,102,1.09,103,1.009,104,1.09,105,1.028,106,1.09,107,0.991,108,1.09,109,1.028,110,0.955,111,1.028,112,1.028,113,1.09,114,1.009,115,0.662,116,0.991,117,1.009,118,1.09,119,1.009,120,1.09,121,1.009,122,1.09,123,1.009,124,1.069,125,1.09,126,0.002,127,0.002,134,1.78,141,1.214,149,0.973,186,0.308,187,0.787,221,2.177,244,1.524,245,2.688,249,0.851,259,3.274,262,1.819,263,2.031,299,1.855,300,1.343,301,1.113,306,1.381,308,1.912,490,2.566,733,3.397,759,2.513,761,1.467,822,3.706,848,7.732,903,0.03,1173,2.031,1184,2.01,1195,1.516,1223,1.467,1440,3.69,1441,1.938,1504,3.698,1513,4.568,1516,1.787,1528,2.396,1529,5.307,1530,2.476,1549,4.574,1713,7.874,1714,7.272,1715,2.177,1716,8.196,1717,3.38,1718,3.903,1719,3.38,1720,3.554,1721,4.505,1722,2.667,1723,2.667,1724,4.505,1725,3.554,1726,3.08,1727,3.554,1728,5.2,1729,3.554,1730,3.554,1731,3.554,1732,3.554,1733,3.554,1734,3.554,1735,5.2,1736,3.554,1737,5.2,1738,3.554,1739,5.2,1740,3.554,1741,4.505,1742,4.16,1743,3.903,1744,5.2,1745,2.177,1746,4.16,1747,4.505,1748,5.2,1749,3.08,1750,4.505,1751,3.554,1752,2.177,1753,2.177,1754,2.177,1755,3.554,1756,5.2,1757,2.177,1758,2.177,1759,3.283,1760,2.783,1761,2.177,1762,4.071,1763,2.783,1764,2.918,1765,2.918,1766,2.918,1767,2.918,1768,3.967,1769,3.08,1770,2.918,1771,3.967,1772,2.429,1773,2.429,1774,2.429,1775,2.429,1776,2.429,1777,2.429,1778,2.429,1779,2.429,1780,2.429,1781,2.429,1782,2.429,1783,2.429,1784,3.967,1785,3.967,1786,3.967,1787,3.967,1788,2.01,1789,3.754,1790,3.283,1791,2.01,1792,2.01,1793,1.787,1794,1.787,1795,5,1796,4.52,1797,1.704,1798,2.429,1799,2.429,1800,2.429,1801,3.754,1802,1.633,1803,3.554,1804,1.633,1805,3.554,1806,5.481,1807,8.228,1808,3.505,1809,3.623,1810,2.566,1811,1.886,1812,1.886,1813,4.505,1814,3.554,1815,4.505,1816,2.429,1817,3.967,1818,2.429,1819,3.283,1820,2.429,1821,2.783,1822,1.633,1823,2.177,1824,2.177,1825,1.886,1826,1.886,1827,3.252,1828,4.16,1829,3.902,1830,3.967,1831,2.429,1832,1.633,1833,1.787,1834,3.036,1835,1.633,1836,1.571,1837,1.571,1838,1.633,1839,1.633,1840,1.704,1841,2.429,1842,2.429,1843,2.429,1844,1.787,1845,2.01,1846,1.467,1847,3.38,1848,2.01,1849,2.429,1850,2.667,1851,1.787,1852,1.571,1853,1.571,1854,1.633,1855,2.667,1856,1.787,1857,2.177,1858,2.429,1859,2.429,1860,2.429,1861,2.429,1862,2.177,1863,2.429,1864,1.516,1865,2.177,1866,2.177,1867,1.787,1868,2.429,1869,1.787,1870,2.177,1871,2.429,1872,4.868,1873,2.01,1874,3.754,1875,1.704,1876,1.787,1877,1.787,1878,2.429,1879,2.429,1880,2.429,1881,2.177,1882,2.429,1883,2.429,1884,2.429]],["title/injectables/LanguageService.html",[28,2.654,178,0.534]],["body/injectables/LanguageService.html",[3,0.057,4,0.057,9,0.057,20,0.339,21,0.879,23,1.598,25,1.282,26,4.839,27,4.929,28,3.981,29,1.977,31,1.751,32,0.005,33,0.74,34,0.547,35,1.284,36,3.274,38,1.853,39,2.999,40,0.781,41,0.114,42,0.315,43,2.301,44,2.343,46,0.057,47,0.308,49,2.375,126,0.004,127,0.004,161,1.063,178,0.8,184,1.021,185,1.007,186,0.961,215,5.892,233,5.892,235,6.541,244,1.686,245,2.701,576,2.048,733,4.932,1173,2.993,1175,4.102,1742,6.28,1885,5.847,1886,8.425,1887,8.425,1888,8.425,1889,8.917,1890,8.917,1891,7.589,1892,7.589,1893,5.847,1894,5.847,1895,5.847,1896,7.589,1897,5.847,1898,5.847,1899,5.847,1900,5.847,1901,7.589,1902,5.847,1903,5.847,1904,5.847,1905,5.847,1906,5.847,1907,5.847,1908,5.847,1909,5.847,1910,5.847,1911,5.847]],["title/interfaces/Large.html",[903,0.062,1116,1.992]],["body/interfaces/Large.html",[3,0.045,4,0.045,9,0.045,20,0.268,21,0.75,25,1.014,32,0.005,33,0.813,34,0.571,40,0.81,41,0.133,42,0.25,46,0.093,47,0.244,49,2.032,126,0.003,127,0.003,161,0.908,162,3.915,180,1.26,186,0.947,187,1.499,204,2.26,256,1.084,266,1.372,274,1.922,403,2.076,405,2.163,463,3.316,464,1.296,509,2.708,619,1.522,634,2.629,637,2.557,639,2.793,664,0.685,666,1.468,759,4.63,786,1.789,800,3.096,802,2.312,806,3.002,807,1.499,894,2.163,903,0.114,905,0.648,920,1.353,926,1.209,927,1.209,1012,2.427,1019,1.315,1020,2.489,1023,2.489,1024,3.827,1025,2.489,1026,2.489,1027,2.489,1028,2.427,1087,1.887,1116,3.189,1118,2.943,1120,2.943,1122,2.943,1389,2.793,1431,4.515,1432,2.21,1433,2.793,1434,2.793,1435,3.792,1436,2.887,1437,2.887,1438,2.887,1439,2.887,1440,4.525,1441,4.525,1442,5.781,1443,5.781,1444,5.781,1445,2.887,1446,5.781,1447,5.592,1448,2.887,1449,2.887,1450,2.793,1451,2.887,1452,2.887,1453,2.793,1454,4.667,1455,2.887,1456,2.793,1457,2.887,1458,2.887,1459,2.887,1460,2.887]],["title/interfaces/League.html",[74,1.139,903,0.062]],["body/interfaces/League.html",[3,0.068,4,0.068,9,0.068,20,0.405,21,0.984,32,0.005,33,0.836,34,0.577,35,1.45,40,0.797,41,0.105,46,0.068,74,1.913,93,2.864,126,0.004,127,0.004,256,2.285,704,3.801,806,2.269,903,0.086,905,0.981,1019,2.415,1104,3.386,1116,2.755,1118,2.755,1120,2.755,1122,2.755,1239,5.304,1912,6.999,1913,4.706]],["title/interfaces/LeagueAttributes.html",[903,0.062,918,2.366]],["body/interfaces/LeagueAttributes.html",[3,0.052,4,0.052,9,0.052,11,0.759,20,0.309,21,0.828,32,0.005,33,0.828,34,0.51,35,1.407,40,0.77,41,0.135,42,0.288,46,0.092,47,0.281,74,1.61,126,0.004,127,0.004,161,1.129,178,0.754,184,0.933,185,0.92,186,1.214,244,1.187,453,3.335,455,1.235,464,1.497,623,1.081,655,1.653,664,1.194,666,1.03,667,1.125,699,1.286,706,1.249,707,1.038,903,0.113,905,0.748,908,2.154,915,3.226,916,1.813,917,2.216,918,4.025,919,2.953,920,2.091,921,1.813,922,1.706,923,3.165,924,2.517,925,2.447,926,2.249,927,2.249,928,2.921,929,1.455,930,4.807,931,2.67,932,1.455,933,3.592,934,1.656,935,1.813,936,1.585,937,3.592,938,1.608,939,2.953,940,1.585,941,1.476,942,1.813,943,1.608,944,1.608,945,1.608,946,2.14,947,1.608,948,1.455,949,3.592,950,4.807,951,1.813,952,1.813,953,1.813,954,1.656,955,1.813,956,1.813,957,1.455,958,5.031,959,2.735,960,1.455,961,1.455]],["title/interfaces/LeagueAttributes-1.html",[874,1.582,903,0.052,918,1.979]],["body/interfaces/LeagueAttributes-1.html",[3,0.046,4,0.046,9,0.046,11,0.679,20,0.277,21,0.767,32,0.005,33,0.82,34,0.487,35,1.361,40,0.775,41,0.13,42,0.258,46,0.046,47,0.252,74,1.85,110,1.596,126,0.003,127,0.003,161,1.151,178,0.699,184,0.835,185,0.824,186,1.182,244,1.062,249,1.674,256,1.12,455,1.105,457,2.642,464,1.339,623,0.967,655,1.533,664,1.218,666,1.32,667,1.006,699,1.151,706,1.158,707,0.929,740,1.701,771,2.162,903,0.118,905,0.67,908,2.144,916,1.622,917,2.358,918,3.843,920,1.938,921,1.622,922,1.526,923,2.437,924,2.403,925,3.485,926,2.256,927,2.256,928,2.929,929,1.302,932,1.302,934,1.481,935,1.622,936,2.56,938,2.598,940,1.418,941,1.321,942,1.622,943,1.439,944,1.439,945,1.439,946,1.915,947,1.439,948,1.302,951,1.622,952,1.622,953,1.622,954,1.481,955,1.622,956,1.622,957,1.302,959,2.583,960,1.302,961,1.302,965,3.414,966,2.103,967,3.615,968,3.352,978,2.023,986,2.52,987,1.622,988,2.189,997,1.817,1057,2.572,1058,2.389,1059,4.206,1060,4.206,1061,3.88,1062,2.717,1063,2.572,1064,2.572,1065,2.798,1066,2.798,1067,2.798,1068,2.798,1069,2.798,1070,2.798,1071,3.88,1072,2.798,1073,2.798,1074,2.798,1075,2.798,1076,2.798,1077,4.206]],["title/components/LeagueCreateModalComponent.html",[0,1.235,73,2.142]],["body/components/LeagueCreateModalComponent.html",[0,1.283,1,1.077,2,1.84,3,0.025,4,0.025,5,1.163,6,1.187,7,1.163,8,1.163,9,0.025,11,0.594,12,2.225,13,1.039,14,3.793,15,3.617,16,1.77,18,1.77,20,0.15,21,0.484,23,0.881,24,2.762,25,0.917,29,1.72,31,1.092,32,0.005,33,0.721,34,0.441,35,0.801,36,3.689,38,1.375,39,2.146,41,0.099,42,0.14,46,0.025,47,0.137,49,1.318,56,1.097,59,0.88,60,2.312,61,1.84,62,1.003,63,2.969,64,1.163,65,1.163,66,1.097,67,1.163,68,1.058,69,1.163,70,1.077,71,1.118,72,1.163,73,2.553,74,2.051,75,4.265,76,2.706,77,1.097,78,2.706,79,1.077,80,1.163,81,1.077,82,1.163,83,1.077,84,1.163,85,1.077,86,1.538,87,1.163,88,1.077,89,1.163,90,1.077,91,1.163,92,1.077,93,1.815,94,1.097,95,1.259,96,1.097,97,1.097,98,1.163,99,1.097,100,1.442,101,1.077,102,1.163,103,1.077,104,1.163,105,1.097,106,1.163,107,1.058,108,1.163,109,1.097,110,1.007,111,1.097,112,1.097,113,1.163,114,1.077,115,0.706,116,1.058,117,1.077,118,1.163,119,1.077,120,1.163,121,1.077,122,1.163,123,1.077,124,1.14,125,1.163,126,0.002,127,0.002,149,1.039,151,0.969,161,0.586,180,0.706,186,0.53,187,1.704,243,1.566,244,0.929,245,1.871,259,2.141,262,1.513,266,0.769,289,4.641,301,1.915,302,2.145,308,0.986,369,2.145,759,3.536,761,1.566,822,3.62,1136,2.448,1169,3.087,1173,2.141,1195,2.611,1223,3.642,1440,2.043,1441,2.043,1513,4.229,1528,1.566,1529,2.525,1530,2.611,1549,4.532,1555,2.611,1789,3.4,1793,1.907,1794,3.076,1795,4.679,1796,2.611,1801,5.428,1802,2.812,1804,3.534,1806,1.819,1808,4.493,1809,2.611,1810,3.901,1811,2.013,1812,2.013,1821,1.819,1822,2.812,1827,1.677,1829,5.518,1832,1.743,1833,3.076,1834,4.493,1835,4.448,1836,2.705,1837,2.705,1838,1.743,1839,4.055,1840,2.934,1844,1.907,1846,3.642,1847,2.812,1850,3.534,1851,3.866,1852,1.677,1853,1.677,1854,3.534,1855,1.743,1856,1.907,1867,1.907,1872,2.812,1874,2.705,1875,2.934,1914,7.075,1915,7.075,1916,2.013,1917,3.995,1918,4.081,1919,3.247,1920,5.205,1921,4.081,1922,3.076,1923,4.682,1924,3.247,1925,4.055,1926,2.812,1927,1.743,1928,3.534,1929,2.812,1930,3.4,1931,5.472,1932,2.593,1933,1.743,1934,3.461,1935,2.323,1936,3.247,1937,2.593,1938,2.593,1939,2.593,1940,2.323,1941,2.323,1942,2.934,1943,2.013,1944,2.593,1945,2.593,1946,1.907,1947,2.323,1948,1.743,1949,2.145,1950,2.013,1951,2.013,1952,1.819,1953,2.593,1954,2.593,1955,2.593,1956,3.247,1957,2.593,1958,2.593,1959,2.013,1960,2.013,1961,2.013,1962,2.013,1963,2.013,1964,1.907,1965,1.743,1966,1.743,1967,2.013,1968,2.013,1969,3.247,1970,2.013,1971,3.076,1972,2.013,1973,2.013,1974,2.013,1975,2.013,1976,1.907,1977,3.076,1978,2.013,1979,2.013,1980,2.013,1981,1.819,1982,2.013,1983,3.247,1984,4.182,1985,4.182,1986,3.747,1987,3.747,1988,4.182,1989,4.182,1990,5.898,1991,5.608,1992,2.611,1993,1.819,1994,3.747,1995,2.323,1996,2.145,1997,2.323,1998,2.323,1999,2.323,2000,2.323,2001,4.23,2002,1.819,2003,4.962,2004,4.755,2005,2.934,2006,1.907,2007,1.907,2008,2.013,2009,3.076,2010,3.077,2011,2.013,2012,1.677,2013,2.013,2014,4.682,2015,1.819,2016,1.819,2017,3.076,2018,1.743,2019,3.247,2020,2.013,2021,1.907,2022,2.013,2023,1.907,2024,1.907,2025,2.013,2026,2.013,2027,2.013,2028,2.013,2029,2.013,2030,2.013,2031,3.247,2032,2.013,2033,2.013,2034,2.013,2035,2.145,2036,2.145,2037,2.145,2038,1.907,2039,2.013,2040,3.247]],["title/interfaces/LeagueData.html",[903,0.062,925,2.317]],["body/interfaces/LeagueData.html",[3,0.054,4,0.054,9,0.054,11,0.791,20,0.322,21,0.851,32,0.005,33,0.768,34,0.33,40,0.677,41,0.136,42,0.3,46,0.092,47,0.293,74,1.654,126,0.004,127,0.004,161,1.152,178,0.775,184,0.972,185,0.959,186,1.225,244,1.236,453,3.474,455,1.287,464,1.56,623,1.126,655,1.699,664,1.219,666,1.059,667,1.172,699,1.34,706,1.283,707,1.082,903,0.115,905,0.78,908,2.199,915,3.361,916,1.889,917,2.277,918,4.254,919,3.076,920,2.149,921,1.889,922,1.777,923,3.217,924,2.558,925,3.365,926,1.455,927,1.455,928,1.889,929,1.516,930,4.94,931,2.782,932,1.516,933,3.742,934,1.725,935,1.889,936,1.651,937,3.742,938,1.675,939,3.076,940,1.651,941,1.538,942,1.889,943,1.675,944,1.675,945,1.675,946,2.23,947,1.675,948,1.516,949,3.742,950,4.94,951,1.889,952,1.889,953,1.889,954,1.725,955,1.889,956,1.889,957,1.516,958,5.135,959,2.792,960,1.516,961,1.516]],["title/interfaces/LeagueData-1.html",[874,1.582,903,0.052,925,1.938]],["body/interfaces/LeagueData-1.html",[3,0.048,4,0.048,9,0.048,11,0.698,20,0.284,21,0.782,32,0.005,33,0.766,34,0.4,40,0.727,41,0.131,42,0.265,46,0.048,47,0.259,74,1.871,110,1.626,126,0.003,127,0.003,161,1.165,178,0.712,184,0.858,185,0.846,186,1.19,244,1.091,249,1.72,256,1.151,455,1.136,457,2.714,464,1.376,623,0.994,655,1.562,664,1.367,666,1.374,667,1.034,699,1.182,706,1.179,707,0.955,740,1.748,771,2.193,903,0.118,905,0.688,908,2.153,916,1.667,917,2.791,918,4.076,920,1.975,921,1.667,922,1.568,923,2.483,924,2.431,925,3.807,926,1.765,927,1.765,928,2.292,929,1.338,932,1.338,934,1.522,935,1.667,936,2.585,938,2.623,940,1.457,941,1.357,942,1.667,943,1.478,944,1.478,945,1.478,946,1.967,947,1.478,948,1.338,951,1.667,952,1.667,953,1.667,954,1.522,955,1.667,956,1.667,957,1.338,959,2.62,960,1.338,961,1.338,965,3.453,966,2.16,967,3.657,968,3.391,978,2.078,986,2.568,987,1.667,988,2.249,997,1.867,1057,2.643,1058,2.455,1059,4.255,1060,4.255,1061,3.953,1062,2.791,1063,2.643,1064,2.643,1065,2.874,1066,2.874,1067,2.874,1068,2.874,1069,2.874,1070,2.874,1071,3.953,1072,2.874,1073,2.874,1074,2.874,1075,2.874,1076,2.874,1077,4.266]],["title/interfaces/LeagueData-2.html",[903,0.052,925,1.938,1009,2.339]],["body/interfaces/LeagueData-2.html",[3,0.048,4,0.048,9,0.048,11,0.704,20,0.287,21,0.787,32,0.005,33,0.768,34,0.294,40,0.729,41,0.131,42,0.268,46,0.048,47,0.261,74,1.879,110,1.637,126,0.003,127,0.003,161,1.169,178,0.717,184,0.866,185,0.854,186,1.193,244,1.101,249,1.737,256,1.162,455,1.147,457,2.74,464,1.389,623,1.003,655,1.572,664,1.237,666,1.333,667,1.044,699,1.194,706,1.187,707,0.964,740,1.765,771,2.204,903,0.118,905,0.695,908,2.186,916,1.683,917,2.404,918,4.09,920,1.988,921,1.683,922,1.583,923,2.5,924,2.441,925,3.823,926,1.776,927,1.776,928,2.307,929,1.351,932,1.351,934,1.537,935,1.683,936,2.594,938,2.632,940,1.471,941,1.37,942,1.683,943,1.492,944,1.492,945,1.492,946,1.986,947,1.492,948,1.351,951,1.683,952,1.683,953,1.683,954,1.537,955,1.683,956,1.683,957,1.351,959,2.633,960,1.351,961,1.351,965,3.467,966,2.181,967,3.671,968,3.404,978,2.099,986,2.585,987,1.683,988,2.271,997,1.885,1057,2.668,1058,2.479,1059,4.272,1060,4.272,1061,3.979,1062,2.818,1063,2.668,1064,2.668,1065,2.902,1066,2.902,1067,2.902,1068,2.902,1069,2.902,1070,2.902,1071,3.979,1072,2.902,1073,2.902,1074,2.902,1075,2.902,1076,2.902,1077,4.288]],["title/injectables/LeagueJsonServerStorageMapping.html",[178,0.534,2041,4.187]],["body/injectables/LeagueJsonServerStorageMapping.html",[3,0.049,4,0.049,9,0.049,11,0.719,20,0.293,23,1.452,29,1.907,31,1.933,32,0.005,33,0.831,34,0.551,35,1.417,38,1.933,40,0.533,41,0.126,42,0.273,46,0.049,47,0.267,74,2.161,126,0.003,127,0.003,178,0.727,184,0.884,185,0.872,186,1.116,187,2.542,244,1.125,455,2.189,487,6.123,576,1.773,623,1.024,655,1.595,664,0.75,666,1.34,667,1.651,671,1.802,699,1.219,706,1.37,707,0.984,812,2.227,870,4.457,903,0.062,908,2.047,915,5.716,919,2.798,923,3.42,929,1.879,932,1.879,934,1.569,936,1.502,938,2.075,939,2.798,940,1.502,941,1.399,943,1.524,944,1.524,945,1.524,947,1.524,948,1.879,957,1.879,958,3.161,960,1.879,961,1.879,1609,3.618,1610,3.618,1611,3.618,1612,3.618,1613,3.618,1614,3.618,1615,3.618,1617,2.656,1618,3.158,1635,3.275,2041,5.706,2042,3.552,2043,5.063,2044,5.063,2045,5.063,2046,5.063,2047,5.063,2048,5.063,2049,5.063,2050,6.179,2051,4.461,2052,3.552,2053,3.552,2054,3.275,2055,3.552,2056,4.536,2057,4.536,2058,3.552,2059,7.026,2060,5.073,2061,4.895]],["title/injectables/LeagueMappingFirebase.html",[178,0.534,475,4.187]],["body/injectables/LeagueMappingFirebase.html",[3,0.042,4,0.042,9,0.042,11,0.62,20,0.253,21,0.72,23,1.31,25,0.957,29,1.904,31,1.896,32,0.005,33,0.827,34,0.494,35,1.39,38,1.855,40,0.646,41,0.139,42,0.236,46,0.042,47,0.23,49,1.817,74,2.167,93,1.872,126,0.003,127,0.003,161,0.612,178,0.656,184,0.763,185,0.752,186,1.131,256,1.023,447,2.482,455,2.178,475,5.147,498,4.024,576,1.529,579,2.35,619,1.437,623,0.883,643,2.936,645,4.687,653,2.637,655,1.438,657,3.756,664,1.286,666,1.338,667,1.663,671,2.214,680,2.637,681,2.637,682,2.825,684,2.936,696,2.35,699,1.051,703,2.235,706,1.265,707,0.849,712,2.825,741,4.182,806,1.415,908,2.037,915,5.688,919,2.413,929,1.695,932,1.695,948,1.695,954,1.353,957,1.695,960,1.695,961,1.695,978,3.342,987,2.459,1017,4.241,1104,1.554,1116,1.719,1118,1.719,1120,1.719,1122,1.719,1359,7.684,1368,3.535,1411,4.575,1609,3.263,1610,3.263,1611,3.263,1612,3.263,1613,3.263,1614,3.263,1615,3.263,1617,3.263,1618,2,2062,6.22,2063,4.366,2064,3.613,2065,4.366,2066,4.366,2067,3.912,2068,3.613,2069,4.366,2070,5.083,2071,4.363,2072,4.366,2073,3.613,2074,3.063,2075,3.063,2076,3.063,2077,3.063,2078,3.063,2079,6.93,2080,3.212,2081,4.687,2082,4.366,2083,4.829,2084,5.539,2085,3.212,2086,3.063,2087,3.39,2088,3.39,2089,3.613]],["title/injectables/LeagueMappingStrapi.html",[178,0.534,453,3.158]],["body/injectables/LeagueMappingStrapi.html",[3,0.045,4,0.045,9,0.045,11,0.654,20,0.266,23,1.359,29,1.858,31,1.883,32,0.005,33,0.846,34,0.537,35,1.381,38,1.883,40,0.625,41,0.128,42,0.248,46,0.088,47,0.242,74,2.144,126,0.003,127,0.003,161,1.045,178,0.681,184,0.804,185,0.793,186,1.171,244,1.022,453,4.03,455,2.139,464,1.289,576,1.612,623,0.931,655,1.493,664,1.105,666,1.333,667,1.57,671,1.638,699,1.108,706,1.302,707,0.895,903,0.108,908,2.213,915,5.585,916,1.562,917,2.001,918,3.487,919,2.544,920,1.888,921,1.562,922,1.469,923,3.573,924,2.364,925,3.415,926,1.203,927,1.203,928,1.562,929,1.759,930,4.34,931,2.3,932,1.759,933,3.094,934,1.426,935,1.562,936,1.365,937,3.094,938,1.385,939,2.544,940,1.365,941,1.271,942,1.562,943,1.385,944,1.385,945,1.385,946,1.844,947,1.385,948,1.759,949,3.094,950,4.34,951,1.562,952,1.562,953,1.562,954,1.426,955,1.562,956,1.562,957,1.759,958,4.655,959,2.531,960,1.759,961,1.759,1609,3.386,1610,3.386,1611,3.386,1612,3.386,1613,3.386,1614,3.386,1615,3.386,1617,2.414,1618,2.956,2090,4.602,2091,4.602,2092,4.602,2093,4.123,2094,4.602,2095,4.602,2096,4.602]],["title/interfaces/LeagueRaw.html",[903,0.062,923,1.861]],["body/interfaces/LeagueRaw.html",[3,0.06,4,0.06,9,0.06,11,0.874,20,0.356,21,0.908,32,0.005,33,0.54,34,0.464,40,0.742,41,0.136,42,0.332,46,0.06,47,0.324,74,1.384,126,0.004,127,0.004,178,0.827,184,1.074,185,1.059,186,1.189,187,2.797,244,1.366,455,1.422,487,3.977,623,1.244,655,1.812,664,1.347,666,0.886,667,1.295,699,1.48,706,1.369,707,1.195,812,3.997,870,4.904,903,0.075,905,0.861,915,3.713,919,3.398,923,2.882,929,1.675,932,1.675,934,1.905,936,1.824,938,2.359,939,3.398,940,1.824,941,1.699,943,1.85,944,1.85,945,1.85,947,1.85,948,1.675,957,1.675,958,3.838,960,1.675,961,1.675,1635,3.977,2041,5.087,2042,4.313,2050,7.022,2051,5.07,2052,4.313,2053,4.313,2054,3.977,2055,4.313,2056,5.508,2057,5.508,2058,4.313,2059,7.731,2060,5.581,2061,5.386]],["title/interfaces/LeagueRaw-1.html",[874,1.582,903,0.052,923,1.556]],["body/interfaces/LeagueRaw-1.html",[3,0.053,4,0.053,9,0.053,11,0.782,20,0.319,21,0.845,32,0.005,33,0.765,34,0.432,40,0.674,41,0.136,42,0.297,46,0.092,47,0.29,74,1.642,126,0.004,127,0.004,161,1.146,178,0.77,184,0.962,185,0.949,186,1.222,244,1.223,453,3.437,455,1.273,464,1.543,623,1.114,655,1.687,664,1.213,666,1.051,667,1.159,699,1.326,706,1.274,707,1.07,903,0.114,905,0.771,908,2.212,915,3.325,916,1.869,917,2.261,918,3.827,919,3.043,920,2.133,921,1.869,922,1.758,923,3.333,924,2.855,925,2.522,926,1.439,927,1.439,928,1.869,929,1.5,930,4.905,931,2.752,932,1.5,933,3.702,934,1.706,935,1.869,936,1.633,937,3.702,938,1.657,939,3.043,940,1.633,941,1.521,942,1.869,943,1.657,944,1.657,945,1.657,946,2.206,947,1.657,948,1.5,949,3.702,950,4.905,951,1.869,952,1.869,953,1.869,954,1.706,955,1.869,956,1.869,957,1.5,958,5.108,959,2.777,960,1.5,961,1.5]],["title/interfaces/LeagueRaw-2.html",[903,0.052,923,1.556,1009,2.339]],["body/interfaces/LeagueRaw-2.html",[3,0.048,4,0.048,9,0.048,11,0.698,20,0.284,21,0.782,32,0.005,33,0.766,34,0.4,40,0.727,41,0.131,42,0.265,46,0.048,47,0.259,74,1.871,110,1.626,126,0.003,127,0.003,161,1.165,178,0.712,184,0.858,185,0.846,186,1.19,244,1.091,249,1.72,256,1.151,455,1.136,457,2.714,464,1.376,623,0.994,655,1.562,664,1.232,666,1.329,667,1.034,699,1.182,706,1.179,707,0.955,740,1.748,771,2.193,903,0.118,905,0.688,908,2.183,916,1.667,917,2.392,918,3.61,920,1.975,921,1.667,922,1.568,923,2.838,924,2.788,925,3.991,926,1.765,927,1.765,928,2.292,929,1.338,932,1.338,934,1.522,935,1.667,936,2.585,938,2.623,940,1.457,941,1.357,942,1.667,943,1.478,944,1.478,945,1.478,946,1.967,947,1.478,948,1.338,951,1.667,952,1.667,953,1.667,954,1.522,955,1.667,956,1.667,957,1.338,959,2.62,960,1.338,961,1.338,965,3.453,966,2.16,967,3.657,968,3.391,978,2.078,986,2.568,987,1.667,988,2.249,997,1.867,1057,2.643,1058,2.455,1059,4.255,1060,4.255,1061,3.953,1062,2.791,1063,2.643,1064,2.643,1065,2.874,1066,2.874,1067,2.874,1068,2.874,1069,2.874,1070,2.874,1071,3.953,1072,2.874,1073,2.874,1074,2.874,1075,2.874,1076,2.874,1077,4.266]],["title/components/LeagueSelectableComponent.html",[0,1.235,77,2.142]],["body/components/LeagueSelectableComponent.html",[0,1.22,1,1.001,2,1.734,3,0.023,4,0.023,5,1.081,6,1.104,7,1.081,8,1.081,9,0.023,11,0.56,12,2.116,13,0.965,14,3.758,15,3.579,16,1.668,18,1.668,20,0.228,21,0.456,23,0.83,24,2.645,25,0.864,29,1.963,31,1.798,32,0.005,33,0.788,34,0.553,35,1.352,36,2.949,38,1.844,39,3.223,40,0.558,41,0.108,42,0.13,46,0.023,47,0.127,49,2.101,59,0.818,60,1.734,61,1.734,62,0.932,63,2.592,64,1.081,65,1.081,66,1.02,67,1.081,68,0.983,69,1.081,70,1.001,71,1.04,72,1.081,73,1.02,74,1.919,75,2.157,76,2.592,77,2.894,78,2.592,79,1.001,80,1.081,81,1.001,82,1.081,83,1.001,84,1.081,85,1.001,86,1.449,87,1.081,88,1.001,89,1.081,90,1.001,91,1.081,92,1.001,93,0.725,94,1.02,95,1.186,96,1.02,97,1.02,98,1.081,99,1.02,100,1.359,101,1.001,102,1.081,103,1.001,104,1.081,105,1.02,106,1.081,107,0.983,108,1.081,109,1.02,110,0.949,111,1.02,112,1.02,113,1.081,114,1.001,115,0.656,116,0.983,117,1.001,118,1.081,119,1.001,120,1.081,121,1.001,122,1.081,123,1.001,124,1.06,125,1.081,126,0.002,127,0.002,134,1.768,149,0.965,151,0.901,179,1.69,180,0.656,187,1.277,191,1.297,204,3.34,207,4.137,224,4.052,237,1.772,243,3.488,244,1.823,245,2.921,256,1.354,259,1.233,262,2.473,263,3.5,272,1.871,275,3.507,306,1.37,490,2.549,499,3.121,646,2.017,650,4.306,664,0.357,666,0.72,667,0.83,671,1.403,706,0.421,771,2.422,819,1.177,822,2.956,874,2.16,886,2.764,941,0.666,1029,1.504,1169,1.233,1187,1.772,1313,4.484,1440,2.443,1441,1.925,1513,2.24,1528,1.455,1529,2.38,1530,1.504,1549,2.927,1618,1.805,1717,3.362,1719,3.362,1722,2.65,1723,2.65,1743,3.059,1749,1.871,1760,2.764,1762,3.507,1763,2.764,1764,1.772,1765,2.898,1766,2.898,1767,2.898,1769,3.059,1770,2.898,1795,3.728,1797,2.764,1808,3.019,1809,1.504,1834,3.488,1845,1.994,1846,1.455,1847,4.282,1848,3.261,1850,3.883,1851,2.898,1852,1.559,1853,2.549,1855,3.362,1864,1.504,1867,1.772,1872,5.062,1873,1.994,1874,4.423,1876,2.898,1877,2.898,1914,7.954,1949,1.994,1990,1.504,2002,4.052,2097,8.612,2098,1.772,2099,3.059,2100,4.137,2101,3.261,2102,3.531,2103,3.941,2104,6.126,2105,4.137,2106,3.531,2107,3.531,2108,3.941,2109,3.941,2110,3.941,2111,3.531,2112,5.776,2113,3.941,2114,3.941,2115,2.41,2116,3.531,2117,2.159,2118,4.48,2119,2.41,2120,2.159,2121,6.981,2122,2.41,2123,2.41,2124,2.41,2125,2.41,2126,3.941,2127,1.994,2128,2.41,2129,3.059,2130,2.159,2131,1.994,2132,1.871,2133,1.994,2134,2.41,2135,2.159,2136,2.41,2137,2.159,2138,3.059,2139,2.41,2140,1.994,2141,2.41,2142,4.48,2143,2.159,2144,2.159,2145,2.159,2146,2.159,2147,2.41,2148,3.531,2149,2.159,2150,2.159,2151,3.261,2152,2.159,2153,3.261,2154,2.159,2155,2.159,2156,3.531,2157,2.159,2158,2.159,2159,2.159,2160,1.994,2161,1.871,2162,3.531,2163,3.531,2164,1.994,2165,2.159,2166,1.69,2167,2.159,2168,2.41,2169,2.159,2170,2.41,2171,1.994,2172,2.41,2173,2.159,2174,2.41,2175,3.882,2176,2.159,2177,1.871,2178,2.159,2179,2.159,2180,1.871,2181,1.871,2182,1.871,2183,2.41,2184,2.159,2185,2.159,2186,1.994,2187,3.059,2188,2.41,2189,2.41,2190,2.41,2191,2.159,2192,2.159,2193,5,2194,2.41,2195,2.159,2196,2.41,2197,2.41,2198,1.994,2199,1.994,2200,2.41,2201,2.41,2202,2.41,2203,2.41,2204,2.159,2205,2.41,2206,2.41,2207,3.531,2208,2.159,2209,2.159,2210,2.159,2211,2.41,2212,2.159,2213,3.941,2214,5.776,2215,3.941,2216,3.531,2217,2.764,2218,2.159,2219,2.159,2220,2.159,2221,2.159,2222,2.159,2223,2.159,2224,2.159,2225,2.159,2226,2.159,2227,1.871,2228,1.871,2229,1.69,2230,3.059,2231,2.159,2232,2.159,2233,2.159]],["title/injectables/LeagueService.html",[178,0.534,224,3.549]],["body/injectables/LeagueService.html",[3,0.057,4,0.057,9,0.057,11,0.838,20,0.341,23,1.607,25,1.672,29,1.946,31,1.925,32,0.005,33,0.814,34,0.549,35,1.412,38,1.925,40,0.734,41,0.142,42,0.318,46,0.057,47,0.31,74,1.327,126,0.004,127,0.004,178,0.805,184,1.03,185,1.016,224,5.352,266,2.748,430,4.878,576,2.065,619,1.94,642,3.814,646,3.905,647,3.814,648,4.552,649,4.106,652,4.106,658,2.757,659,3.786,661,3.956,662,2.817,664,1.254,672,3.093,677,2.757,700,2.593,732,3.093,807,1.911,876,6.332,878,3.964,891,3.258,894,2.757,919,3.258,1019,2.168,1259,5.266,1638,3.093,1654,7.402,1656,6.313,1688,3.964,1689,3.814,1690,3.68,2234,5.895,2235,5.895,2236,4.135,2237,4.135,2238,4.135,2239,4.135,2240,4.135,2241,5.895,2242,4.135,2243,5.895,2244,5.895,2245,4.135,2246,3.964]],["title/components/LeaguesPage.html",[0,1.235,79,2.102]],["body/components/LeaguesPage.html",[0,0.972,1,0.731,2,1.331,3,0.029,4,0.017,5,0.789,6,1.823,7,0.789,8,0.789,9,0.017,11,0.43,12,1.685,13,0.705,14,3.586,15,3.394,16,1.28,18,1.28,20,0.337,21,0.35,22,1.827,23,0.637,24,2.165,25,0.663,27,2.613,28,3.268,29,1.796,31,1.367,32,0.005,33,0.694,34,0.514,35,1.002,36,2.687,38,1.483,39,1.896,40,0.482,41,0.119,42,0.095,43,0.692,44,0.705,45,1,46,0.017,47,0.093,48,1.182,49,2.018,50,1.029,51,1.029,56,1.685,59,0.597,60,1.331,61,1.331,62,0.68,63,3.202,64,0.789,65,0.789,66,0.744,67,0.789,68,0.717,69,0.789,70,0.731,71,0.759,72,0.789,73,1.28,74,2.031,75,2.51,76,2.121,77,0.744,78,2.121,79,1.964,80,0.789,81,0.731,82,0.789,83,0.731,84,0.789,85,0.731,86,1.112,87,0.789,88,0.731,89,0.789,90,0.731,91,0.789,92,0.731,93,0.91,94,0.744,95,0.91,96,0.744,97,0.744,98,0.789,99,0.744,100,1.372,101,0.731,102,0.789,103,0.731,104,0.789,105,0.744,106,0.789,107,0.717,108,0.789,109,0.744,110,0.728,111,0.744,112,0.744,113,0.789,114,0.731,115,1.288,116,0.717,117,0.731,118,0.789,119,0.731,120,0.789,121,0.731,122,0.789,123,0.731,124,0.774,125,0.789,126,0.002,127,0.002,151,0.658,154,0.923,161,1.127,172,2.855,179,1.234,180,0.479,186,0.223,187,2.019,191,4.071,207,3.294,212,1.624,213,2.225,224,3.316,229,1.098,243,3.514,244,1.68,245,2.621,249,0.616,256,1.46,266,1.181,275,1.234,289,2.122,300,0.972,301,1.823,306,1,308,2.369,312,1.098,317,1.098,318,0.9,321,1.365,327,1.138,352,1.455,463,2.42,464,0.493,499,3.325,577,1.138,619,0.579,637,0.972,647,0.879,650,4.448,666,0.991,667,0.637,671,1.417,706,0.528,759,2.363,761,1.827,771,2.324,806,0.57,819,0.859,822,4.119,874,1.767,886,2.122,904,2.122,906,1.365,909,2.225,910,1.293,911,1.293,912,3.316,936,1.58,938,1.875,941,0.486,1104,1.417,1116,0.692,1118,0.692,1120,0.692,1122,0.692,1124,1.478,1173,0.9,1174,1.365,1181,1.455,1184,1.455,1198,1.455,1210,2.122,1223,2.855,1233,2.225,1239,1.888,1277,1.234,1327,1.455,1334,1.455,1416,1.365,1440,3.043,1441,3.36,1504,2.928,1513,4.648,1524,1.365,1528,3.217,1529,3.514,1530,1.888,1549,3.118,1556,2.71,1618,1.385,1638,0.923,1703,1.062,1788,1.455,1789,1.957,1790,1.455,1791,1.455,1795,4.428,1796,1.098,1797,3.737,1801,4.03,1802,2.034,1804,2.034,1806,1.234,1808,2.855,1809,1.098,1810,4.255,1813,3.567,1814,3.567,1815,1.576,1819,3.912,1822,2.034,1823,1.576,1824,1.576,1825,1.365,1826,1.365,1827,3.058,1829,3.581,1832,4.188,1834,2.855,1835,3.912,1836,2.575,1837,3.446,1838,1.182,1839,1.182,1844,1.293,1846,2.404,1852,1.957,1853,1.957,1854,2.676,1857,1.576,1864,1.098,1865,4.235,1869,1.293,1881,1.576,1914,1.455,1915,1.455,1917,1.062,1922,1.293,1929,2.676,1930,3.058,1931,4.582,1942,3.316,1949,1.455,1952,3.316,1990,4.722,1991,1.234,1992,1.888,1993,2.122,2001,1.234,2003,1.234,2004,3.581,2005,2.792,2006,1.293,2007,1.293,2010,2.33,2012,2.575,2015,2.122,2016,2.122,2017,2.928,2018,3.912,2023,2.225,2024,1.293,2038,1.293,2039,3.09,2054,1.138,2102,3.567,2129,3.09,2131,1.455,2156,2.71,2166,1.234,2167,1.576,2175,2.349,2176,2.71,2177,2.349,2179,1.576,2180,1.365,2181,1.365,2182,2.349,2185,1.576,2186,1.455,2187,1.365,2216,2.71,2217,2.122,2247,1.759,2248,3.98,2249,3.025,2250,3.98,2251,3.567,2252,3.316,2253,3.567,2254,3.98,2255,4.727,2256,3.025,2257,4.727,2258,3.025,2259,3.025,2260,3.025,2261,3.025,2262,3.025,2263,3.025,2264,1.759,2265,3.09,2266,3.67,2267,3.567,2268,3.98,2269,3.025,2270,1.759,2271,3.025,2272,1.759,2273,1.759,2274,1.759,2275,3.025,2276,1.759,2277,3.025,2278,1.759,2279,3.025,2280,1.759,2281,1.759,2282,1.759,2283,3.025,2284,1.759,2285,4.235,2286,3.025,2287,1.759,2288,1.759,2289,1.759,2290,1.759,2291,1.759,2292,2.71,2293,1.759,2294,1.759,2295,1.759,2296,1.759,2297,1.759,2298,1.759,2299,1.455,2300,1.576,2301,1.576,2302,1.293,2303,1.576,2304,1.365,2305,1.759,2306,2.71,2307,3.025,2308,5.326,2309,3.98,2310,4.727,2311,1.759,2312,1.576,2313,3.025,2314,1.576,2315,1.576,2316,2.71,2317,2.71,2318,2.71,2319,1.576,2320,1.576,2321,2.71,2322,1.576,2323,1.576,2324,1.759,2325,1.759,2326,1.759,2327,2.503,2328,2.503,2329,2.71,2330,2.71,2331,3.025,2332,3.025,2333,1.759,2334,2.71,2335,1.455,2336,1.759,2337,1.759,2338,1.759,2339,1.576,2340,2.485,2341,1.098,2342,1.759,2343,3.025,2344,3.025,2345,1.759,2346,3.025,2347,1.759,2348,1.759,2349,1.759,2350,1.759,2351,1.759,2352,1.759,2353,1.576,2354,1.759,2355,1.576,2356,1.576,2357,1.576,2358,3.98,2359,3.025,2360,1.576,2361,1.759,2362,1.576,2363,1.576,2364,1.576,2365,3.025,2366,1.759,2367,1.759,2368,3.025,2369,5.326,2370,1.576,2371,1.759,2372,2.71,2373,1.759,2374,1.759,2375,2.034,2376,1.759,2377,1.759,2378,1.576,2379,1.759,2380,1.576,2381,1.576,2382,3.918,2383,1.759,2384,2.71,2385,1.576,2386,1.455,2387,1.365,2388,1.759,2389,1.576,2390,1.759,2391,1.576,2392,1.576,2393,1.576,2394,1.455,2395,2.71,2396,2.71,2397,1.759,2398,1.576,2399,1.576,2400,2.503,2401,1.759,2402,1.576,2403,1.576,2404,1.759,2405,3.025,2406,4.135,2407,1.576,2408,3.567,2409,1.576,2410,3.567,2411,1.576,2412,1.576,2413,1.576,2414,5.443,2415,2.71,2416,1.576,2417,1.576,2418,1.576,2419,2.71,2420,1.759,2421,1.576,2422,1.759,2423,1.576,2424,1.576,2425,1.759,2426,1.576,2427,3.025,2428,3.025,2429,1.576,2430,1.759,2431,1.455,2432,2.349,2433,1.759,2434,3.025,2435,1.759,2436,1.759,2437,1.759,2438,1.759,2439,1.759,2440,4.727,2441,1.759,2442,1.576,2443,1.759,2444,3.025,2445,3.025,2446,3.025,2447,3.025,2448,3.294,2449,1.455,2450,1.759,2451,1.455,2452,1.759,2453,1.759,2454,4.727,2455,1.759,2456,1.759,2457,4.727,2458,1.759,2459,5.818,2460,1.759,2461,1.759,2462,1.759,2463,3.025,2464,1.759]],["title/modules/LeaguesPageModule.html",[128,1.545,2465,3.928]],["body/modules/LeaguesPageModule.html",[3,0.064,4,0.064,9,0.064,32,0.005,41,0.15,42,0.358,43,2.612,44,2.659,46,0.064,47,0.349,59,2.253,79,4.064,126,0.004,127,0.004,128,2.027,130,2.482,131,3.172,132,4.574,133,3.397,134,2.978,135,2.567,140,4.21,141,3.318,142,3.397,144,3.181,145,3.237,146,4.426,147,3.397,148,4.426,149,2.659,150,4.21,151,2.482,152,3.572,154,3.482,155,3.668,395,5.561,499,4.143,2465,7.895,2466,5.947,2467,5.947,2468,5.947,2469,7.196,2470,6.637,2471,5.947,2472,4.463]],["title/modules/LeaguesPageRoutingModule.html",[128,1.545,2469,3.721]],["body/modules/LeaguesPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,79,3.66,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,2469,6.48,2471,6.662,2473,7.435]],["title/components/LineupsPage.html",[0,1.235,81,2.102]],["body/components/LineupsPage.html",[0,1.479,1,1.341,2,2.186,3,0.031,4,0.031,5,1.448,6,1.478,7,1.448,8,1.448,9,0.031,11,0.706,12,2.566,13,1.293,14,3.886,15,3.718,16,2.104,18,2.104,20,0.187,21,0.575,22,3.001,23,1.047,24,3.119,25,1.089,27,3.764,28,4.245,29,1.826,31,0.671,32,0.005,33,0.598,34,0.495,35,0.492,36,3.698,38,1.26,39,2.157,40,0.469,41,0.131,42,0.174,43,1.27,44,1.293,45,1.834,46,0.031,47,0.17,48,2.17,49,1.948,50,1.889,51,1.889,59,1.095,60,2.186,61,2.186,62,1.248,63,3.056,64,1.448,65,1.448,66,1.366,67,1.448,68,1.316,69,1.448,70,1.341,71,1.392,72,1.448,73,1.366,74,1.119,75,2.615,76,3.056,77,1.366,78,3.056,79,1.341,80,1.448,81,2.829,82,1.448,83,1.341,84,1.448,85,1.341,86,3.324,87,1.448,88,1.341,89,1.448,90,1.341,91,1.448,92,1.341,93,0.971,94,1.366,95,2.436,96,1.366,97,1.366,98,1.448,99,1.366,100,1.113,101,1.341,102,1.448,103,1.341,104,1.448,105,1.366,106,1.448,107,1.316,108,1.448,109,1.366,110,2.25,111,1.366,112,1.366,113,1.448,114,1.341,115,0.879,116,1.316,117,1.341,118,1.448,119,1.341,120,1.448,121,1.341,122,1.448,123,1.341,124,1.42,125,1.448,126,0.002,127,0.002,160,1.316,161,0.452,209,5.431,211,3.921,223,4.777,225,3.986,226,5.008,244,1.104,245,1.769,318,3.485,479,4.251,502,3.215,664,0.898,771,2.487,831,3.001,874,1.858,1209,2.505,1314,4.113,1368,3.87,1703,4.441,1789,3.215,2340,5.35,2341,4.59,2474,3.227,2475,4.453,2476,6.061,2477,4.97,2478,6.061,2479,4.252,2480,5.016,2481,6.061,2482,4.252,2483,6.809,2484,6.809,2485,2.891,2486,4.252,2487,4.97,2488,3.487,2489,3.227,2490,3.227,2491,3.227,2492,3.227,2493,3.227,2494,3.227,2495,3.227,2496,3.227,2497,3.227,2498,2.17,2499,2.088,2500,2.264,2501,3.227,2502,2.17,2503,3.227,2504,3.227,2505,2.67,2506,3.227,2507,3.227,2508,2.374,2509,3.227,2510,5.709,2511,4.97,2512,3.227,2513,2.67,2514,4.97,2515,3.227,2516,4.97,2517,4.97,2518,3.227,2519,2.67,2520,4.113,2521,3.227,2522,4.97,2523,6.809,2524,3.656,2525,6.809,2526,4.453,2527,4.453,2528,4.97,2529,6.101,2530,6.101,2531,6.101,2532,6.101,2533,6.101,2534,4.97]],["title/modules/LineupsPageModule.html",[128,1.545,2535,3.928]],["body/modules/LineupsPageModule.html",[3,0.066,4,0.066,9,0.066,32,0.005,41,0.15,42,0.367,43,2.677,44,2.725,46,0.066,47,0.358,59,2.308,81,4.089,126,0.004,127,0.004,128,2.077,130,2.543,131,3.25,132,4.624,133,3.481,134,3.052,135,2.631,140,4.273,141,3.4,142,3.481,144,3.229,145,3.286,146,4.493,147,3.481,148,4.493,149,2.725,150,4.273,151,2.543,152,3.66,154,3.568,155,3.759,2475,6.093,2535,7.815,2536,6.093,2537,6.093,2538,6.093,2539,7.238,2540,6.8,2541,6.093]],["title/modules/LineupsPageRoutingModule.html",[128,1.545,2539,3.721]],["body/modules/LineupsPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,81,3.66,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,2539,6.48,2541,6.662,2542,7.435]],["title/components/LoginPage.html",[0,1.235,83,2.102]],["body/components/LoginPage.html",[0,1.568,1,1.473,2,2.349,3,0.034,4,0.034,5,1.591,6,1.624,7,1.591,8,1.591,9,0.034,12,1.501,13,1.421,14,3.922,15,3.756,16,2.26,18,2.26,20,0.205,21,0.618,22,4.317,23,1.125,25,1.17,27,1.96,28,4.387,29,1.893,31,1.11,32,0.005,33,0.674,34,0.477,35,0.814,36,4.186,38,1.593,39,2.729,40,0.623,41,0.121,42,0.191,43,1.396,44,1.421,45,2.016,46,0.034,47,0.187,48,2.384,49,1.923,50,3.126,51,2.076,59,1.204,60,2.349,61,2.349,62,1.372,63,3.208,64,1.591,65,1.591,66,1.501,67,1.591,68,1.446,69,1.591,70,1.473,71,1.53,72,1.591,73,1.501,74,1.202,75,2.771,76,3.208,77,1.501,78,3.208,79,1.473,80,1.591,81,1.473,82,1.591,83,2.97,84,1.591,85,1.473,86,1.964,87,1.591,88,1.473,89,1.591,90,1.473,91,1.591,92,1.473,93,1.067,94,1.501,95,1.607,96,1.501,97,1.501,98,1.591,99,1.501,100,1.223,101,1.473,102,1.591,103,1.473,104,1.591,105,1.501,106,1.591,107,1.446,108,1.591,109,1.501,110,1.286,111,1.501,112,1.501,113,1.591,114,1.473,115,0.966,116,1.446,117,1.473,118,1.591,119,1.473,120,1.591,121,1.473,122,1.591,123,1.473,124,1.56,125,1.591,126,0.003,127,0.003,149,1.421,160,1.446,161,0.748,173,5.22,182,1.733,186,0.676,205,3.746,215,4.146,222,3.004,223,4.506,233,4.146,235,4.146,244,1.186,245,1.901,259,2.734,262,1.932,301,1.624,318,1.815,374,2.934,375,2.934,535,3.928,551,3.928,577,2.294,733,3.126,1086,2.765,1246,4.462,1703,2.141,1726,4.146,1920,4.319,1925,4.806,1926,3.591,1927,2.384,1928,4.806,1933,3.591,1948,2.384,1965,2.384,1966,3.591,1981,2.488,2252,4.506,2340,2.214,2488,3.746,2543,3.546,2544,6.423,2545,5.34,2546,5.315,2547,6.423,2548,7.148,2549,7.148,2550,6.405,2551,5.34,2552,3.546,2553,3.546,2554,3.546,2555,3.546,2556,3.546,2557,3.546,2558,4.785,2559,4.785,2560,3.546,2561,3.546,2562,2.934,2563,3.546,2564,3.177,2565,3.546,2566,3.177,2567,2.753,2568,3.546,2569,2.934,2570,4.785,2571,3.546,2572,3.546,2573,3.177,2574,4.419,2575,4.785,2576,3.177,2577,3.177,2578,3.546,2579,3.177,2580,3.546,2581,3.177,2582,3.177,2583,3.546,2584,3.546,2585,2.934,2586,3.177,2587,3.177,2588,3.546,2589,3.546,2590,5.34,2591,5.34,2592,5.34,2593,5.34,2594,5.34,2595,5.34,2596,5.34,2597,5.34,2598,5.34,2599,4.785]],["title/modules/LoginPageModule.html",[128,1.545,2600,3.928]],["body/modules/LoginPageModule.html",[3,0.063,4,0.063,9,0.063,32,0.005,41,0.152,42,0.348,43,3.179,44,2.583,46,0.063,47,0.339,59,2.188,83,4.035,126,0.004,127,0.004,128,1.969,130,2.41,131,3.08,132,4.514,133,3.3,134,2.893,135,2.494,140,4.134,141,3.222,142,3.3,144,3.124,145,3.179,146,4.346,147,3.3,148,4.346,149,2.583,150,4.134,151,2.41,152,3.469,154,3.382,155,3.563,395,5.521,403,2.893,405,3.015,465,5.776,466,5.776,467,5.334,468,5.334,551,4.741,2472,4.334,2600,7.859,2601,5.776,2602,5.776,2603,5.776,2604,7.144,2605,6.446,2606,6.27,2607,5.776]],["title/modules/LoginPageRoutingModule.html",[128,1.545,2604,3.721]],["body/modules/LoginPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,83,3.66,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,2604,6.48,2607,6.662,2608,7.435]],["title/interfaces/Match.html",[86,1.861,903,0.062]],["body/interfaces/Match.html",[3,0.065,4,0.065,9,0.065,20,0.386,21,0.956,32,0.005,34,0.594,35,1.493,40,0.808,41,0.1,46,0.065,86,3.035,126,0.004,127,0.004,704,3.722,903,0.082,905,0.935,974,4.487,1019,2.345,1104,3.331,1364,6.883,1365,6.293,1366,6.883,1367,6.883,1368,5.319,1369,7.266,1370,6.883,1913,4.487,2609,6.674]],["title/components/MatchCreateComponent.html",[0,1.235,85,2.102]],["body/components/MatchCreateComponent.html",[0,0.957,1,0.716,2,1.308,3,0.017,4,0.017,5,0.773,6,0.789,7,0.773,8,0.773,9,0.017,11,0.422,12,1.659,13,0.69,14,3.573,15,3.381,16,1.258,18,1.258,20,0.1,21,0.344,23,0.626,24,2.135,25,0.651,29,1.903,31,1.281,32,0.005,33,0.622,34,0.455,35,0.939,36,3.239,38,1.662,39,2.673,40,0.547,41,0.07,42,0.093,46,0.017,47,0.091,49,0.983,56,1.258,59,0.585,60,1.724,61,1.308,62,0.667,63,2.092,64,0.773,65,0.773,66,0.729,67,0.773,68,0.703,69,0.773,70,0.716,71,0.743,72,0.773,73,0.729,74,0.669,75,2.27,76,2.092,77,0.729,78,2.092,79,0.716,80,0.773,81,0.716,82,0.773,83,0.716,84,0.773,85,1.937,86,3.034,87,0.773,88,0.716,89,0.773,90,0.716,91,0.773,92,0.716,93,0.519,94,0.729,95,0.895,96,0.729,97,0.729,98,0.773,99,0.729,100,0.594,101,0.716,102,0.773,103,0.716,104,0.773,105,0.729,106,0.773,107,0.703,108,0.773,109,0.729,110,0.716,111,0.729,112,0.729,113,0.773,114,0.716,115,0.469,116,0.703,117,0.716,118,0.773,119,0.716,120,0.773,121,0.716,122,0.773,123,0.716,124,0.758,125,0.773,126,0.001,127,0.001,149,0.69,151,0.644,161,0.737,186,0.863,187,1.865,229,1.856,244,1.278,245,2.048,259,4.161,262,1.075,263,2.387,289,4.325,299,2.181,301,1.361,302,1.426,308,2,369,1.426,733,1.009,759,3.257,761,2.367,813,2.76,822,3.489,974,3.122,1009,1.643,1136,1.74,1169,2.387,1173,1.522,1195,3.591,1223,3.474,1364,3.869,1365,3.135,1366,3.429,1367,3.429,1368,2.65,1370,3.429,1425,2.085,1440,3.57,1441,1.452,1513,4.689,1516,2.186,1528,3.177,1529,4.274,1530,3.284,1549,4.681,1555,1.856,1789,1.115,1793,1.267,1794,2.186,1795,4.501,1796,1.856,1801,5.533,1802,3.135,1804,3.537,1806,1.209,1808,3.934,1809,4.418,1810,4.214,1821,1.209,1822,1.999,1825,2.308,1826,2.308,1827,2.536,1828,3.244,1829,5.049,1832,1.159,1833,2.186,1834,4.116,1835,4.145,1836,3.722,1837,4.214,1838,1.159,1839,3.135,1840,2.085,1846,3.177,1847,1.159,1850,2.635,1851,2.883,1852,2.536,1853,2.536,1854,4.145,1855,1.159,1856,3.869,1864,2.447,1867,1.267,1869,2.186,1872,1.999,1874,1.923,1875,2.085,1917,4.829,1920,4.38,1921,3.043,1922,2.186,1923,3.62,1924,2.308,1925,3.135,1926,1.999,1927,1.159,1928,2.635,1929,1.999,1930,2.536,1931,4.534,1933,1.159,1936,2.308,1942,2.085,1948,1.159,1950,1.338,1951,1.338,1952,1.209,1956,2.308,1959,1.338,1960,1.338,1961,1.338,1962,1.338,1963,1.338,1964,1.267,1965,1.159,1966,3.868,1969,2.308,1970,1.338,1971,1.267,1972,1.338,1973,1.338,1974,1.338,1975,1.338,1976,1.267,1977,2.186,1978,1.338,1979,1.338,1980,1.338,1981,1.209,1982,1.338,1983,2.308,1990,5.818,1991,5.508,1992,2.911,1993,1.209,1994,2.663,1995,1.544,1996,1.426,1997,1.544,1998,1.544,1999,1.544,2000,1.544,2001,3.271,2002,3.271,2003,4.036,2004,3.868,2005,3.271,2006,1.267,2007,1.267,2008,1.338,2009,2.186,2010,3.079,2011,1.338,2012,1.115,2013,1.338,2014,3.62,2015,1.209,2016,1.209,2017,2.186,2018,1.159,2019,2.308,2020,3.043,2021,1.267,2022,2.308,2023,2.186,2024,2.186,2025,1.338,2026,1.338,2027,1.338,2028,1.338,2029,1.338,2030,1.338,2031,1.338,2032,1.338,2033,1.338,2034,1.338,2038,2.186,2040,2.308,2217,2.085,2406,2.308,2431,2.46,2432,2.308,2448,3.858,2449,2.46,2451,2.46,2498,1.159,2610,7.235,2611,7.712,2612,1.723,2613,3.92,2614,2.972,2615,4.662,2616,4.662,2617,3.512,2618,3.92,2619,3.92,2620,3.92,2621,2.663,2622,2.972,2623,2.663,2624,4.662,2625,4.662,2626,2.972,2627,4.662,2628,4.662,2629,4.178,2630,4.662,2631,1.723,2632,2.972,2633,1.723,2634,2.972,2635,1.723,2636,2.972,2637,1.723,2638,5.524,2639,1.723,2640,1.723,2641,2.663,2642,1.723,2643,1.723,2644,1.723,2645,1.723,2646,2.972,2647,1.723,2648,1.723,2649,1.723,2650,1.723,2651,1.723,2652,1.723,2653,5.524,2654,1.723,2655,1.723,2656,1.723,2657,1.723,2658,1.723,2659,1.723,2660,1.723,2661,1.723,2662,1.723,2663,1.723,2664,1.723,2665,1.723,2666,1.723,2667,1.723,2668,1.723,2669,1.723,2670,1.723,2671,1.723,2672,1.723,2673,1.723,2674,1.723,2675,1.723,2676,1.723,2677,1.723,2678,1.723,2679,1.723,2680,1.723,2681,1.723,2682,1.723,2683,1.723,2684,1.723,2685,2.663,2686,2.972,2687,1.723,2688,1.723,2689,1.723,2690,2.308,2691,1.544,2692,1.544,2693,1.723,2694,1.723,2695,1.723,2696,1.544,2697,1.723,2698,2.972,2699,1.723,2700,1.723,2701,1.723,2702,3.92,2703,3.92,2704,1.723,2705,1.723,2706,1.723,2707,1.723,2708,1.723,2709,1.723,2710,2.972,2711,2.972,2712,4.662,2713,1.544,2714,2.663,2715,2.663,2716,1.544,2717,2.972,2718,4.662,2719,2.972,2720,2.972,2721,2.972,2722,2.972,2723,2.972,2724,2.663,2725,1.544,2726,1.209,2727,4.761,2728,4.178,2729,2.663,2730,2.663,2731,3.858,2732,2.663,2733,2.663,2734,2.663,2735,2.308,2736,2.46,2737,2.663,2738,2.663,2739,1.544,2740,6.546,2741,1.544,2742,1.544,2743,1.544,2744,1.544,2745,2.663,2746,4.178,2747,2.663,2748,1.723,2749,1.544,2750,1.544,2751,1.544,2752,1.544,2753,1.544,2754,2.972,2755,2.972]],["title/injectables/MatchMappingFirebase.html",[178,0.534,2756,4.533]],["body/injectables/MatchMappingFirebase.html",[3,0.04,4,0.04,9,0.04,11,0.592,20,0.241,21,0.697,23,1.267,25,0.914,29,1.883,31,1.873,32,0.005,33,0.792,34,0.485,35,1.373,38,1.83,40,0.634,41,0.135,42,0.225,46,0.04,47,0.22,49,1.771,86,3.509,126,0.003,127,0.003,161,0.584,178,0.635,184,0.728,185,0.718,186,1.115,447,2.369,455,2.156,498,3.892,500,4.826,576,1.46,579,2.243,619,1.372,623,0.843,643,2.803,645,4.567,653,2.517,655,1.391,657,3.633,664,1.266,666,1.323,667,1.628,671,2.141,675,3.735,680,2.517,681,2.517,682,2.697,684,2.803,696,2.243,699,1.004,703,2.134,706,1.233,707,0.81,712,2.697,741,5.743,908,2.016,929,1.639,932,1.639,948,1.639,954,1.292,957,1.639,960,1.639,961,1.639,987,2.396,1017,4.133,1104,1.484,1362,7.715,1364,4.425,1365,4.045,1366,3.066,1367,4.425,1368,4.394,1369,4.671,1370,3.066,1609,3.156,1610,3.156,1611,3.156,1612,3.156,1613,3.156,1614,3.156,1615,3.156,1617,3.156,1618,1.909,1660,3.236,2070,4.952,2071,2.924,2074,2.924,2075,2.924,2076,2.924,2077,2.924,2078,2.924,2080,3.066,2081,4.567,2084,4.952,2085,3.066,2086,2.924,2756,5.391,2757,9.323,2758,4.671,2759,4.168,2760,4.168,2761,3.236,2762,3.236,2763,3.735,2764,3.735,2765,4.168,2766,7.73,2767,7.73,2768,7.73,2769,7.73,2770,7.73,2771,4.168,2772,4.168,2773,4.168,2774,4.168,2775,4.168,2776,7.06,2777,4.168,2778,4.168,2779,7.06,2780,3.449,2781,4.168,2782,4.168,2783,4.168,2784,4.168,2785,4.168,2786,4.168,2787,4.168,2788,3.735]],["title/components/MatchMenuComponent.html",[0,1.235,90,2.102]],["body/components/MatchMenuComponent.html",[0,1.526,1,1.409,2,2.271,3,0.033,4,0.033,5,1.522,6,1.553,7,1.522,8,1.522,9,0.033,11,0.734,12,2.646,13,1.359,14,3.905,15,3.738,16,2.186,18,2.186,20,0.196,23,1.087,24,3.201,25,1.132,27,3.863,29,1.74,31,0.705,32,0.005,33,0.614,34,0.37,35,0.517,36,2.697,38,1.563,39,2.487,40,0.399,41,0.135,42,0.183,43,1.335,44,1.359,46,0.033,47,0.179,49,1.987,59,1.151,60,2.271,61,2.271,62,1.312,63,3.136,64,1.522,65,1.522,66,1.436,67,1.522,68,1.384,69,1.522,70,1.409,71,1.463,72,1.522,73,1.436,74,1.162,75,2.697,76,3.136,77,1.436,78,3.136,79,1.409,80,1.522,81,1.409,82,1.522,83,1.409,84,1.522,85,1.409,86,3.438,87,1.522,88,1.409,89,1.522,90,2.903,91,1.522,92,1.409,93,1.021,94,1.436,95,1.554,96,1.436,97,1.436,98,1.522,99,1.436,100,1.169,101,1.409,102,1.522,103,1.409,104,1.522,105,1.436,106,1.522,107,1.384,108,1.522,109,1.436,110,1.811,111,1.436,112,1.436,113,1.522,114,1.409,115,0.924,116,1.384,117,1.409,118,1.522,119,1.409,120,1.522,121,1.409,122,1.522,123,1.409,124,1.492,125,1.522,126,0.003,127,0.003,151,1.931,160,1.384,161,1.189,173,5.141,186,0.43,187,1.674,191,3.761,208,4.273,211,4.044,225,4.091,296,1.928,312,2.117,317,2.117,318,2.643,479,4.362,503,2.117,650,4.378,806,1.099,831,2.048,903,0.042,1009,2.854,1019,0.964,1136,3.022,1169,3.2,1210,3.622,1252,4.044,1365,2.281,1375,2.281,1555,3.223,1827,4.044,1917,2.048,2010,4.402,2012,2.194,2265,4.854,2266,5.425,2335,2.807,2341,2.117,2382,2.495,2387,4.854,2479,2.379,2480,5.173,2482,2.379,2486,4.386,2498,2.281,2499,2.194,2500,2.379,2502,2.281,2505,4.273,2508,2.495,2524,4.598,2610,6.751,2690,4.009,2726,2.379,2789,7.196,2790,3.039,2791,5.602,2792,4.626,2793,6.261,2794,6.261,2795,6.261,2796,6.261,2797,3.392,2798,6.261,2799,5.163,2800,4.626,2801,4.044,2802,3.392,2803,3.392,2804,3.392,2805,3.392,2806,3.392,2807,3.392,2808,4.009,2809,2.633,2810,2.633,2811,2.633,2812,3.039,2813,3.039,2814,3.039,2815,4.273,2816,3.039,2817,3.039,2818,5.602,2819,3.039,2820,2.633,2821,3.039,2822,3.039,2823,4.273,2824,2.495,2825,3.039,2826,3.039,2827,3.039,2828,3.039,2829,3.039,2830,3.039,2831,3.039,2832,3.039,2833,3.039,2834,2.633,2835,2.807,2836,2.807,2837,3.039,2838,3.039,2839,4.626,2840,3.039,2841,5.783,2842,3.039,2843,5.173,2844,3.039,2845,2.633,2846,2.807,2847,3.039,2848,3.039,2849,5.173,2850,2.807,2851,3.039,2852,2.807,2853,2.807,2854,3.039,2855,2.807,2856,2.807,2857,2.807,2858,3.039,2859,2.633,2860,4.273,2861,2.633,2862,2.633,2863,2.807,2864,5.173,2865,2.807,2866,2.807,2867,2.807,2868,2.807,2869,2.807,2870,2.807,2871,2.807,2872,2.807,2873,2.807,2874,2.807,2875,2.807,2876,2.807,2877,4.273,2878,3.039]],["title/injectables/MatchService.html",[178,0.534,479,3.158]],["body/injectables/MatchService.html",[3,0.057,4,0.057,9,0.057,11,0.838,20,0.341,23,1.607,25,1.672,29,1.946,31,1.925,32,0.005,33,0.814,34,0.549,35,1.412,38,1.925,40,0.734,41,0.142,42,0.318,46,0.057,47,0.31,86,2.168,126,0.004,127,0.004,178,0.805,184,1.03,185,1.016,266,2.748,479,4.763,576,2.065,619,1.94,642,3.814,646,3.905,647,3.814,648,4.552,649,4.106,652,4.106,658,2.757,659,3.786,661,3.956,662,2.817,664,1.254,672,3.093,677,2.757,700,2.593,732,3.093,807,1.911,876,6.332,878,3.964,891,3.258,894,2.757,1019,2.168,1259,5.266,1638,3.093,1658,7.402,1660,4.577,1661,6.313,1688,3.964,1689,3.814,1690,3.68,2236,4.135,2237,4.135,2238,4.135,2239,4.135,2240,4.135,2242,4.135,2245,4.135,2246,3.964,2879,5.895,2880,5.895,2881,5.895,2882,4.878,2883,5.895,2884,5.895]],["title/interfaces/MatchStatistics.html",[504,3.158,903,0.062]],["body/interfaces/MatchStatistics.html",[3,0.069,4,0.069,9,0.069,20,0.412,21,0.993,32,0.005,33,0.625,34,0.58,35,1.457,40,0.79,41,0.107,46,0.069,126,0.004,127,0.004,504,5.355,666,1.236,704,3.827,903,0.087,905,0.996,1019,2.438,1104,3.404,1239,5.355,1374,7.035,1375,6.431,1376,5.52,1377,5.52,1913,4.781,2885,7.11]],["title/injectables/MatchStatisticsMappingFirebase.html",[178,0.534,2886,4.533]],["body/injectables/MatchStatisticsMappingFirebase.html",[3,0.043,4,0.043,9,0.043,11,0.629,20,0.256,21,0.727,23,1.322,25,0.97,29,1.91,31,1.903,32,0.005,33,0.804,34,0.497,35,1.395,38,1.862,40,0.649,41,0.137,42,0.239,46,0.043,47,0.233,49,1.831,126,0.003,127,0.003,161,0.62,178,0.662,184,0.773,185,0.763,186,1.135,447,2.516,455,2.184,498,4.062,503,2.763,504,6.023,576,1.55,579,2.382,619,1.457,623,0.895,643,2.976,645,4.722,653,2.673,655,1.452,657,3.792,664,1.291,666,1.342,667,1.673,671,2.235,680,2.673,681,2.673,682,2.863,684,2.976,696,2.382,699,1.066,703,2.265,706,1.275,707,0.86,712,2.863,741,4.908,908,2.043,929,1.711,932,1.711,948,1.711,954,1.372,957,1.711,960,1.711,961,1.711,987,2.477,1017,4.273,1104,1.575,1368,3.569,1372,7.907,1374,3.255,1375,4.222,1609,3.294,1610,3.294,1611,3.294,1612,3.294,1613,3.294,1614,3.294,1615,3.294,1617,3.294,1618,2.027,1665,3.436,2070,5.12,2071,3.105,2074,3.105,2075,3.105,2076,3.105,2077,3.105,2078,3.105,2080,3.255,2081,4.722,2084,5.573,2085,3.255,2086,4.405,2758,4.875,2761,3.436,2762,3.436,2788,3.965,2886,5.627,2887,9.446,2888,4.426,2889,4.426,2890,4.426,2891,4.426,2892,4.426,2893,4.426,2894,4.426,2895,7.944,2896,7.944,2897,4.426,2898,4.426,2899,4.426]],["title/injectables/MatchStatsService.html",[178,0.534,481,3.721]],["body/injectables/MatchStatsService.html",[3,0.058,4,0.058,9,0.058,11,0.845,20,0.344,23,1.615,25,1.681,29,1.95,31,1.93,32,0.005,33,0.816,34,0.55,35,1.415,38,1.93,40,0.736,41,0.139,42,0.321,46,0.058,47,0.313,126,0.004,127,0.004,178,0.809,184,1.038,185,1.024,266,2.755,481,5.641,504,3.711,576,2.082,619,1.956,642,3.834,646,3.926,647,3.834,648,4.57,649,4.128,652,4.128,658,2.78,659,3.798,661,3.972,662,2.841,664,1.258,672,3.118,677,2.78,732,3.118,807,1.927,876,6.343,878,3.997,891,3.285,894,2.78,1019,2.18,1259,5.279,1638,3.118,1665,4.615,1666,7.686,1688,3.997,1689,3.845,1690,3.711,2236,4.17,2237,4.17,2238,4.17,2239,4.17,2240,4.17,2242,4.17,2245,4.17,2246,3.997,2882,4.919,2900,5.944,2901,5.944,2902,5.326,2903,5.944,2904,5.944]],["title/interfaces/MatchWithTeams.html",[903,0.062,2801,3.273]],["body/interfaces/MatchWithTeams.html",[0,0.935,3,0.023,4,0.023,9,0.023,11,0.331,12,1.621,14,0.9,15,0.87,16,0.985,18,0.985,20,0.327,21,0.443,24,1.066,25,0.51,27,2.117,28,2.56,32,0.005,34,0.227,35,0.862,36,1.004,40,0.18,41,0.132,42,0.126,43,0.916,44,0.932,45,1.323,46,0.023,47,0.123,48,1.564,49,2.036,50,1.362,51,1.362,56,3.008,85,0.967,86,3.237,88,0.967,110,1.852,126,0.002,127,0.002,151,0.87,161,1.355,172,2.312,180,0.634,186,0.94,187,2.407,191,4.737,196,1.925,211,1.505,212,0.949,213,1.711,225,2.242,243,3.415,244,0.517,256,1.325,259,1.96,262,1.385,266,1.136,273,2.085,274,0.967,296,2.177,299,2.282,301,2.59,304,1.632,306,1.323,308,2.557,312,3.046,317,3.046,318,4.155,327,1.505,471,2.686,479,2.39,503,3.902,619,0.766,650,3.928,666,0.815,671,0.828,706,0.852,732,2.56,750,2.085,771,1.776,806,0.754,808,2.39,813,1.221,819,1.137,822,3.442,831,1.405,874,2.114,886,1.632,903,0.029,904,2.686,905,0.326,906,1.806,908,0.828,909,2.816,910,1.711,911,1.711,912,2.686,936,1.854,938,1.881,941,0.643,974,1.066,1009,3.455,1019,1.088,1056,1.632,1078,2.686,1104,1.363,1124,1.871,1173,1.96,1174,1.806,1181,1.925,1198,1.925,1210,3.967,1233,4.159,1252,3.658,1277,1.632,1327,1.925,1334,1.925,1364,4.945,1365,4.779,1366,3.589,1367,3.589,1368,2.773,1369,4.39,1370,3.589,1388,1.711,1524,1.806,1535,2.085,1555,2.39,1690,1.453,1703,3.415,1917,1.405,1929,1.564,1930,2.477,1942,1.632,1952,2.686,1996,1.925,2010,3.31,2012,2.477,2054,1.505,2129,1.806,2166,1.632,2175,3.788,2177,2.973,2180,1.806,2181,1.806,2182,2.973,2187,3.788,2251,2.085,2252,1.632,2253,2.085,2265,1.806,2266,2.973,2292,2.085,2301,2.085,2302,1.711,2304,1.806,2306,2.085,2312,2.085,2314,2.085,2315,2.085,2316,3.431,2317,3.431,2318,3.431,2319,2.085,2320,2.085,2321,3.431,2322,2.085,2323,2.085,2327,3.169,2328,3.169,2329,3.431,2330,3.431,2339,3.431,2340,4.437,2341,4.197,2353,2.085,2355,2.085,2356,2.085,2357,2.085,2370,2.085,2372,3.431,2375,1.564,2378,2.085,2380,4.372,2381,3.431,2382,2.816,2384,3.431,2385,3.431,2386,1.925,2387,1.806,2389,3.431,2391,2.085,2392,2.085,2393,2.085,2394,1.925,2395,3.431,2396,3.431,2398,2.085,2399,2.085,2400,3.169,2402,3.431,2403,2.085,2479,5.557,2482,5.557,2486,1.632,2498,1.564,2499,1.505,2500,1.632,2502,1.564,2524,3.589,2526,4.372,2527,4.372,2610,1.806,2611,1.925,2690,2.973,2691,4.372,2692,3.431,2726,1.632,2735,1.806,2736,1.925,2801,3.157,2808,3.788,2809,1.806,2810,2.973,2811,1.806,2823,3.169,2824,1.711,2836,1.925,2841,4.68,2843,4.038,2845,1.806,2846,1.925,2849,4.038,2850,1.925,2852,1.925,2853,1.925,2855,4.038,2856,1.925,2857,1.925,2859,1.806,2860,3.169,2862,2.973,2863,1.925,2864,4.68,2865,1.925,2866,1.925,2867,1.925,2868,1.925,2869,1.925,2870,1.925,2871,1.925,2872,1.925,2873,1.925,2874,1.925,2875,1.925,2876,1.925,2877,3.169,2905,2.327,2906,2.327,2907,2.327,2908,2.085,2909,2.085,2910,2.327,2911,2.327,2912,2.327,2913,2.327,2914,2.327,2915,2.327,2916,2.327,2917,2.327,2918,5.655,2919,2.327,2920,2.327,2921,2.327,2922,1.925,2923,2.085,2924,2.327,2925,2.327,2926,2.327,2927,2.327,2928,4.879,2929,3.169,2930,2.327,2931,3.829,2932,2.327,2933,2.327,2934,2.327,2935,3.829,2936,3.829,2937,3.829,2938,4.879,2939,4.68,2940,3.829,2941,4.879,2942,3.829,2943,5.655,2944,4.879,2945,3.829,2946,2.327,2947,4.68,2948,2.327,2949,2.327,2950,3.829,2951,2.327,2952,2.327,2953,2.327,2954,2.327,2955,2.327,2956,2.327,2957,3.829,2958,3.829,2959,3.829,2960,3.829,2961,3.829,2962,1.925,2963,3.829,2964,3.829,2965,2.327,2966,3.829,2967,2.327,2968,2.327,2969,2.327,2970,2.327,2971,2.327,2972,2.327,2973,2.327,2974,2.327,2975,2.327,2976,2.327,2977,2.327,2978,4.879,2979,2.327,2980,2.327,2981,5.067,2982,3.829,2983,2.327,2984,2.327,2985,2.327,2986,2.327,2987,2.327,2988,2.327,2989,2.327,2990,2.327,2991,2.327,2992,3.829,2993,2.327,2994,3.829,2995,2.327,2996,2.327,2997,6.251,2998,4.879,2999,3.829,3000,3.169,3001,2.327,3002,2.327,3003,2.327,3004,3.829,3005,3.829,3006,3.169,3007,3.829,3008,3.829,3009,2.327,3010,2.327,3011,2.327,3012,2.085,3013,2.327,3014,2.327,3015,2.327,3016,2.327,3017,2.327,3018,1.925,3019,2.085,3020,2.327,3021,2.327,3022,2.327,3023,2.327,3024,2.327,3025,3.157,3026,2.327,3027,2.327,3028,2.085,3029,2.327,3030,2.327,3031,2.327,3032,2.327,3033,2.327,3034,1.806,3035,2.327,3036,2.327,3037,2.085,3038,2.327,3039,2.327,3040,2.327,3041,2.327,3042,2.327]],["title/interfaces/MatchWithTeams-1.html",[874,1.582,903,0.052,2801,2.737]],["body/interfaces/MatchWithTeams-1.html",[0,1.089,3,0.027,4,0.027,9,0.027,11,0.399,12,1.888,14,1.087,15,1.051,16,1.189,18,1.189,20,0.163,21,0.516,22,1.697,24,1.287,25,0.616,27,2.465,28,2.909,32,0.005,33,0.779,34,0.264,35,0.962,36,1.212,40,0.664,41,0.131,42,0.152,43,1.106,44,1.126,45,1.597,46,0.027,47,0.148,49,1.839,50,1.645,51,1.645,56,3.103,86,2.931,107,1.146,110,2.209,126,0.002,127,0.002,160,1.146,161,1.242,180,0.766,186,0.973,191,1.512,211,1.818,223,3.129,225,2.611,245,1.974,256,1.718,259,3.933,262,1.016,263,2.283,296,3.915,299,2.086,300,3.49,308,1.068,312,1.754,317,1.754,318,4.395,326,2.181,327,1.818,338,4.306,479,2.784,481,3.281,497,4.631,504,1.754,647,2.23,650,1.553,664,0.661,666,0.91,706,0.779,732,3.313,733,2.611,740,2.451,771,2.083,807,1.798,822,4.203,831,5.275,874,1.051,903,0.034,905,0.394,908,0.608,1009,2.465,1019,1.268,1056,1.971,1078,3.129,1104,2.248,1173,2.283,1252,1.818,1277,1.971,1351,2.181,1374,4.644,1375,5.166,1376,4.306,1377,4.306,1504,2.067,1638,2.909,1639,2.181,1703,4.159,2166,1.971,2340,5.252,2341,4.576,2375,1.889,2479,5.39,2482,5.39,2486,1.971,2488,1.971,2498,1.889,2499,1.818,2500,1.971,2502,1.889,2508,4.644,2510,4.306,2513,2.325,2519,2.325,2520,7.229,2801,3.588,2820,4.306,2824,3.281,2834,2.181,2861,2.181,2922,2.325,2929,2.325,2939,2.325,2947,3.691,2962,2.325,3000,2.325,3006,2.325,3025,1.818,3043,2.518,3044,2.518,3045,2.518,3046,2.325,3047,2.518,3048,2.518,3049,2.518,3050,2.518,3051,2.518,3052,2.518,3053,2.518,3054,3.996,3055,2.518,3056,2.518,3057,2.518,3058,2.518,3059,2.518,3060,2.518,3061,2.518,3062,3.996,3063,2.518,3064,2.518,3065,2.518,3066,2.518,3067,2.518,3068,2.518,3069,2.518,3070,3.996,3071,2.518,3072,2.518,3073,2.518,3074,2.518,3075,2.518,3076,2.518,3077,2.518,3078,2.518,3079,2.518,3080,2.518,3081,3.996,3082,2.518,3083,7.143,3084,6.171,3085,2.518,3086,3.996,3087,3.996,3088,2.518,3089,2.518,3090,3.996,3091,2.518,3092,2.518,3093,2.325,3094,2.325,3095,2.518,3096,2.518,3097,2.518,3098,2.518,3099,3.996,3100,2.518,3101,3.996,3102,2.518,3103,2.325,3104,2.518,3105,3.691,3106,2.325,3107,2.518,3108,2.518,3109,3.996,3110,4.969,3111,4.969,3112,4.969,3113,2.518,3114,6.171,3115,2.518,3116,3.996,3117,2.518,3118,2.518,3119,2.518,3120,3.996,3121,2.518,3122,2.518,3123,2.518,3124,4.969,3125,2.518,3126,2.518,3127,5.658,3128,3.996,3129,3.996,3130,2.518,3131,2.518,3132,3.996,3133,3.996,3134,2.518,3135,2.518,3136,2.518,3137,3.996,3138,2.518,3139,2.518,3140,3.996,3141,2.518,3142,3.996,3143,2.518,3144,2.518,3145,2.518,3146,2.325,3147,2.518,3148,2.518,3149,2.518,3150,2.518,3151,2.518,3152,2.518,3153,2.518,3154,3.996,3155,3.996,3156,2.518,3157,2.518,3158,2.518,3159,4.969,3160,2.518,3161,2.518,3162,2.518,3163,2.518,3164,2.518,3165,3.996,3166,2.518,3167,2.518,3168,2.518,3169,2.325,3170,2.518,3171,2.518,3172,2.518,3173,2.518,3174,2.518,3175,2.518,3176,2.518,3177,2.518,3178,2.518,3179,2.518,3180,2.518,3181,3.996,3182,2.518,3183,3.996,3184,2.518,3185,2.518,3186,2.518,3187,2.518,3188,2.518,3189,2.518,3190,2.518,3191,2.518,3192,2.518,3193,2.325]],["title/interfaces/MatchWithTeams-2.html",[903,0.052,1009,2.339,2801,2.737]],["body/interfaces/MatchWithTeams-2.html",[0,1.545,3,0.043,4,0.043,9,0.043,11,0.636,12,2.679,14,1.731,15,1.673,16,1.894,18,1.894,20,0.259,21,0.733,24,2.05,25,0.981,27,3.499,32,0.005,34,0.375,35,1.217,36,1.931,39,1.593,40,0.346,41,0.144,42,0.241,43,1.762,44,1.793,46,0.043,47,0.236,49,2.193,86,3.306,90,1.859,110,2.165,126,0.003,127,0.003,151,2.367,160,1.826,161,1.287,173,4.585,186,0.567,187,2.052,191,4.297,208,3.703,211,2.895,225,3.705,296,2.544,312,2.794,317,2.794,318,3.24,479,3.951,503,2.794,650,3.499,806,1.451,831,2.703,903,0.055,905,0.627,1009,3.499,1019,1.799,1169,3.759,1210,4.44,1252,4.751,1365,3.009,1375,3.009,1555,3.951,1827,4.751,1917,2.703,2010,4.931,2012,2.895,2265,3.474,2266,4.914,2335,3.703,2341,2.794,2382,3.292,2387,5.702,2479,5.601,2480,3.703,2482,5.601,2486,3.14,2498,3.009,2499,2.895,2500,3.14,2502,3.009,2505,5.238,2508,3.292,2524,5.402,2610,3.474,2690,4.914,2726,3.14,2789,3.703,2790,4.01,2791,4.01,2792,4.01,2793,4.01,2794,4.01,2795,4.01,2796,4.01,2798,5.671,2800,4.01,2801,4.751,2808,4.914,2809,3.474,2810,3.474,2811,3.474,2812,4.01,2813,4.01,2814,4.01,2815,5.238,2816,4.01,2817,4.01,2818,6.58,2819,4.01,2820,3.474,2821,4.01,2822,4.01,2823,5.238,2824,3.292,2825,4.01,2826,4.01,2827,4.01,2828,4.01,2829,4.01,2830,4.01,2831,4.01,2832,4.01,2833,4.01,2834,3.474,2835,3.703,2836,3.703,2837,4.01,2838,4.01,2839,5.671,2840,4.01,2841,6.607,2842,4.01,2843,6.077,2844,4.01,2845,3.474,2846,3.703,2847,4.01,2848,4.01,2849,6.077,2850,3.703,2851,4.01,2852,3.703,2853,3.703,2854,4.01,2855,3.703,2856,3.703,2857,3.703,2858,4.01,2859,3.474,2860,5.238,2861,3.474,2862,3.474,2863,3.703,2864,6.077,2865,3.703,2866,3.703,2867,3.703,2868,3.703,2869,3.703,2870,3.703,2871,3.703,2872,3.703,2873,3.703,2874,3.703,2875,3.703,2876,3.703,2877,5.238,2878,4.01]],["title/modules/MatchesPageModule.html",[128,1.545,3194,3.928]],["body/modules/MatchesPageModule.html",[3,0.064,4,0.064,9,0.064,32,0.005,41,0.15,42,0.358,43,2.612,44,2.659,46,0.064,47,0.349,59,2.253,88,4.064,126,0.004,127,0.004,128,2.027,130,2.482,131,3.172,132,4.574,133,3.397,134,2.978,135,2.567,140,4.21,141,3.318,142,3.397,144,3.181,145,3.237,146,4.426,147,3.397,148,4.426,149,2.659,150,4.21,151,2.482,152,3.572,154,3.482,155,3.668,395,5.561,503,4.143,2472,4.463,3194,7.895,3195,5.947,3196,5.947,3197,5.947,3198,7.196,3199,6.637,3200,5.947]],["title/modules/MatchesPageRoutingModule.html",[128,1.545,3198,3.721]],["body/modules/MatchesPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,88,3.66,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,3198,6.48,3200,6.662,3201,7.435]],["title/interfaces/MediaRaw.html",[903,0.062,922,1.615]],["body/interfaces/MediaRaw.html",[3,0.054,4,0.054,9,0.054,11,0.791,20,0.322,21,0.851,32,0.005,33,0.768,34,0.33,40,0.677,41,0.136,42,0.3,46,0.092,47,0.293,74,1.654,126,0.004,127,0.004,161,1.152,178,0.775,184,0.972,185,0.959,186,1.225,244,1.236,453,3.474,455,1.287,464,1.56,623,1.126,655,1.699,664,1.219,666,1.059,667,1.172,699,1.34,706,1.283,707,1.082,903,0.115,905,0.78,908,2.199,915,3.361,916,1.889,917,2.277,918,3.847,919,3.076,920,2.558,921,1.889,922,2.346,923,3.217,924,2.558,925,2.549,926,1.455,927,1.455,928,1.889,929,1.516,930,4.94,931,2.782,932,1.516,933,3.742,934,1.725,935,1.889,936,1.651,937,3.742,938,1.675,939,3.076,940,1.651,941,1.538,942,1.889,943,1.675,944,1.675,945,1.675,946,2.23,947,1.675,948,1.516,949,3.742,950,4.94,951,1.889,952,1.889,953,1.889,954,1.725,955,1.889,956,1.889,957,1.516,958,5.135,959,2.792,960,1.516,961,1.516]],["title/interfaces/MediaRaw-1.html",[874,1.582,903,0.052,922,1.351]],["body/interfaces/MediaRaw-1.html",[3,0.046,4,0.046,9,0.046,11,0.672,20,0.274,21,0.762,32,0.005,33,0.755,34,0.28,40,0.732,41,0.134,42,0.255,46,0.064,47,0.249,74,1.481,95,1.98,100,2.82,110,1.97,126,0.003,127,0.003,161,1.146,178,0.694,184,0.826,185,0.815,186,1.179,244,1.05,249,1.656,256,1.108,455,1.521,456,2.768,459,2.688,464,1.325,623,0.957,655,1.521,664,1.212,666,1.316,667,0.996,699,1.139,706,1.149,707,0.919,740,1.683,771,2.15,903,0.116,905,0.663,908,2.182,916,1.605,917,2.345,920,2.392,921,1.605,922,2.101,923,2.419,924,1.924,926,1.236,927,1.236,928,1.605,929,1.288,932,1.288,934,1.466,935,1.605,936,2.762,938,2.803,940,1.403,941,1.307,942,1.605,943,1.423,944,1.423,945,1.423,946,1.895,947,1.423,948,1.288,951,1.605,952,1.605,953,1.605,954,1.466,955,1.605,956,1.605,957,1.288,959,2.568,960,1.288,961,1.288,962,2.614,963,4.788,964,2.364,965,2.733,966,2.08,967,2.894,968,1.929,969,4.402,970,2.768,971,4.187,972,4.187,973,3.336,974,2.166,975,4.187,976,4.187,977,3.973,978,2.002,979,2.768,980,2.856,981,2.768,982,2.768,983,2.768,984,2.768,985,2.856,986,2.502,987,1.605,988,2.166,989,2.856,990,2.856,991,2.856,992,2.856,993,2.856,994,2.856,995,2.856,996,2.856,997,1.798,998,2.856,999,3.973,1000,2.856,1001,2.856,1002,2.856,1003,2.856,1004,2.856,1005,2.856,1006,2.856,1007,2.856,1008,4.301]],["title/interfaces/MediaRaw-2.html",[903,0.052,922,1.351,1009,2.339]],["body/interfaces/MediaRaw-2.html",[3,0.048,4,0.048,9,0.048,11,0.704,20,0.287,21,0.787,32,0.005,33,0.768,34,0.294,40,0.729,41,0.131,42,0.268,46,0.048,47,0.261,74,1.879,110,1.637,126,0.003,127,0.003,161,1.169,178,0.717,184,0.866,185,0.854,186,1.193,244,1.101,249,1.737,256,1.162,455,1.147,457,2.74,464,1.389,623,1.003,655,1.572,664,1.237,666,1.333,667,1.044,699,1.194,706,1.187,707,0.964,740,1.765,771,2.204,903,0.118,905,0.695,908,2.186,916,1.683,917,2.404,918,3.628,920,2.441,921,1.683,922,2.17,923,2.5,924,2.441,925,3.553,926,1.776,927,1.776,928,2.307,929,1.351,932,1.351,934,1.537,935,1.683,936,2.594,938,2.632,940,1.471,941,1.37,942,1.683,943,1.492,944,1.492,945,1.492,946,1.986,947,1.492,948,1.351,951,1.683,952,1.683,953,1.683,954,1.537,955,1.683,956,1.683,957,1.351,959,2.633,960,1.351,961,1.351,965,3.467,966,2.181,967,3.671,968,3.404,978,2.099,986,2.585,987,1.683,988,2.271,997,1.885,1057,2.668,1058,2.479,1059,4.272,1060,4.272,1061,3.979,1062,2.818,1063,2.668,1064,2.668,1065,2.902,1066,2.902,1067,2.902,1068,2.902,1069,2.902,1070,2.902,1071,3.979,1072,2.902,1073,2.902,1074,2.902,1075,2.902,1076,2.902,1077,4.288]],["title/interfaces/MediaRaw-3.html",[903,0.052,922,1.351,1056,2.968]],["body/interfaces/MediaRaw-3.html",[3,0.045,4,0.045,9,0.045,11,0.662,20,0.27,21,0.754,32,0.005,33,0.659,34,0.276,40,0.746,41,0.128,42,0.251,46,0.045,47,0.245,93,1.959,115,1.773,126,0.003,127,0.003,161,1.138,178,0.686,184,0.813,185,0.802,186,1.175,249,2.28,256,1.525,262,2.354,455,1.077,461,2.646,464,1.304,623,0.942,655,1.505,664,1.204,666,1.232,667,0.98,699,1.121,706,1.137,707,0.905,740,2.316,771,2.309,806,1.509,903,0.116,905,0.652,908,2.159,916,1.58,917,2.325,920,2.376,921,1.58,922,2.078,924,2.376,926,1.701,927,1.701,928,1.58,929,1.268,931,2.327,932,1.268,934,1.443,935,1.58,936,2.536,938,2.573,940,1.381,941,1.286,942,1.58,943,1.401,944,1.401,945,1.401,947,1.401,948,1.268,951,1.58,952,1.58,953,1.58,954,1.443,955,1.58,956,1.58,957,1.268,959,2.547,960,1.268,961,1.268,973,1.899,986,2.475,987,2.209,997,2.475,1079,2.573,1080,4.756,1081,1.971,1082,2.506,1083,3.699,1084,3.809,1085,2.177,1086,1.801,1087,1.899,1088,2.275,1089,2.275,1090,4.756,1091,3.809,1092,3.841,1093,2.811,1094,2.811,1095,2.506,1096,2.811,1097,2.811,1098,2.811,1099,2.811,1100,2.646,1101,2.811,1102,5.162,1103,2.811,1104,2.316,1105,2.811,1106,2.811,1107,2.811,1108,2.811,1109,2.811,1110,3.93,1111,2.811,1112,2.811,1113,2.811,1114,2.811,1115,5.162,1116,1.832,1117,2.811,1118,1.832,1119,2.811,1120,1.832,1121,2.811,1122,1.832,1123,2.811,1124,2.275,1125,2.811,1126,4.531]],["title/interfaces/Medium.html",[903,0.062,1118,1.992]],["body/interfaces/Medium.html",[3,0.045,4,0.045,9,0.045,20,0.268,21,0.75,25,1.014,32,0.005,33,0.813,34,0.571,40,0.81,41,0.133,42,0.25,46,0.093,47,0.244,49,2.032,126,0.003,127,0.003,161,0.908,162,3.915,180,1.26,186,0.947,187,1.499,204,2.26,256,1.084,266,1.372,274,1.922,403,2.076,405,2.163,463,3.316,464,1.296,509,2.708,619,1.522,634,2.629,637,2.557,639,2.793,664,0.685,666,1.468,759,4.63,786,1.789,800,3.096,802,2.312,806,3.002,807,1.499,894,2.163,903,0.114,905,0.648,920,1.353,926,1.209,927,1.209,1012,2.427,1019,1.315,1020,2.489,1023,2.489,1024,3.827,1025,2.489,1026,2.489,1027,2.489,1028,2.427,1087,1.887,1116,2.943,1118,3.189,1120,2.943,1122,2.943,1389,2.793,1431,4.515,1432,2.21,1433,2.793,1434,2.793,1435,3.792,1436,2.887,1437,2.887,1438,2.887,1439,2.887,1440,4.525,1441,4.525,1442,5.781,1443,5.781,1444,5.781,1445,2.887,1446,5.781,1447,5.592,1448,2.887,1449,2.887,1450,2.793,1451,2.887,1452,2.887,1453,2.793,1454,4.667,1455,2.887,1456,2.793,1457,2.887,1458,2.887,1459,2.887,1460,2.887]],["title/interfaces/Meta.html",[903,0.062,924,1.479]],["body/interfaces/Meta.html",[3,0.055,4,0.055,9,0.055,11,0.803,32,0.005,33,0.773,40,0.681,41,0.137,42,0.305,46,0.093,47,0.298,74,1.671,126,0.004,127,0.004,161,1.161,178,0.783,184,0.987,185,0.974,186,1.229,244,1.256,453,3.529,455,1.307,464,1.584,623,1.144,655,1.717,664,1.228,666,1.07,667,1.191,699,1.361,706,1.297,707,1.099,903,0.115,905,0.792,908,2.172,915,3.414,916,1.919,917,2.301,918,3.877,919,3.125,920,2.171,921,1.919,922,1.805,923,3.237,924,2.673,925,2.589,926,1.477,927,1.477,928,1.919,929,1.54,930,4.992,931,2.826,932,1.54,933,3.801,934,1.752,935,1.919,936,1.677,937,3.801,938,1.702,939,3.125,940,1.677,941,1.562,942,1.919,943,1.702,944,1.702,945,1.702,946,2.265,947,1.702,948,1.54,949,3.801,950,4.992,951,1.919,952,1.919,953,1.919,954,1.752,955,1.919,956,1.919,957,1.54,958,5.174,959,2.813,960,1.54,961,1.54]],["title/interfaces/Meta-1.html",[874,1.582,903,0.052,924,1.237]],["body/interfaces/Meta-1.html",[3,0.047,4,0.047,9,0.047,11,0.681,32,0.005,33,0.759,40,0.734,41,0.134,42,0.259,46,0.064,47,0.252,74,1.495,95,1.999,100,2.836,110,1.981,126,0.003,127,0.003,161,1.152,178,0.7,184,0.837,185,0.826,186,1.183,244,1.065,249,1.679,256,1.123,455,1.536,456,2.805,459,2.724,464,1.343,623,0.97,655,1.536,664,1.219,666,1.321,667,1.009,699,1.154,706,1.16,707,0.932,740,1.706,771,2.165,903,0.116,905,0.671,908,2.157,916,1.627,917,2.362,920,1.942,921,1.627,922,1.53,923,2.442,924,2.228,926,1.252,927,1.252,928,1.627,929,1.306,932,1.306,934,1.485,935,1.627,936,2.771,938,2.812,940,1.422,941,1.324,942,1.627,943,1.442,944,1.442,945,1.442,946,1.92,947,1.442,948,1.306,951,1.627,952,1.627,953,1.627,954,1.485,955,1.627,956,1.627,957,1.306,959,2.586,960,1.306,961,1.306,962,2.649,963,4.815,964,2.396,965,2.759,966,2.108,967,2.921,968,1.955,969,4.427,970,2.805,971,4.211,972,4.211,973,3.356,974,2.195,975,4.211,976,4.211,977,4.01,978,2.028,979,2.805,980,2.894,981,2.805,982,2.805,983,2.805,984,2.805,985,2.894,986,2.525,987,1.627,988,2.195,989,2.894,990,2.894,991,2.894,992,2.894,993,2.894,994,2.894,995,2.894,996,2.894,997,1.822,998,2.894,999,4.01,1000,2.894,1001,2.894,1002,2.894,1003,2.894,1004,2.894,1005,2.894,1006,2.894,1007,2.894,1008,4.331]],["title/interfaces/Meta-2.html",[903,0.052,924,1.237,1009,2.339]],["body/interfaces/Meta-2.html",[3,0.049,4,0.049,9,0.049,20,0.291,21,0.795,25,1.103,32,0.005,34,0.298,40,0.65,41,0.147,42,0.272,46,0.085,47,0.265,49,1.263,56,2.131,126,0.003,127,0.003,161,0.705,178,0.725,180,1.372,182,2.46,184,0.879,185,0.867,186,1.24,222,2.355,256,1.18,266,2.608,274,2.092,299,2.355,301,2.306,308,1.914,403,3.083,405,2.355,455,1.164,619,1.657,623,1.019,642,2.517,655,1.164,658,2.355,659,3.31,661,2.355,662,2.406,664,0.746,666,1.267,667,1.447,669,2.577,671,1.792,677,2.355,698,2.355,699,1.654,700,2.215,702,2.862,703,2.577,704,2.092,705,2.517,706,0.879,707,0.979,710,3.04,765,3.143,783,4.288,786,2.657,787,4.288,788,3.143,790,3.04,796,3.143,798,3.04,799,3.257,800,3.283,801,3.532,802,2.517,805,3.257,806,1.632,807,2.227,808,3.143,809,3.257,810,3.257,811,3.257,812,2.215,813,3.604,814,3.257,815,3.143,816,3.257,818,2.862,819,2.46,820,2.862,874,1.882,903,0.103,905,0.705,908,1.691,917,1.56,924,2.456,1010,3.703,1011,3.385,1012,2.641,1013,3.385,1014,3.143,1015,6.631,1016,3.703,1017,2.947,1018,3.532,1019,1.431,1020,2.709,1021,5.911,1022,3.385,1023,2.709,1024,4.002,1025,2.709,1026,2.709,1027,2.709,1028,2.641,1029,3.143,1030,3.385,1031,3.385,1032,4.619,1033,3.703,1034,3.385,1035,3.385,1036,3.385,1037,4.619,1038,3.703,1039,5.751,1040,3.703,1041,3.385,1042,3.385,1043,3.703,1044,3.703,1045,3.385,1046,3.385,1047,3.385,1048,3.703,1049,3.385,1050,3.703,1051,3.385,1052,3.703,1053,3.385,1054,3.703,1055,3.703]],["title/interfaces/Meta-3.html",[903,0.052,924,1.237,1056,2.968]],["body/interfaces/Meta-3.html",[3,0.049,4,0.049,9,0.049,11,0.714,32,0.005,33,0.772,40,0.731,41,0.132,42,0.271,46,0.049,47,0.265,74,1.89,110,1.652,126,0.003,127,0.003,161,1.176,178,0.724,184,0.878,185,0.866,186,1.197,244,1.117,249,1.761,256,1.178,455,1.163,457,2.779,464,1.409,623,1.017,655,1.587,664,1.244,666,1.338,667,1.059,699,1.211,706,1.199,707,0.977,740,1.789,771,2.22,903,0.119,905,0.704,908,2.16,916,1.706,917,2.422,918,3.654,920,2.007,921,1.706,922,1.605,923,2.524,924,2.57,925,3.579,926,1.793,927,1.793,928,2.329,929,1.37,932,1.37,934,1.558,935,1.706,936,2.607,938,2.645,940,1.491,941,1.389,942,1.706,943,1.513,944,1.513,945,1.513,946,2.014,947,1.513,948,1.37,951,1.706,952,1.706,953,1.706,954,1.558,955,1.706,956,1.706,957,1.37,959,2.652,960,1.37,961,1.37,965,3.488,966,2.212,967,3.693,968,3.424,978,2.128,986,2.61,987,1.706,988,2.303,997,1.912,1057,2.706,1058,2.513,1059,4.297,1060,4.297,1061,4.017,1062,2.858,1063,2.706,1064,2.706,1065,2.943,1066,2.943,1067,2.943,1068,2.943,1069,2.943,1070,2.943,1071,4.017,1072,2.943,1073,2.943,1074,2.943,1075,2.943,1076,2.943,1077,4.319]],["title/interfaces/Meta-4.html",[903,0.052,924,1.237,1078,2.968]],["body/interfaces/Meta-4.html",[3,0.046,4,0.046,9,0.046,11,0.67,32,0.005,33,0.664,40,0.748,41,0.129,42,0.254,46,0.046,47,0.248,93,1.977,115,1.789,126,0.003,127,0.003,161,1.145,178,0.693,184,0.824,185,0.813,186,1.179,249,2.3,256,1.539,262,2.376,455,1.091,461,2.681,464,1.322,623,0.954,655,1.519,664,1.211,666,1.238,667,0.993,699,1.136,706,1.147,707,0.917,740,2.338,771,2.322,806,1.529,903,0.116,905,0.661,908,2.126,916,1.601,917,2.342,920,1.92,921,1.601,922,1.506,924,2.512,926,1.716,927,1.716,928,1.601,929,1.285,931,2.358,932,1.285,934,1.462,935,1.601,936,2.548,938,2.585,940,1.399,941,1.303,942,1.601,943,1.42,944,1.42,945,1.42,947,1.42,948,1.285,951,1.601,952,1.601,953,1.601,954,1.462,955,1.601,956,1.601,957,1.285,959,2.564,960,1.285,961,1.285,973,1.924,986,2.497,987,2.229,997,2.497,1079,2.607,1080,4.783,1081,1.996,1082,2.538,1083,3.733,1084,3.844,1085,2.206,1086,1.825,1087,1.924,1088,2.305,1089,2.305,1090,4.783,1091,3.844,1092,3.868,1093,2.848,1094,2.848,1095,2.538,1096,2.848,1097,2.848,1098,2.848,1099,2.848,1100,2.681,1101,2.848,1102,5.187,1103,2.848,1104,2.338,1105,2.848,1106,2.848,1107,2.848,1108,2.848,1109,2.848,1110,3.966,1111,2.848,1112,2.848,1113,2.848,1114,2.848,1115,5.187,1116,1.857,1117,2.848,1118,1.857,1119,2.848,1120,1.857,1121,2.848,1122,1.857,1123,2.848,1124,2.305,1125,2.848,1126,4.563]],["title/interfaces/Model.html",[704,2.102,903,0.062]],["body/interfaces/Model.html",[3,0.073,4,0.073,9,0.073,20,0.434,21,1.025,32,0.005,34,0.558,35,1.483,40,0.779,46,0.073,126,0.004,127,0.004,664,1.396,704,3.678,903,0.092,905,1.05,926,2.462,927,2.462,3202,7.497,3203,5.259,3204,7.497,3205,7.497]],["title/interfaces/Paginated.html",[706,0.884,903,0.062]],["body/interfaces/Paginated.html",[3,0.072,4,0.072,9,0.072,20,0.43,21,1.02,32,0.005,34,0.575,46,0.072,126,0.004,127,0.004,659,3.729,666,1.448,667,1.977,671,3.342,706,1.539,819,3.633,903,0.091,905,1.042,908,2.03,941,2.054,1618,4.3,2171,6.152,3206,7.435,3207,7.435]],["title/interfaces/PaginatedRaw.html",[903,0.062,1014,3.158]],["body/interfaces/PaginatedRaw.html",[3,0.049,4,0.049,9,0.049,20,0.292,21,0.797,25,1.107,32,0.005,34,0.55,40,0.606,41,0.147,42,0.272,46,0.067,47,0.266,56,2.137,126,0.003,127,0.003,178,0.726,180,1.375,182,2.467,184,0.882,185,0.87,186,1.215,222,2.361,266,2.495,274,2.097,299,2.361,301,2.312,308,1.92,403,3.088,405,2.361,455,1.168,619,1.662,620,4.452,623,1.021,642,2.524,655,1.168,658,2.361,659,3.725,661,2.361,666,1.454,667,1.063,669,2.584,677,2.361,698,2.361,699,1.657,700,2.221,702,2.87,703,2.584,704,2.097,705,2.524,706,0.882,707,0.981,710,3.049,761,5.078,765,3.152,771,2.39,783,4.296,786,2.662,787,4.296,788,3.152,790,3.049,796,3.152,797,3.713,798,3.049,799,3.266,803,4.178,804,3.92,805,3.266,806,1.636,807,2.231,808,3.152,809,3.266,810,3.266,811,3.266,812,2.221,813,3.611,814,3.266,815,3.152,816,3.266,818,2.87,819,2.467,820,2.87,874,1.888,903,0.062,905,0.707,908,1.819,1011,3.395,1013,3.395,1014,4.296,1019,1.435,1021,5.265,1022,3.395,1029,3.152,1030,3.395,1031,3.395,1032,4.628,1034,3.395,1035,3.395,1036,3.395,1037,4.628,1041,3.395,1042,3.395,1045,3.395,1046,3.395,1047,3.395,1049,3.395,1051,3.395,1053,3.395,1618,3.852,1691,4.178,1692,4.524,1693,4.178,1700,7.535,1701,7.535,1702,6.167,1703,5.078,1704,7.535,1705,4.524,1706,4.524,1707,6.167,1708,4.524,1709,4.524,1710,4.524,1711,4.524,1712,4.524]],["title/interfaces/PaginatedRaw-1.html",[874,1.582,903,0.052,1014,2.642]],["body/interfaces/PaginatedRaw-1.html",[3,0.048,4,0.048,9,0.048,20,0.289,21,0.79,25,1.093,32,0.005,34,0.404,40,0.647,41,0.147,42,0.269,46,0.085,47,0.263,49,1.25,56,2.11,126,0.003,127,0.003,161,0.698,178,0.72,180,1.358,182,2.436,184,0.871,185,0.859,186,1.237,222,2.332,256,1.169,266,2.599,274,2.071,299,2.332,301,2.283,308,1.896,403,3.062,405,2.332,455,1.153,619,1.641,623,1.009,642,2.492,655,1.153,658,2.332,659,3.293,661,2.332,662,2.382,664,0.739,666,1.263,667,1.437,669,2.552,671,1.774,677,2.332,698,2.332,699,1.643,700,2.193,702,2.834,703,2.552,704,2.071,705,2.492,706,0.871,707,0.969,710,3.011,765,3.112,783,4.26,786,2.64,787,4.26,788,3.112,790,3.011,796,3.112,798,3.011,799,3.225,800,3.261,801,3.497,802,2.492,805,3.225,806,1.616,807,2.212,808,3.112,809,3.225,810,3.225,811,3.225,812,2.193,813,3.58,814,3.225,815,3.112,816,3.225,818,2.834,819,2.436,820,2.834,874,1.864,903,0.103,905,0.698,908,2.04,917,1.545,924,2.758,1010,3.667,1011,3.352,1012,2.615,1013,3.352,1014,4.26,1015,5.457,1016,3.667,1017,2.918,1018,3.497,1019,1.417,1020,2.683,1021,5.891,1022,3.352,1023,2.683,1024,3.982,1025,2.683,1026,2.683,1027,2.683,1028,2.615,1029,3.112,1030,3.352,1031,3.352,1032,4.588,1033,3.667,1034,3.352,1035,3.352,1036,3.352,1037,4.588,1038,3.667,1039,5.722,1040,3.667,1041,3.352,1042,3.352,1043,3.667,1044,3.667,1045,3.352,1046,3.352,1047,3.352,1048,3.667,1049,3.352,1050,3.667,1051,3.352,1052,3.667,1053,3.352,1054,3.667,1055,3.667]],["title/interfaces/Pagination.html",[903,0.062,1015,3.549]],["body/interfaces/Pagination.html",[3,0.047,4,0.047,9,0.047,20,0.283,21,0.78,25,1.072,32,0.005,34,0.491,40,0.642,41,0.146,42,0.264,46,0.084,47,0.258,49,1.227,56,2.07,126,0.003,127,0.003,161,0.685,178,0.71,180,1.332,182,2.389,184,0.854,185,0.843,186,1.233,222,2.287,256,1.146,266,2.581,274,2.032,299,2.287,301,2.24,308,1.86,403,3.022,405,2.287,455,1.131,619,1.609,623,0.989,642,2.445,655,1.131,658,2.287,659,3.26,661,2.287,662,2.337,664,0.725,666,1.425,667,1.832,669,2.503,671,2.953,677,2.287,698,2.287,699,1.621,700,2.151,702,2.78,703,2.503,704,2.032,705,2.445,706,0.854,707,0.951,710,2.953,765,3.053,783,4.204,786,2.605,787,4.204,788,3.053,790,2.953,796,3.053,798,2.953,799,3.164,800,3.218,801,3.431,802,2.445,805,3.164,806,1.585,807,2.183,808,3.053,809,3.164,810,3.164,811,3.164,812,2.151,813,3.533,814,3.164,815,3.053,816,3.164,818,2.78,819,2.389,820,2.78,874,1.829,903,0.102,905,0.685,908,1.666,917,1.516,924,2.252,1010,3.597,1011,3.288,1012,2.566,1013,3.288,1014,3.053,1015,5.821,1016,6.103,1017,4.857,1018,3.431,1019,1.39,1020,2.632,1021,5.851,1022,3.288,1023,2.632,1024,3.942,1025,2.632,1026,2.632,1027,2.632,1028,2.566,1029,3.053,1030,3.288,1031,3.288,1032,4.528,1033,3.597,1034,3.288,1035,3.288,1036,3.288,1037,4.528,1038,3.597,1039,5.665,1040,3.597,1041,3.288,1042,3.288,1043,3.597,1044,3.597,1045,3.288,1046,3.288,1047,3.288,1048,3.597,1049,3.288,1050,3.597,1051,3.288,1052,3.597,1053,3.288,1054,3.597,1055,3.597]],["title/pipes/PasswordTogglePipe.html",[333,3.928,3208,3.549]],["body/pipes/PasswordTogglePipe.html",[3,0.07,4,0.07,9,0.07,11,1.031,13,2.906,23,1.528,29,1.487,31,1.507,32,0.005,33,0.816,34,0.43,35,1.105,38,1.507,40,0.672,41,0.109,42,0.391,46,0.07,47,0.382,126,0.004,127,0.004,186,0.919,262,3.361,333,6.74,1246,4.529,1832,4.878,2010,4.247,2546,7.184,3208,6.09,3209,7.254,3210,7.184,3211,6.74,3212,7.254,3213,8.682,3214,8.682,3215,7.254,3216,8.682]],["title/interfaces/PersonAttributes.html",[903,0.062,1080,2.962]],["body/interfaces/PersonAttributes.html",[3,0.041,4,0.041,9,0.041,11,0.599,20,0.244,21,0.703,32,0.005,33,0.753,34,0.545,35,1.378,40,0.787,41,0.124,42,0.228,46,0.041,47,0.222,93,2.478,115,1.653,126,0.003,127,0.003,161,1.089,178,0.64,184,0.737,185,0.727,186,1.145,212,2.899,249,2.125,256,1.422,262,2.195,455,0.975,461,2.397,464,1.182,623,0.853,655,1.403,664,1.152,666,1.327,667,0.888,699,1.016,706,1.06,707,0.82,740,2.16,771,2.57,806,1.367,903,0.113,905,0.591,908,2.087,916,1.431,917,2.203,920,1.774,921,1.431,922,2.269,924,2.273,926,2.152,927,2.152,928,2.638,929,1.149,931,2.108,932,1.149,934,1.307,935,1.431,936,2.443,938,2.478,940,1.251,941,1.165,942,1.431,943,1.269,944,1.269,945,1.269,947,1.269,948,1.149,951,1.431,952,1.431,953,1.431,954,1.307,955,1.431,956,1.431,957,1.149,959,2.412,960,1.149,961,1.149,973,3.17,986,2.307,987,2.059,997,2.307,1079,2.331,1080,4.82,1081,1.785,1082,3.825,1083,3.449,1084,3.552,1085,1.973,1086,1.631,1087,1.72,1088,2.061,1089,2.061,1090,4.549,1091,3.552,1092,4.389,1093,2.547,1094,2.547,1095,2.27,1096,2.547,1097,2.547,1098,2.547,1099,2.547,1100,2.397,1101,2.547,1102,4.973,1103,2.547,1104,2.16,1105,2.547,1106,2.547,1107,2.547,1108,2.547,1109,2.547,1110,3.664,1111,2.547,1112,2.547,1113,2.547,1114,2.547,1115,4.973,1116,1.66,1117,2.547,1118,1.66,1119,2.547,1120,1.66,1121,2.547,1122,1.66,1123,2.547,1124,3.797,1125,2.547,1126,4.291]],["title/interfaces/PersonData.html",[903,0.062,1091,2.962]],["body/interfaces/PersonData.html",[3,0.045,4,0.045,9,0.045,11,0.662,20,0.27,21,0.754,32,0.005,33,0.659,34,0.276,40,0.746,41,0.128,42,0.251,46,0.045,47,0.245,93,1.959,115,1.773,126,0.003,127,0.003,161,1.138,178,0.686,184,0.813,185,0.802,186,1.175,249,2.28,256,1.525,262,2.354,455,1.077,461,2.646,464,1.304,623,0.942,655,1.505,664,1.204,666,1.232,667,0.98,699,1.121,706,1.137,707,0.905,740,2.316,771,2.309,806,1.509,903,0.116,905,0.652,908,2.159,916,1.58,917,2.325,920,1.903,921,1.58,922,1.486,924,2.376,926,1.701,927,1.701,928,1.58,929,1.268,931,2.327,932,1.268,934,1.443,935,1.58,936,2.536,938,2.573,940,1.381,941,1.286,942,1.58,943,1.401,944,1.401,945,1.401,947,1.401,948,1.268,951,1.58,952,1.58,953,1.58,954,1.443,955,1.58,956,1.58,957,1.268,959,2.547,960,1.268,961,1.268,973,1.899,986,2.475,987,2.209,997,2.475,1079,2.573,1080,5.185,1081,1.971,1082,2.506,1083,3.699,1084,3.809,1085,2.177,1086,1.801,1087,1.899,1088,2.275,1089,2.275,1090,4.756,1091,4.392,1092,3.841,1093,2.811,1094,2.811,1095,2.506,1096,2.811,1097,2.811,1098,2.811,1099,2.811,1100,2.646,1101,2.811,1102,5.162,1103,2.811,1104,2.316,1105,2.811,1106,2.811,1107,2.811,1108,2.811,1109,2.811,1110,3.93,1111,2.811,1112,2.811,1113,2.811,1114,2.811,1115,5.162,1116,1.832,1117,2.811,1118,1.832,1119,2.811,1120,1.832,1121,2.811,1122,1.832,1123,2.811,1124,2.275,1125,2.811,1126,4.531]],["title/interfaces/PersonRaw.html",[903,0.062,1090,2.962]],["body/interfaces/PersonRaw.html",[3,0.045,4,0.045,9,0.045,11,0.656,20,0.267,21,0.749,32,0.005,33,0.656,34,0.383,40,0.745,41,0.128,42,0.249,46,0.045,47,0.243,93,1.946,115,1.762,126,0.003,127,0.003,161,1.134,178,0.682,184,0.806,185,0.795,186,1.172,249,2.265,256,1.516,262,2.339,455,1.067,461,2.622,464,1.293,623,0.933,655,1.495,664,1.199,666,1.228,667,0.972,699,1.111,706,1.129,707,0.897,740,2.302,771,2.3,806,1.495,903,0.115,905,0.646,908,2.175,916,1.566,917,2.314,920,1.891,921,1.566,922,1.473,924,2.75,926,1.69,927,1.69,928,1.566,929,1.257,931,2.306,932,1.257,934,1.43,935,1.566,936,2.528,938,2.564,940,1.369,941,1.275,942,1.566,943,1.389,944,1.389,945,1.389,947,1.389,948,1.257,951,1.566,952,1.566,953,1.566,954,1.43,955,1.566,956,1.566,957,1.257,959,2.534,960,1.257,961,1.257,973,1.882,986,2.459,987,2.195,997,2.459,1079,2.55,1080,4.737,1081,1.953,1082,2.483,1083,3.676,1084,3.785,1085,2.158,1086,1.785,1087,1.882,1088,2.254,1089,2.254,1090,4.987,1091,3.785,1092,3.822,1093,2.786,1094,2.786,1095,2.483,1096,2.786,1097,2.786,1098,2.786,1099,2.786,1100,2.622,1101,2.786,1102,5.145,1103,2.786,1104,2.302,1105,2.786,1106,2.786,1107,2.786,1108,2.786,1109,2.786,1110,3.905,1111,2.786,1112,2.786,1113,2.786,1114,2.786,1115,5.145,1116,1.816,1117,2.786,1118,1.816,1119,2.786,1120,1.816,1121,2.786,1122,1.816,1123,2.786,1124,2.254,1125,2.786,1126,4.509]],["title/components/PictureSelectableComponent.html",[0,1.235,92,2.102]],["body/components/PictureSelectableComponent.html",[0,1.324,1,1.129,2,1.911,3,0.026,4,0.026,5,1.22,6,1.245,7,3.04,8,1.22,9,0.07,11,0.617,12,2.297,13,1.089,14,3.815,15,3.64,16,1.839,18,1.839,20,0.157,21,0.503,23,0.915,24,2.838,25,0.952,29,1.869,31,1.637,32,0.005,33,0.747,34,0.493,35,1.269,38,1.731,39,3.21,40,0.42,41,0.093,42,0.147,46,0.042,47,0.143,49,1.554,56,3.857,59,0.923,60,1.911,61,1.911,62,1.052,63,3.242,64,1.22,65,1.22,66,1.151,67,1.22,68,1.109,69,1.22,70,1.129,71,1.173,72,1.22,73,1.151,74,0.978,75,2.341,76,2.781,77,1.151,78,2.781,79,1.129,80,1.22,81,1.129,82,1.22,83,1.129,84,1.22,85,1.129,86,1.597,87,1.22,88,1.129,89,1.22,90,1.129,91,1.22,92,2.815,93,2.715,94,1.151,95,1.308,96,1.151,97,1.151,98,1.22,99,1.151,100,1.498,101,1.129,102,1.22,103,1.129,104,1.22,105,1.151,106,1.22,107,1.109,108,1.22,109,1.151,110,1.046,111,1.151,112,1.151,113,1.22,114,1.129,115,0.741,116,1.109,117,1.129,118,1.22,119,1.129,120,1.22,121,1.129,122,1.22,123,1.129,124,1.196,125,1.22,126,0.002,127,0.002,134,1.22,149,1.089,151,1.016,161,0.381,180,0.741,187,1.759,204,2.651,229,4.918,243,3.277,244,1.505,245,2.412,259,3.172,262,2.451,263,2.224,266,1.289,272,2.11,296,3.523,299,3.379,300,3.425,301,3.966,306,3.523,308,3.465,318,1.391,322,3.892,327,2.81,352,7.675,490,1.758,732,3.251,735,5.609,736,3.595,806,2.009,813,3.79,1169,3.468,1172,3.892,1251,3.892,1313,4.811,1325,3.892,1353,3.892,1557,5.607,1638,3.251,1690,2.712,1717,2.921,1718,5.26,1719,2.921,1722,1.828,1723,1.828,1760,3.047,1762,3.806,1763,3.047,1764,1.999,1765,4.558,1766,3.195,1767,3.195,1769,3.373,1770,3.195,1791,2.249,1917,2.623,1930,3.51,2098,1.999,2099,3.373,2100,4.49,2101,3.595,2105,4.49,2132,2.11,2133,2.249,2135,2.436,2140,2.249,2151,3.595,2153,4.49,2161,3.373,2198,2.249,2199,2.249,2246,2.921,2375,2.921,2400,3.595,2835,6.519,3025,2.81,3146,5.128,3217,8.241,3218,7.611,3219,4.344,3220,3.892,3221,3.892,3222,4.344,3223,4.344,3224,4.344,3225,3.892,3226,5.426,3227,3.892,3228,5.426,3229,4.344,3230,4.344,3231,6.197,3232,4.344,3233,4.344,3234,2.718,3235,2.718,3236,2.718,3237,2.718,3238,4.344,3239,6.473,3240,6.197,3241,6.197,3242,3.892,3243,4.344,3244,4.344,3245,4.344,3246,2.718,3247,5.426,3248,4.344,3249,2.718,3250,7.224,3251,2.718,3252,3.595,3253,2.718,3254,2.718,3255,2.718,3256,2.436,3257,4.344,3258,5.553,3259,4.344,3260,2.718,3261,6.197,3262,6.197,3263,2.436,3264,4.344,3265,4.344,3266,2.718,3267,3.892,3268,2.718,3269,4.344,3270,4.344,3271,4.344,3272,2.718,3273,2.718,3274,2.718,3275,2.718,3276,2.718,3277,6.775,3278,2.718,3279,4.344,3280,2.718,3281,2.718,3282,2.718,3283,2.718,3284,2.718,3285,2.718,3286,2.718,3287,4.344,3288,2.718,3289,2.718,3290,2.718,3291,2.718,3292,2.718,3293,2.718,3294,2.718,3295,2.718,3296,2.718,3297,2.718,3298,2.718,3299,2.718,3300,2.718,3301,2.718,3302,2.718,3303,2.718]],["title/interfaces/Player.html",[95,1.523,903,0.062]],["body/interfaces/Player.html",[3,0.06,4,0.06,9,0.06,20,0.358,21,0.911,32,0.005,33,0.8,34,0.603,35,1.506,40,0.813,41,0.093,46,0.06,93,2.742,95,2.369,100,3.141,110,2.193,126,0.004,127,0.004,256,2.204,666,1.247,704,3.596,806,2.006,903,0.076,905,0.867,971,4.663,972,4.663,973,3.716,974,3.964,975,4.663,976,4.663,1019,2.237,1104,3.242,1116,2.437,1118,2.437,1120,2.437,1122,2.437,1239,4.914,1913,4.162,3304,6.19]],["title/interfaces/PlayerAttributes.html",[903,0.062,963,2.962]],["body/interfaces/PlayerAttributes.html",[3,0.043,4,0.043,9,0.043,11,0.625,20,0.255,21,0.724,32,0.005,33,0.803,34,0.541,40,0.777,41,0.131,42,0.237,46,0.061,47,0.232,74,1.408,95,1.882,100,3.084,110,2.154,126,0.003,127,0.003,161,1.11,178,0.66,184,0.768,185,0.758,186,1.158,244,0.977,249,1.541,256,1.031,455,1.446,456,2.575,459,2.5,464,1.232,623,0.89,655,1.446,664,1.174,666,1.375,667,0.926,699,1.059,706,1.092,707,0.855,740,1.566,771,2.378,903,0.114,905,0.616,908,2.131,916,1.493,917,2.255,920,1.828,921,1.493,922,1.404,923,2.299,924,1.828,926,1.149,927,1.149,928,1.493,929,1.198,932,1.198,934,1.363,935,1.493,936,2.712,938,2.752,940,1.305,941,1.215,942,1.493,943,1.324,944,1.324,945,1.324,946,1.762,947,1.324,948,1.198,951,1.493,952,1.493,953,1.493,954,1.363,955,1.493,956,1.493,957,1.198,959,2.469,960,1.198,961,1.198,962,2.431,963,4.899,964,2.199,965,3.291,966,1.935,967,2.75,968,1.794,969,4.264,970,2.575,971,4.579,972,4.579,973,3.649,974,3.332,975,4.579,976,4.579,977,3.776,978,1.862,979,2.575,980,2.656,981,2.575,982,2.575,983,2.575,984,2.575,985,2.656,986,2.378,987,1.493,988,2.015,989,2.656,990,2.656,991,2.656,992,2.656,993,2.656,994,2.656,995,2.656,996,2.656,997,1.673,998,2.656,999,3.776,1000,2.656,1001,2.656,1002,2.656,1003,2.656,1004,2.656,1005,2.656,1006,2.656,1007,2.656,1008,4.135]],["title/components/PlayerCreateModalComponent.html",[0,1.235,94,2.142]],["body/components/PlayerCreateModalComponent.html",[0,0.967,1,0.726,2,1.324,3,0.017,4,0.017,5,0.785,6,0.801,7,0.785,8,0.785,9,0.017,11,0.428,12,1.677,13,0.7,14,3.582,15,3.39,16,1.274,18,1.274,20,0.101,21,0.349,23,0.634,24,2.156,25,0.66,29,1.809,31,0.978,32,0.005,33,0.645,34,0.406,35,0.717,36,4.013,38,1.291,39,2.064,41,0.08,42,0.094,46,0.017,47,0.092,49,0.994,56,1.274,59,0.593,60,1.324,61,1.324,62,0.676,63,2.382,64,0.785,65,0.785,66,0.74,67,0.785,68,0.713,69,0.785,70,0.726,71,0.754,72,0.785,73,0.74,74,0.678,75,4.28,76,2.113,77,0.74,78,2.113,79,0.726,80,0.785,81,0.726,82,0.785,83,0.726,84,0.785,85,0.726,86,1.107,87,0.785,88,0.726,89,0.785,90,0.726,91,0.785,92,0.726,93,1.869,94,1.993,95,2.493,96,0.74,97,0.74,98,0.785,99,0.74,100,1.999,101,0.726,102,0.785,103,0.726,104,0.785,105,0.74,106,0.785,107,0.713,108,0.785,109,0.74,110,1.278,111,0.74,112,0.74,113,0.785,114,0.726,115,0.476,116,0.713,117,0.726,118,0.785,119,0.726,120,0.785,121,0.726,122,0.785,123,0.726,124,0.769,125,0.785,126,0.002,127,0.002,149,0.7,151,0.654,161,0.66,186,0.902,187,1.72,229,1.091,244,0.88,245,1.676,259,2.717,262,1.089,263,0.895,289,4.357,296,0.994,299,1.408,306,0.994,308,2.205,732,0.917,735,2.337,759,3.279,761,1.818,813,2.784,822,4.038,971,2.41,972,2.41,973,1.921,974,3.261,975,2.41,976,2.41,1136,1.762,1169,2.41,1173,0.895,1187,1.286,1195,2.474,1209,1.357,1223,2.843,1425,2.111,1440,3.688,1441,2.301,1513,4.566,1516,1.286,1528,2.843,1529,3.961,1530,3.313,1549,4.849,1555,1.879,1789,2.564,1793,1.286,1794,2.915,1795,4.779,1796,1.879,1797,2.78,1801,5.281,1802,2.665,1804,3.166,1806,1.226,1808,4.667,1809,3.877,1810,4.018,1811,1.357,1812,1.357,1821,1.226,1822,2.024,1825,1.357,1826,1.357,1827,1.947,1828,3.279,1829,5.196,1832,1.176,1833,2.915,1834,3.75,1835,3.899,1836,3.046,1837,3.433,1838,1.176,1839,3.569,1840,2.78,1844,1.286,1846,3.205,1847,3.899,1850,1.176,1852,1.947,1853,1.947,1854,3.569,1855,1.176,1856,3.463,1864,2.939,1869,1.286,1872,4.41,1874,3.752,1875,2.111,1876,2.214,1877,2.214,1916,1.357,1917,4.667,1918,3.077,1919,2.337,1920,4.41,1921,3.077,1922,2.214,1923,3.655,1924,2.337,1925,3.166,1926,2.024,1927,1.176,1928,2.665,1929,2.024,1930,2.564,1931,4.568,1933,1.176,1934,1.447,1935,1.567,1936,2.337,1941,1.567,1942,2.111,1943,1.357,1946,1.286,1948,1.176,1950,1.357,1951,1.357,1952,1.226,1956,2.337,1959,1.357,1960,1.357,1961,1.357,1962,1.357,1963,1.357,1964,1.286,1965,1.176,1966,4.176,1967,3.655,1968,1.357,1969,2.337,1970,1.357,1971,2.915,1972,1.357,1973,1.357,1974,1.357,1975,1.357,1976,1.286,1977,2.214,1978,1.357,1979,1.357,1980,1.357,1981,1.226,1982,1.357,1983,2.337,1990,5.753,1991,5.421,1992,2.939,1993,1.226,2001,3.303,2002,4.068,2003,4.068,2004,4.176,2005,2.78,2006,1.286,2007,1.286,2008,1.357,2009,2.214,2010,2.756,2011,1.357,2012,1.131,2013,1.357,2014,4.121,2015,1.226,2016,1.226,2017,2.214,2018,1.176,2019,2.337,2020,2.337,2021,1.286,2022,2.337,2023,2.214,2024,2.214,2025,1.357,2026,1.357,2027,1.357,2028,1.357,2029,1.357,2030,1.357,2031,3.077,2032,2.337,2033,2.337,2034,2.337,2035,1.447,2036,1.447,2037,1.447,2038,2.214,2039,1.357,2040,2.337,2217,2.111,2227,1.357,2228,1.357,2229,1.226,2230,3.077,2406,2.337,2431,1.447,2432,1.357,2448,2.491,2449,1.447,2451,1.447,2617,3.551,2623,2.697,2629,4.219,2641,2.697,2653,4.219,2685,2.697,2713,1.567,2714,3.551,2715,3.551,2716,3.551,2724,2.697,2725,1.567,2726,1.226,2727,3.279,2728,2.697,2729,1.567,2730,1.567,2731,3.896,2732,1.567,2733,1.567,2734,1.567,2735,1.357,2736,1.447,2737,1.567,2738,1.567,2739,1.567,2740,5.565,2741,1.567,2742,1.567,2743,1.567,2744,1.567,2745,1.567,2746,2.697,2747,1.567,2749,1.567,2750,1.567,2751,1.567,2752,1.567,2753,3.551,3025,1.131,3242,1.567,3258,1.567,3305,7.964,3306,7.356,3307,4.708,3308,1.748,3309,3.01,3310,1.748,3311,1.748,3312,1.748,3313,1.748,3314,1.748,3315,1.567,3316,1.567,3317,1.748,3318,1.748,3319,1.567,3320,1.748,3321,1.748,3322,1.748,3323,1.748,3324,1.748,3325,1.748,3326,1.748,3327,1.748,3328,1.748,3329,1.748,3330,1.748,3331,1.748,3332,1.748,3333,1.567,3334,1.748,3335,1.748,3336,1.748,3337,1.748,3338,1.567,3339,1.748,3340,1.748,3341,1.748,3342,1.748,3343,1.748,3344,1.748,3345,1.748,3346,1.748,3347,1.748,3348,1.748,3349,1.748,3350,1.748,3351,1.748,3352,1.748,3353,1.567,3354,1.748,3355,1.748,3356,1.748,3357,1.748,3358,1.748,3359,1.748,3360,1.748,3361,1.748,3362,1.748,3363,1.748,3364,1.748,3365,1.748,3366,1.748,3367,1.748,3368,1.748,3369,1.748,3370,1.748,3371,1.748,3372,1.748,3373,1.748,3374,1.748,3375,1.748,3376,1.748,3377,1.567,3378,3.01,3379,3.01,3380,3.01,3381,3.01,3382,4.708,3383,4.708,3384,3.01,3385,3.01,3386,3.01,3387,4.708,3388,3.01,3389,2.697,3390,3.01,3391,3.01,3392,3.01,3393,1.567,3394,1.567]],["title/interfaces/PlayerData.html",[903,0.062,970,2.962]],["body/interfaces/PlayerData.html",[3,0.046,4,0.046,9,0.046,11,0.672,20,0.274,21,0.762,32,0.005,33,0.755,34,0.28,40,0.732,41,0.134,42,0.255,46,0.064,47,0.249,74,1.481,95,1.98,100,2.82,110,1.97,126,0.003,127,0.003,161,1.146,178,0.694,184,0.826,185,0.815,186,1.179,244,1.05,249,1.656,256,1.108,455,1.521,456,2.768,459,2.688,464,1.325,623,0.957,655,1.521,664,1.212,666,1.316,667,0.996,699,1.139,706,1.149,707,0.919,740,1.683,771,2.15,903,0.116,905,0.663,908,2.182,916,1.605,917,2.345,920,1.924,921,1.605,922,1.51,923,2.419,924,1.924,926,1.236,927,1.236,928,1.605,929,1.288,932,1.288,934,1.466,935,1.605,936,2.762,938,2.803,940,1.403,941,1.307,942,1.605,943,1.423,944,1.423,945,1.423,946,1.895,947,1.423,948,1.288,951,1.605,952,1.605,953,1.605,954,1.466,955,1.605,956,1.605,957,1.288,959,2.568,960,1.288,961,1.288,962,2.614,963,5.21,964,2.364,965,2.733,966,2.08,967,2.894,968,1.929,969,4.402,970,3.851,971,4.187,972,4.187,973,3.336,974,2.166,975,4.187,976,4.187,977,3.973,978,2.002,979,2.768,980,2.856,981,2.768,982,2.768,983,2.768,984,2.768,985,2.856,986,2.502,987,1.605,988,2.166,989,2.856,990,2.856,991,2.856,992,2.856,993,2.856,994,2.856,995,2.856,996,2.856,997,1.798,998,2.856,999,3.973,1000,2.856,1001,2.856,1002,2.856,1003,2.856,1004,2.856,1005,2.856,1006,2.856,1007,2.856,1008,4.301]],["title/injectables/PlayerJsonServerStorageMapping.html",[178,0.534,3395,4.187]],["body/injectables/PlayerJsonServerStorageMapping.html",[3,0.046,4,0.046,9,0.046,11,0.669,20,0.273,23,1.382,29,1.87,31,1.895,32,0.005,33,0.817,34,0.54,35,1.39,38,1.895,40,0.688,41,0.123,42,0.254,46,0.046,47,0.248,95,2.844,100,1.624,110,1.134,126,0.003,127,0.003,178,0.692,184,0.823,185,0.812,186,1.087,187,2.447,244,1.046,455,2.151,487,6.018,576,1.65,623,0.953,655,1.517,664,0.698,666,1.341,667,1.59,671,1.677,699,1.134,706,1.319,707,0.916,812,2.072,870,4.292,903,0.058,908,2.012,929,1.788,932,1.788,934,1.46,936,2.76,938,2.844,939,2.604,940,1.397,941,1.301,943,1.418,944,1.418,945,1.418,947,1.418,948,1.788,957,1.788,960,1.788,961,1.788,962,5.142,964,2.355,969,4.909,971,2.411,972,2.411,973,1.921,974,2.157,975,2.411,976,3.359,1008,2.677,1609,3.442,1610,3.442,1611,3.442,1612,3.442,1613,3.442,1614,3.442,1615,3.442,1617,2.471,1618,3.005,1635,3.047,2042,3.304,2051,3.047,2052,3.304,2053,3.304,2054,3.047,2055,3.304,2058,3.304,2060,4.884,2061,4.713,3395,5.43,3396,4.71,3397,4.71,3398,4.221,3399,4.71,3400,4.71,3401,4.71,3402,4.71,3403,4.221,3404,4.221,3405,4.221,3406,4.221,3407,4.221,3408,5.879,3409,5.879,3410,4.221,3411,4.221,3412,4.221,3413,4.221,3414,5.879,3415,4.221,3416,4.221,3417,4.221,3418,4.221,3419,4.221,3420,4.221,3421,4.221,3422,4.221,3423,4.221,3424,4.221,3425,4.221,3426,4.221,3427,4.221,3428,4.221,3429,4.221,3430,4.221,3431,6.765]],["title/injectables/PlayerMappingFirebase.html",[178,0.534,478,4.187]],["body/injectables/PlayerMappingFirebase.html",[3,0.039,4,0.039,9,0.039,11,0.578,20,0.236,21,0.685,23,1.245,25,0.892,29,1.872,31,1.861,32,0.005,33,0.814,34,0.481,35,1.364,38,1.816,40,0.628,41,0.134,42,0.22,46,0.039,47,0.214,49,1.747,93,1.78,95,2.859,100,2.038,110,0.98,126,0.003,127,0.003,161,0.57,178,0.624,184,0.711,185,0.701,186,1.107,256,0.954,447,2.313,455,2.144,478,4.893,498,2.632,500,3.691,576,1.425,579,2.19,619,1.339,623,0.823,643,2.736,645,4.505,653,2.457,655,1.367,657,3.57,664,1.255,666,1.315,667,1.61,670,3.367,671,2.104,680,2.457,681,2.457,682,2.632,684,2.736,696,2.19,699,0.98,703,2.083,706,1.216,707,0.791,712,2.632,741,4.682,806,1.319,908,2.005,929,1.611,932,1.611,948,1.611,954,1.261,957,1.611,960,1.611,961,1.611,962,5.125,964,2.034,971,3.026,972,3.026,973,2.412,975,3.026,976,3.026,978,3.235,979,4.474,981,4.474,982,4.474,983,4.474,984,4.474,987,2.364,1017,4.076,1104,1.448,1116,1.602,1118,1.602,1120,1.602,1122,1.602,1368,3.361,1411,6.82,1609,3.102,1610,3.102,1611,3.102,1612,3.102,1613,3.102,1614,3.102,1615,3.102,1617,3.102,1618,1.864,2064,3.367,2068,3.367,2070,4.885,2071,2.855,2073,3.367,2074,2.855,2075,2.855,2076,2.855,2077,2.855,2078,2.855,2079,6.786,2080,2.993,2081,4.505,2083,4.59,2084,4.885,2085,2.993,2086,2.855,2087,3.159,2088,3.159,2089,3.367,2758,4.59,2761,3.159,2762,3.159,2780,3.367,3432,4.069,3433,4.069,3434,7.643,3435,4.069,3436,4.069,3437,4.069,3438,4.069,3439,6.964,3440,4.069,3441,4.069,3442,4.069,3443,4.069,3444,4.069,3445,4.069,3446,4.069]],["title/injectables/PlayerMappingStrapi.html",[178,0.534,459,2.876]],["body/injectables/PlayerMappingStrapi.html",[3,0.039,4,0.039,9,0.039,11,0.57,20,0.232,23,1.233,29,1.785,31,1.809,32,0.005,33,0.832,34,0.515,35,1.326,38,1.809,40,0.704,41,0.127,42,0.217,46,0.057,47,0.211,74,1.318,95,2.782,100,2.619,110,1.829,126,0.003,127,0.003,161,1.064,178,0.618,184,0.701,185,0.692,186,1.13,244,0.892,249,1.406,256,0.941,455,2.104,456,2.35,459,3.328,464,1.125,576,1.406,623,0.812,655,1.354,664,1.126,666,1.378,667,1.455,671,1.429,699,0.967,706,1.207,707,0.78,740,1.429,771,1.964,903,0.112,908,2.2,916,1.363,917,2.142,920,1.712,921,1.363,922,1.282,923,2.153,924,1.712,926,1.049,927,1.049,928,1.363,929,1.595,932,1.595,934,1.244,935,1.363,936,2.646,938,2.685,940,1.191,941,1.109,942,1.363,943,1.208,944,1.208,945,1.208,946,1.608,947,1.208,948,1.595,951,1.363,952,1.363,953,1.363,954,1.244,955,1.363,956,1.363,957,1.595,959,2.345,960,1.595,961,1.595,962,4.931,963,4.446,964,2.007,965,2.432,966,1.766,967,2.575,968,1.638,969,5.098,970,4.045,971,3.888,972,3.888,973,3.098,974,1.839,975,3.888,976,3.888,977,3.535,978,1.699,979,2.35,980,2.424,981,2.35,982,2.35,983,2.35,984,2.35,985,2.424,986,2.226,987,1.363,988,1.839,989,2.424,990,2.424,991,2.424,992,2.424,993,2.424,994,2.424,995,2.424,996,2.424,997,1.527,998,2.424,999,3.535,1000,2.424,1001,2.424,1002,2.424,1003,2.424,1004,2.424,1005,2.424,1006,2.424,1007,2.424,1008,3.928,1609,3.071,1610,3.071,1611,3.071,1612,3.071,1613,3.071,1614,3.071,1615,3.071,1617,2.106,1618,2.681,2093,3.597,3447,4.014,3448,4.014,3449,4.014,3450,4.014,3451,4.014,3452,4.014]],["title/components/PlayerModalComponent.html",[0,1.235,96,2.142]],["body/components/PlayerModalComponent.html",[0,1.593,1,1.512,2,2.396,3,0.063,4,0.035,5,1.633,6,1.667,7,1.633,8,1.633,9,0.035,11,0.774,12,2.762,13,1.458,14,3.931,15,3.766,16,2.305,18,2.305,20,0.211,21,0.631,23,1.147,24,3.317,25,0.798,29,1.59,31,0.756,32,0.005,33,0.636,34,0.386,35,0.555,36,4.088,38,1.132,39,1.938,40,0.282,41,0.098,42,0.196,46,0.035,47,0.192,56,1.541,59,1.235,60,2.396,61,2.396,62,1.408,63,3.25,64,1.633,65,1.633,66,1.541,67,1.633,68,1.485,69,1.633,70,1.512,71,1.57,72,1.633,73,1.541,74,1.226,75,2.815,76,3.25,77,1.541,78,3.25,79,1.512,80,1.633,81,1.512,82,1.633,83,1.512,84,1.633,85,1.512,86,2.003,87,1.633,88,1.512,89,1.633,90,1.512,91,1.633,92,1.512,93,1.095,94,1.541,95,2.915,96,3.065,97,1.541,98,1.633,99,1.541,100,1.255,101,1.512,102,1.633,103,1.512,104,1.633,105,1.541,106,1.633,107,1.485,108,1.633,109,1.541,110,1.311,111,1.541,112,1.541,113,1.633,114,1.512,115,0.992,116,1.485,117,1.512,118,1.633,119,1.512,120,1.633,121,1.512,122,1.633,123,1.512,124,1.601,125,1.633,126,0.003,127,0.003,151,1.361,244,0.809,245,1.295,256,0.853,299,2.547,300,4.286,306,2.069,308,3.207,321,2.826,327,2.355,813,3.799,822,3.34,1136,3.188,1169,2.788,1173,1.863,1175,2.553,1195,3.399,1209,2.826,1223,2.198,1224,3.261,1252,2.355,1253,3.012,1513,3.709,1520,5.399,1549,2.131,1638,2.857,1795,3.819,1796,2.272,1801,4.685,1808,2.198,1810,5.016,1834,3.94,1836,2.355,1837,2.355,1846,2.198,1864,2.272,1866,3.261,1869,5.327,1916,2.826,1917,4.373,1918,5.065,1919,4.228,1929,3.661,1930,4.685,1934,3.012,1943,2.826,1977,2.677,1990,4.073,1992,3.399,2003,2.553,2004,3.661,2010,2.131,2018,5.213,2252,4.577,2304,2.826,2414,3.012,2429,4.879,2432,2.826,2529,4.879,2530,4.879,2531,4.879,2532,4.879,2533,4.879,2727,3.012,2735,2.826,3018,4.506,3025,3.523,3093,3.012,3094,3.012,3252,3.012,3305,7.291,3306,6.734,3316,3.261,3389,4.879,3453,7.242,3454,3.64,3455,5.445,3456,5.445,3457,5.445,3458,5.445,3459,5.445,3460,5.445,3461,5.445,3462,5.445,3463,5.445,3464,5.445,3465,5.445,3466,3.64,3467,3.261,3468,5.445,3469,3.64,3470,5.445,3471,3.64,3472,3.64,3473,3.64,3474,3.261,3475,3.64,3476,3.64,3477,3.64,3478,3.64,3479,6.525,3480,5.445,3481,3.64,3482,3.64,3483,3.64,3484,3.64,3485,3.64,3486,3.64,3487,3.64,3488,5.445,3489,3.64]],["title/interfaces/PlayerRaw.html",[903,0.062,969,2.723]],["body/interfaces/PlayerRaw.html",[3,0.051,4,0.051,9,0.051,11,0.739,20,0.301,21,0.813,32,0.005,33,0.457,34,0.572,35,1.297,40,0.793,41,0.128,42,0.281,46,0.051,47,0.274,95,1.566,100,1.794,110,1.253,126,0.004,127,0.004,178,0.741,184,0.909,185,0.896,186,1.126,187,2.578,244,1.156,455,1.203,487,3.365,623,1.053,655,1.624,664,1.262,666,1.227,667,1.096,699,1.253,706,1.227,707,1.011,812,3.746,870,4.52,903,0.064,905,0.729,929,1.417,932,1.417,934,1.612,936,2.826,938,2.905,939,2.876,940,1.543,941,1.437,943,1.566,944,1.566,945,1.566,947,1.566,948,1.417,957,1.417,960,1.417,961,1.417,962,2.876,964,2.601,969,3.78,971,2.663,972,2.663,973,2.122,974,3.642,975,2.663,976,4.552,1008,2.957,1635,3.365,2042,3.65,2051,3.365,2052,3.65,2053,3.65,2054,3.365,2055,3.65,2058,3.65,2060,5.144,2061,4.964,3395,4.305,3403,7.629,3404,7.629,3405,7.629,3406,7.629,3407,4.661,3408,7.967,3409,6.293,3410,4.661,3411,4.661,3412,4.661,3413,4.661,3414,6.293,3415,4.661,3416,4.661,3417,4.661,3418,4.661,3419,4.661,3420,4.661,3421,4.661,3422,4.661,3423,4.661,3424,4.661,3425,4.661,3426,4.661,3427,4.661,3428,4.661,3429,4.661,3430,4.661,3431,7.125,3490,7.952]],["title/interfaces/PlayerRaw-1.html",[874,1.582,903,0.052,969,2.277]],["body/interfaces/PlayerRaw-1.html",[3,0.046,4,0.046,9,0.046,11,0.672,20,0.274,21,0.762,32,0.005,33,0.755,34,0.28,40,0.732,41,0.134,42,0.255,46,0.064,47,0.249,74,1.481,95,1.98,100,2.82,110,1.97,126,0.003,127,0.003,161,1.146,178,0.694,184,0.826,185,0.815,186,1.179,244,1.05,249,1.656,256,1.108,455,1.521,456,2.768,459,2.688,464,1.325,623,0.957,655,1.521,664,1.212,666,1.316,667,0.996,699,1.139,706,1.149,707,0.919,740,1.683,771,2.15,903,0.116,905,0.663,908,2.196,916,1.605,917,2.345,920,1.924,921,1.605,922,1.51,923,2.419,924,1.924,926,1.236,927,1.236,928,1.605,929,1.288,932,1.288,934,1.466,935,1.605,936,2.762,938,2.803,940,1.403,941,1.307,942,1.605,943,1.423,944,1.423,945,1.423,946,1.895,947,1.423,948,1.288,951,1.605,952,1.605,953,1.605,954,1.466,955,1.605,956,1.605,957,1.288,959,2.568,960,1.288,961,1.288,962,2.614,963,4.788,964,2.364,965,2.733,966,2.08,967,2.894,968,1.929,969,4.627,970,2.768,971,4.187,972,4.187,973,3.336,974,2.166,975,4.187,976,4.187,977,3.973,978,2.002,979,2.768,980,2.856,981,2.768,982,2.768,983,2.768,984,2.768,985,2.856,986,2.502,987,1.605,988,2.166,989,2.856,990,2.856,991,2.856,992,2.856,993,2.856,994,2.856,995,2.856,996,2.856,997,1.798,998,2.856,999,3.973,1000,2.856,1001,2.856,1002,2.856,1003,2.856,1004,2.856,1005,2.856,1006,2.856,1007,2.856,1008,4.301]],["title/injectables/PlayerService.html",[178,0.534,226,3.721]],["body/injectables/PlayerService.html",[3,0.051,4,0.051,9,0.051,11,0.753,20,0.307,23,1.498,25,1.559,29,1.93,31,1.915,32,0.005,33,0.809,34,0.546,35,1.404,38,1.915,40,0.75,41,0.145,42,0.286,46,0.051,47,0.279,95,1.596,110,1.933,126,0.004,127,0.004,161,0.997,178,0.75,180,1.445,184,0.926,185,0.914,186,0.672,226,5.233,266,2.875,274,2.203,576,1.857,619,1.745,642,3.557,646,3.642,647,3.557,648,4.321,649,3.829,652,3.829,658,2.48,659,3.632,661,3.755,662,2.534,664,1.19,666,1.328,667,1.807,668,4.296,669,2.714,671,2.858,672,2.782,677,2.48,700,3.13,706,0.926,707,1.031,732,2.782,807,1.719,876,6.189,878,3.565,891,2.931,892,4.117,894,2.48,898,4.388,964,2.651,1019,2.022,1259,5.087,1638,2.782,1668,7.101,1670,5.887,1688,3.565,1689,3.43,1690,3.31,2236,3.72,2237,3.72,2238,3.72,2239,3.72,2240,3.72,2242,3.72,2245,3.72,2246,3.565,3491,5.302,3492,7.114,3493,5.302,3494,7.114,3495,5.302,3496,4.751,3497,5.302,3498,5.302,3499,5.302,3500,7.114,3501,5.302]],["title/modules/PlayersPageModule.html",[128,1.545,3502,3.928]],["body/modules/PlayersPageModule.html",[3,0.064,4,0.064,9,0.064,32,0.005,41,0.15,42,0.358,43,2.612,44,2.659,46,0.064,47,0.349,59,2.253,97,4.141,126,0.004,127,0.004,128,2.027,130,2.482,131,3.172,132,4.574,133,3.397,134,2.978,135,2.567,140,4.21,141,3.318,142,3.397,144,3.181,145,3.237,146,4.426,147,3.397,148,4.426,149,2.659,150,4.21,151,2.482,152,3.572,154,3.482,155,3.668,395,5.561,502,4.293,2472,4.463,3502,7.895,3503,5.947,3504,5.947,3505,5.947,3506,7.196,3507,6.637,3508,5.947]],["title/modules/PlayersPageRoutingModule.html",[128,1.545,3506,3.721]],["body/modules/PlayersPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,97,3.729,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,3506,6.48,3508,6.662,3509,7.435]],["title/components/PositionSelectableComponent.html",[0,1.235,99,2.142]],["body/components/PositionSelectableComponent.html",[0,1.626,1,1.566,2,2.459,3,0.037,4,0.037,5,2.508,7,1.692,8,1.692,9,0.037,11,0.794,12,2.82,13,1.51,14,3.943,15,3.78,20,0.218,21,0.647,23,1.177,24,3.375,25,1.46,29,1.867,31,1.531,32,0.005,33,0.749,34,0.519,35,1.123,36,4.035,38,1.635,39,3.421,40,0.66,41,0.084,42,0.203,46,0.037,47,0.199,49,2.067,59,1.28,60,2.459,61,2.459,62,1.458,63,3.307,64,1.692,65,1.692,66,1.596,67,1.692,68,1.538,69,1.692,70,1.566,71,1.626,72,1.692,73,1.596,74,1.258,75,2.874,76,3.307,77,1.596,78,3.307,79,1.566,80,1.692,81,1.566,82,1.692,83,1.566,84,1.692,85,1.566,86,2.056,87,1.692,88,1.566,89,1.692,90,1.566,91,1.692,92,1.566,93,1.135,94,1.596,95,1.682,96,1.596,97,1.596,98,1.692,99,3.489,100,2.297,101,1.566,102,1.692,103,1.566,104,1.692,105,1.596,106,1.692,107,1.538,108,1.692,109,1.596,110,1.346,111,1.596,112,1.596,113,1.692,114,1.566,115,1.027,116,1.538,117,1.566,118,1.692,119,1.566,120,1.692,121,1.566,122,1.692,123,1.566,124,1.658,125,1.692,126,0.003,127,0.003,134,2.508,149,1.51,229,2.353,244,1.637,245,3.037,256,0.884,263,2.861,483,6.602,490,3.616,771,2.094,1136,3.272,1169,2.861,1717,4.479,1718,5.172,1719,4.479,1722,3.758,1723,3.758,1746,4.626,1759,4.626,1760,3.921,1762,5.169,1763,3.921,1766,4.111,1767,4.111,1770,4.111,2098,2.773,2099,4.34,2127,3.12,2132,2.927,2160,3.12,2161,4.34,2164,3.12,3256,3.378,3263,3.378,3510,9.24,3511,8.279,3512,6.662,3513,6.662,3514,6.662,3515,6.662,3516,6.662,3517,6.662,3518,6.662,3519,6.662,3520,3.77,3521,5.59,3522,6.662,3523,3.77,3524,3.77,3525,3.77,3526,3.77,3527,3.77]],["title/components/ProfilePage.html",[0,1.235,101,2.102]],["body/components/ProfilePage.html",[0,1.51,1,1.386,2,2.242,3,0.032,4,0.032,5,1.497,6,1.527,7,1.497,8,1.497,9,0.032,11,0.724,12,2.619,13,1.336,14,3.899,15,3.731,16,2.158,18,2.158,20,0.193,21,0.59,23,1.073,24,3.173,25,1.117,27,3.829,29,1.774,31,0.693,32,0.005,33,0.742,34,0.366,35,0.943,36,3.643,38,1.286,39,1.187,41,0.133,42,0.18,43,1.313,44,1.336,46,0.032,47,0.176,49,2.118,59,1.132,60,2.242,61,2.242,62,1.29,63,3.109,64,1.497,65,1.497,66,1.412,67,1.497,68,1.36,69,1.497,70,1.386,71,1.439,72,1.497,73,1.412,74,1.148,75,2.669,76,3.109,77,1.412,78,3.109,79,1.386,80,1.497,81,1.386,82,1.497,83,1.386,84,1.497,85,1.386,86,1.874,87,1.497,88,1.386,89,1.497,90,1.386,91,1.497,92,1.386,93,1.862,94,1.412,95,1.534,96,1.412,97,1.412,98,1.497,99,1.412,100,2.388,101,2.878,102,1.497,103,1.386,104,1.497,105,1.412,106,1.497,107,1.36,108,1.497,109,1.412,110,1.227,111,1.412,112,1.412,113,1.497,114,1.386,115,2.033,116,1.36,117,1.386,118,1.497,119,1.386,120,1.497,121,1.386,122,1.497,123,1.386,124,1.467,125,1.497,126,0.003,127,0.003,149,1.336,151,1.247,160,1.36,161,1.258,172,4.183,173,5.111,179,2.34,180,0.909,182,1.63,186,0.784,191,5.256,205,3.576,212,2.826,213,4.551,218,6.207,222,2.894,249,1.168,256,0.782,304,2.34,312,3.182,313,2.988,317,3.182,318,2.609,319,4.567,332,6.207,376,2.988,377,2.76,388,4.567,463,3.167,464,0.934,561,4.218,577,3.297,637,1.843,650,4.35,740,1.187,771,1.449,806,1.081,1086,2.68,1092,3.546,1116,1.313,1118,1.313,1120,1.313,1122,1.313,1920,5.291,1925,4.658,1926,3.427,1927,2.242,1928,4.658,1933,3.427,1946,2.453,1948,2.242,1964,2.453,1965,2.242,1966,4.16,1968,2.589,1976,2.453,1992,3.862,2267,4.567,2299,2.76,2302,2.453,2360,2.988,2362,2.988,2363,2.988,2364,2.988,2510,3.957,2562,2.76,2567,2.589,2569,2.76,3034,4.803,3528,3.335,3529,6.187,3530,5.097,3531,6.187,3532,6.927,3533,6.187,3534,6.207,3535,6.187,3536,5.097,3537,3.335,3538,3.335,3539,3.335,3540,3.335,3541,3.335,3542,2.988,3543,3.335,3544,3.335,3545,3.335,3546,5.097,3547,5.097,3548,3.335,3549,3.335,3550,3.335,3551,3.335,3552,3.335,3553,3.335,3554,3.335,3555,3.335,3556,3.335,3557,3.335,3558,5.544,3559,6.187,3560,3.335,3561,5.544,3562,5.544,3563,5.544,3564,5.097,3565,5.097,3566,5.097,3567,3.335,3568,3.335,3569,3.335,3570,3.335,3571,3.335,3572,3.335,3573,5.097,3574,3.335,3575,7.463,3576,3.335,3577,3.335,3578,3.335,3579,3.335,3580,3.335,3581,5.097,3582,5.097,3583,5.097]],["title/modules/ProfilePageModule.html",[128,1.545,3584,3.928]],["body/modules/ProfilePageModule.html",[3,0.064,4,0.064,9,0.064,32,0.005,41,0.15,42,0.356,43,2.598,44,2.644,46,0.064,47,0.348,59,2.24,101,4.059,126,0.004,127,0.004,128,2.016,130,2.468,131,3.154,132,4.563,133,3.379,134,2.962,135,2.553,140,4.195,141,3.3,142,3.379,144,3.17,145,3.226,146,4.411,147,3.379,148,4.411,149,2.644,150,4.195,151,2.468,152,3.552,154,3.463,155,3.648,395,5.553,561,5.462,2472,4.438,2606,6.363,3584,7.888,3585,5.914,3586,5.914,3587,5.914,3588,7.186,3589,6.6,3590,5.914]],["title/modules/ProfilePageRoutingModule.html",[128,1.545,3588,3.721]],["body/modules/ProfilePageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,101,3.66,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,3588,6.48,3590,6.662,3591,7.435]],["title/interfaces/ProviderMetadata.html",[903,0.062,1447,3.055]],["body/interfaces/ProviderMetadata.html",[3,0.048,4,0.048,9,0.048,20,0.288,21,0.789,25,1.09,32,0.005,33,0.769,34,0.46,40,0.809,41,0.136,42,0.268,46,0.094,47,0.262,49,2.096,126,0.003,127,0.003,161,0.954,162,3.605,180,1.354,186,0.984,187,1.612,204,2.429,256,1.165,266,1.475,274,2.065,403,2.231,405,2.325,463,3.486,464,1.393,509,2.91,619,1.636,634,2.826,637,2.748,639,3.002,664,0.737,666,1.451,759,4.376,786,1.923,800,3.255,802,2.485,806,2.837,807,1.612,894,2.325,903,0.116,905,0.697,920,1.454,926,1.299,927,1.299,1012,2.608,1019,1.413,1020,2.676,1023,2.676,1024,3.976,1025,2.676,1026,2.676,1027,2.676,1028,2.608,1087,2.028,1116,3.058,1118,3.058,1120,3.058,1122,3.058,1389,3.002,1431,4.691,1432,2.376,1433,3.002,1434,3.002,1435,3.987,1436,3.104,1437,3.104,1438,3.104,1439,3.104,1440,4.277,1441,4.277,1442,5.464,1443,5.464,1444,5.464,1445,3.104,1446,5.464,1447,5.589,1448,5.216,1449,5.216,1450,3.002,1451,3.104,1452,3.104,1453,3.002,1454,4.849,1455,3.104,1456,3.002,1457,3.104,1458,3.104,1459,3.104,1460,3.104]],["title/components/RegisterPage.html",[0,1.235,103,2.102]],["body/components/RegisterPage.html",[0,1.411,1,1.244,2,2.063,3,0.029,4,0.029,5,1.344,6,1.372,7,1.344,8,1.344,9,0.029,12,1.268,13,1.2,14,3.856,15,3.685,16,1.985,18,1.985,20,0.173,21,0.543,22,3.951,23,0.988,25,1.028,28,4.131,29,1.905,31,0.975,32,0.005,33,0.736,34,0.466,35,0.715,36,4.331,38,1.476,39,2.528,40,0.549,41,0.126,42,0.162,45,1.703,46,0.029,47,0.158,48,2.014,49,1.889,50,2.746,51,1.753,59,1.017,60,2.063,61,2.063,62,1.159,63,2.936,64,1.344,65,1.344,66,1.268,67,1.344,68,1.222,69,1.344,70,1.244,71,1.292,72,1.344,73,1.268,74,1.056,75,2.494,76,2.936,77,1.268,78,2.936,79,1.244,80,1.344,81,1.244,82,1.344,83,1.244,84,1.344,85,1.244,86,1.725,87,1.344,88,1.244,89,1.344,90,1.244,91,1.344,92,1.244,93,0.902,94,1.268,95,1.412,96,1.268,97,1.268,98,1.344,99,1.268,100,1.033,101,1.244,102,1.344,103,2.718,104,1.344,105,1.268,106,1.344,107,1.222,108,1.344,109,1.268,110,1.129,111,1.268,112,1.268,113,1.344,114,1.244,115,0.816,116,1.222,117,1.244,118,1.344,119,1.244,120,1.344,121,1.244,122,1.344,123,1.244,124,1.318,125,1.344,126,0.002,127,0.002,149,1.2,160,1.222,161,0.81,172,3.491,173,4.915,182,1.463,186,0.9,205,3.291,212,1.913,213,3.45,215,3.642,222,2.704,223,4.056,233,3.642,235,3.642,244,1.284,245,2.058,256,0.702,259,3.349,262,2.367,318,2.401,374,2.479,375,2.479,377,2.479,535,3.45,554,3.882,577,1.938,733,2.746,1083,1.703,1086,2.531,1092,3.349,1104,1.066,1124,1.463,1246,4.084,1703,2.833,1726,3.642,1920,3.887,1925,4.399,1926,3.154,1927,2.014,1928,4.399,1933,3.154,1946,2.203,1948,3.154,1965,2.014,1966,4.776,1967,3.642,1981,2.101,2252,4.056,2302,2.203,2304,2.325,2340,2.928,2488,3.291,2546,4.784,2550,5.862,2558,4.203,2559,4.203,2562,2.479,2564,2.684,2566,2.684,2567,2.325,2569,2.479,2570,4.203,2573,2.684,2574,3.882,2575,4.203,2576,2.684,2577,2.684,2581,2.684,2582,2.684,2585,2.479,2586,2.684,2587,2.684,2599,4.203,3208,2.101,3210,2.479,3211,2.325,3542,2.684,3592,2.995,3593,5.781,3594,4.691,3595,5.781,3596,5.781,3597,6.542,3598,6.542,3599,6.542,3600,4.691,3601,2.995,3602,2.995,3603,2.995,3604,2.995,3605,2.995,3606,2.995,3607,2.995,3608,2.995,3609,2.995,3610,2.995,3611,2.995,3612,2.995,3613,2.995,3614,2.995,3615,2.995,3616,2.995,3617,4.203,3618,4.203,3619,2.995,3620,2.479,3621,2.995,3622,2.995,3623,4.691,3624,2.995,3625,2.995,3626,2.995,3627,2.995,3628,2.995,3629,2.995,3630,2.995,3631,2.995,3632,2.995,3633,2.995,3634,2.995,3635,2.995,3636,4.691,3637,4.691,3638,4.691,3639,4.691,3640,4.691,3641,4.691,3642,4.691,3643,4.691,3644,4.691,3645,4.691,3646,6.542,3647,4.691,3648,4.691,3649,4.691,3650,4.691,3651,4.691]],["title/modules/RegisterPageModule.html",[128,1.545,3652,3.928]],["body/modules/RegisterPageModule.html",[3,0.063,4,0.063,9,0.063,32,0.005,41,0.152,42,0.348,43,2.542,44,2.587,46,0.063,47,0.34,59,2.192,103,4.037,126,0.004,127,0.004,128,1.972,130,2.415,131,3.086,132,4.518,133,3.306,134,2.898,135,2.498,140,4.138,141,3.228,142,3.306,144,3.127,145,3.182,146,4.351,147,3.306,148,4.351,149,2.587,150,4.138,151,2.415,152,3.475,154,3.388,155,3.569,180,1.759,395,5.523,554,5.344,2472,4.342,2606,6.277,2808,5.013,3208,4.53,3210,5.344,3211,5.013,3620,5.344,3652,7.861,3653,5.786,3654,5.786,3655,5.786,3656,7.147,3657,6.458,3658,5.786]],["title/modules/RegisterPageRoutingModule.html",[128,1.545,3656,3.721]],["body/modules/RegisterPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,103,3.66,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,3656,6.48,3658,6.662,3659,7.435]],["title/interfaces/SearchParams.html",[669,2.59,903,0.062]],["body/interfaces/SearchParams.html",[3,0.068,4,0.068,9,0.068,29,1.438,32,0.005,40,0.776,41,0.137,46,0.083,126,0.004,127,0.004,180,1.911,266,2.941,299,3.28,300,3.876,308,3.235,349,5.445,658,3.28,659,3.601,661,3.28,662,3.352,664,1.039,669,4.354,672,3.679,677,3.28,698,3.28,704,2.914,705,3.506,706,1.225,707,1.363,818,3.986,819,3.427,820,3.986,903,0.104,905,0.983,1608,7.039,1629,4.537,1635,5.503,1636,6.284,1637,6.284,1638,3.679,1639,5.445,1640,6.284,1641,6.284,3660,7.013,3661,7.013]],["title/modules/SharedModule.html",[128,1.545,395,2.876]],["body/modules/SharedModule.html",[3,0.04,4,0.04,9,0.04,32,0.005,41,0.15,42,0.22,43,1.604,44,1.632,46,0.04,47,0.215,59,1.383,70,3.946,73,4.021,75,3.656,77,4.021,85,3.946,90,3.946,92,3.946,94,4.021,96,3.977,99,4.021,109,4.021,111,4.021,117,3.946,119,3.946,121,3.946,123,3.946,126,0.003,127,0.003,128,1.244,130,1.523,131,1.947,132,3.567,133,2.085,134,1.828,135,2.289,140,3.029,141,2.037,142,2.085,144,1.576,145,2.329,146,3.185,147,2.085,148,3.185,149,1.632,150,3.029,151,1.523,154,2.137,155,2.252,395,5.954,1128,3.65,1488,3.65,1489,3.65,1714,3.371,1915,3.371,2097,3.65,2303,6.852,2606,4.594,2611,3.371,2789,3.371,2909,3.65,3208,6.664,3211,3.163,3218,3.371,3306,4.897,3511,3.65,3620,3.371,3662,3.65,3663,3.65,3664,3.65,3665,4.074,3666,5.917,3667,5.917,3668,3.65,3669,3.65,3670,7.647,3671,5.917,3672,4.074,3673,4.074,3674,4.074,3675,5.917,3676,4.074,3677,4.074,3678,4.074,3679,3.65,3680,4.074,3681,4.074,3682,4.074,3683,4.074,3684,4.074,3685,4.074,3686,4.074,3687,4.074,3688,4.074]],["title/interfaces/SignInPayload.html",[903,0.062,1228,2.723]],["body/interfaces/SignInPayload.html",[3,0.072,4,0.072,9,0.072,20,0.428,21,1.016,32,0.005,34,0.52,40,0.749,46,0.091,126,0.004,127,0.004,212,3.014,903,0.115,905,1.035,1086,3.622,1228,4.724,1229,3.782,1246,5.845,1419,5.435,1420,5.435,1469,5.138,1471,5.481,1472,4.325,3203,5.183,3689,6.114,3690,6.114,3691,6.114,3692,6.114,3693,6.114]],["title/interfaces/SignUpPayload.html",[903,0.062,1229,2.59]],["body/interfaces/SignUpPayload.html",[3,0.066,4,0.066,9,0.066,20,0.394,21,0.967,32,0.005,33,0.794,34,0.596,40,0.806,46,0.088,126,0.004,127,0.004,212,3.843,903,0.111,905,0.953,973,3.685,1086,3.494,1092,4.624,1228,3.66,1229,4.273,1246,5.639,1419,5.002,1420,5.002,1469,4.887,1471,5.288,1472,3.981,2138,7.013,3203,4.771,3689,5.628,3690,5.628,3691,5.628,3692,5.628,3693,5.628,3694,9.033]],["title/interfaces/Small.html",[903,0.062,1120,1.992]],["body/interfaces/Small.html",[3,0.045,4,0.045,9,0.045,20,0.268,21,0.75,25,1.014,32,0.005,33,0.813,34,0.571,40,0.81,41,0.133,42,0.25,46,0.093,47,0.244,49,2.032,126,0.003,127,0.003,161,0.908,162,3.915,180,1.26,186,0.947,187,1.499,204,2.26,256,1.084,266,1.372,274,1.922,403,2.076,405,2.163,463,3.316,464,1.296,509,2.708,619,1.522,634,2.629,637,2.557,639,2.793,664,0.685,666,1.468,759,4.63,786,1.789,800,3.096,802,2.312,806,3.002,807,1.499,894,2.163,903,0.114,905,0.648,920,1.353,926,1.209,927,1.209,1012,2.427,1019,1.315,1020,2.489,1023,2.489,1024,3.827,1025,2.489,1026,2.489,1027,2.489,1028,2.427,1087,1.887,1116,2.943,1118,2.943,1120,3.189,1122,2.943,1389,2.793,1431,4.515,1432,2.21,1433,2.793,1434,2.793,1435,3.792,1436,2.887,1437,2.887,1438,2.887,1439,2.887,1440,4.525,1441,4.525,1442,5.781,1443,5.781,1444,5.781,1445,2.887,1446,5.781,1447,5.592,1448,2.887,1449,2.887,1450,2.793,1451,2.887,1452,2.887,1453,2.793,1454,4.667,1455,2.887,1456,2.793,1457,2.887,1458,2.887,1459,2.887,1460,2.887]],["title/components/SplashPage.html",[0,1.235,105,2.142]],["body/components/SplashPage.html",[0,1.843,1,1.957,2,2.886,3,0.046,4,0.046,5,2.114,6,2.157,7,2.114,8,2.114,9,0.046,11,0.932,12,3.196,13,1.887,14,4.013,15,3.856,16,2.777,18,2.777,20,0.273,21,0.76,23,1.382,24,3.74,25,1.438,29,1.674,31,1.363,32,0.005,33,0.754,34,0.447,35,1,38,1.363,39,2.687,41,0.137,42,0.254,43,1.854,46,0.046,47,0.248,49,1.646,59,1.599,60,2.886,61,2.886,62,1.822,63,3.664,64,2.114,65,2.114,66,1.994,67,2.114,68,1.921,69,2.114,70,1.957,71,2.032,72,2.114,73,1.994,74,1.477,75,3.257,76,3.664,77,1.994,78,3.664,79,1.957,80,2.114,81,1.957,82,2.114,83,1.957,84,2.114,85,1.957,86,2.413,87,2.114,88,1.957,89,2.114,90,1.957,91,2.114,92,1.957,93,1.418,94,1.994,95,1.975,96,1.994,97,1.994,98,2.114,99,1.994,100,1.624,101,1.957,102,2.114,103,1.957,104,2.114,105,3.456,106,2.114,107,1.921,108,2.114,109,1.994,110,1.58,111,1.994,112,1.994,113,2.114,114,1.957,115,1.283,116,1.921,117,1.957,118,2.114,119,1.957,120,2.114,121,1.957,122,2.114,123,1.957,124,2.072,125,2.114,126,0.003,127,0.003,144,1.822,150,3.359,151,1.761,160,1.921,162,2.831,173,5.097,180,1.283,182,2.302,198,4.221,205,4.603,222,3.531,244,1.046,245,1.677,263,2.411,294,5.094,470,5.094,471,3.304,577,3.047,2567,3.657,3695,4.71,3696,4.71,3697,7.55,3698,7.55,3699,6.561,3700,7.55,3701,6.561,3702,4.71,3703,4.71,3704,4.71,3705,6.561,3706,8.89,3707,4.71,3708,7.55,3709,6.561,3710,4.71,3711,4.71,3712,4.71,3713,4.71,3714,4.71,3715,4.71,3716,4.71,3717,4.71]],["title/modules/SplashPageModule.html",[128,1.545,3718,3.928]],["body/modules/SplashPageModule.html",[3,0.068,4,0.068,9,0.068,32,0.005,41,0.15,42,0.376,46,0.068,47,0.367,59,2.367,95,2.099,105,2.951,126,0.004,127,0.004,128,2.129,130,2.607,131,3.332,132,3.569,133,3.569,134,3.129,135,2.697,140,4.339,141,3.486,142,3.569,144,3.279,145,3.336,146,4.562,147,3.569,148,4.562,149,2.793,150,4.339,151,2.607,152,3.752,294,5.413,470,5.413,471,4.891,3718,7.686,3719,6.247,3720,6.247,3721,7.282,3722,6.972,3723,6.247]],["title/modules/SplashPageRoutingModule.html",[128,1.545,3721,3.721]],["body/modules/SplashPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,105,3.729,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,3721,6.48,3723,6.662,3724,7.435]],["title/components/StatisticsPage.html",[0,1.235,107,2.064]],["body/components/StatisticsPage.html",[0,0.893,1,0.654,2,1.209,3,0.015,4,0.015,5,1.641,6,1.259,7,0.706,8,0.706,9,0.015,11,0.39,12,1.548,13,0.631,14,3.516,15,3.32,16,1.163,18,1.163,20,0.091,21,0.318,22,2.209,23,0.579,24,2.007,25,0.602,27,2.422,28,3.085,29,1.714,31,1.033,32,0.005,33,0.806,34,0.46,35,0.758,36,2.146,38,1.296,39,1.77,40,0.639,41,0.109,42,0.085,43,0.62,44,0.631,45,0.895,46,0.015,47,0.083,49,1.371,50,0.921,51,0.921,56,3.073,59,0.534,60,1.209,61,1.209,62,0.609,63,2.232,64,0.706,65,0.706,66,0.666,67,0.706,68,0.642,69,0.706,70,0.654,71,0.679,72,0.706,73,0.666,74,0.619,75,1.578,76,1.966,77,0.666,78,1.966,79,0.654,80,0.706,81,0.654,82,0.706,83,0.654,84,0.706,85,0.654,86,2.67,87,0.706,88,0.654,89,0.706,90,0.654,91,0.706,92,0.654,93,0.474,94,0.666,95,0.827,96,0.666,97,0.666,98,0.706,99,0.666,100,0.543,101,0.654,102,0.706,103,0.654,104,0.706,105,0.666,106,0.706,107,1.787,108,0.706,109,0.666,110,1.989,111,0.666,112,0.666,113,0.706,114,0.654,115,0.429,116,0.642,117,0.654,118,0.706,119,0.654,120,0.706,121,0.654,122,0.706,123,0.654,124,0.692,125,0.706,126,0.001,127,0.001,160,0.642,161,1.043,180,0.429,186,0.745,191,0.847,211,2.366,223,3.074,225,2.565,229,0.983,244,0.812,245,2.219,256,1.281,259,3.01,262,0.994,263,1.872,275,1.104,296,2.827,299,3.297,300,2.422,301,0.721,308,1.666,312,0.983,317,0.983,318,3.812,325,2.462,326,1.222,327,1.018,338,2.839,339,1.41,349,1.222,479,2.735,481,3.223,497,3.344,504,0.983,647,1.374,650,0.87,664,0.407,666,0.899,706,0.48,732,2.299,733,2.565,740,1.77,759,3.117,761,2.646,771,1.936,807,1.185,813,0.826,822,4.048,831,5.245,874,1.028,903,0.019,908,0.34,1009,2.021,1019,0.447,1056,1.928,1078,3.074,1104,1.56,1169,1.407,1173,1.407,1223,3.003,1252,2.366,1277,1.104,1351,2.133,1368,0.895,1374,4.02,1375,4.74,1376,2.839,1377,2.839,1425,3.834,1440,1.787,1441,1.787,1504,1.158,1513,5.139,1520,1.303,1522,2.462,1528,2.646,1529,3.766,1549,3.199,1555,1.716,1638,2.609,1639,1.222,1689,1.018,1703,3.003,1788,1.303,1789,1.018,1790,2.274,1795,4.249,1796,2.283,1801,3.217,1802,1.058,1803,1.41,1804,1.058,1805,5.587,1808,2.209,1809,0.983,1810,4.034,1819,3.026,1821,1.104,1822,1.058,1829,5.403,1834,1.66,1835,2.946,1836,3.217,1837,4.034,1838,1.058,1839,4.4,1840,2.566,1846,0.951,1854,1.058,1864,0.983,1870,3.926,1874,1.778,1875,1.104,1990,3.105,1991,3.074,1992,2.283,1993,1.928,2001,1.928,2004,2.459,2005,3.489,2009,3.658,2010,2.911,2015,1.104,2016,1.104,2018,3.344,2021,2.021,2166,1.104,2229,1.104,2252,1.104,2340,4.253,2341,3.412,2375,1.058,2382,2.021,2406,2.133,2407,1.41,2408,1.41,2409,1.41,2410,1.41,2411,1.41,2412,1.41,2413,1.41,2414,2.274,2415,2.462,2416,1.41,2417,1.41,2418,1.41,2419,3.926,2421,1.41,2423,1.41,2424,1.41,2426,1.41,2442,1.41,2479,3.834,2482,3.834,2485,1.41,2486,2.566,2488,1.928,2498,1.058,2499,1.018,2500,1.104,2502,1.058,2508,3.223,2510,3.402,2513,1.303,2519,1.303,2520,7.061,2524,2.021,2801,2.366,2820,3.402,2824,2.021,2834,1.222,2845,2.133,2861,1.222,2862,1.222,2922,1.303,2929,1.303,2939,1.303,2947,2.274,2962,3.026,2981,2.462,3000,4.116,3006,2.274,3012,1.41,3025,1.778,3034,1.222,3037,1.41,3043,1.41,3044,1.41,3045,1.41,3046,2.274,3047,2.462,3048,3.926,3049,4.456,3050,4.456,3051,3.277,3052,3.277,3053,3.277,3054,3.926,3055,2.462,3056,2.462,3057,2.462,3058,2.462,3059,2.462,3060,2.462,3061,2.462,3062,3.926,3063,2.462,3064,2.462,3065,2.462,3066,2.462,3067,2.462,3068,2.462,3069,2.462,3070,3.926,3071,2.462,3072,2.462,3073,2.462,3074,2.462,3075,2.462,3076,2.462,3077,2.462,3078,3.277,3079,1.41,3080,1.41,3081,2.462,3082,3.926,3083,5.587,3084,4.456,3085,1.41,3086,2.462,3087,2.462,3088,1.41,3089,1.41,3090,2.462,3091,1.41,3092,1.41,3093,1.303,3094,1.303,3095,1.41,3096,1.41,3097,1.41,3098,1.41,3099,2.462,3100,1.41,3101,2.462,3102,1.41,3103,1.303,3104,1.41,3105,2.274,3106,1.303,3107,3.926,3108,1.41,3109,2.462,3110,3.277,3111,4.456,3112,3.277,3113,1.41,3114,4.456,3115,1.41,3116,2.462,3117,1.41,3118,1.41,3119,1.41,3120,2.462,3121,1.41,3122,1.41,3123,1.41,3124,3.277,3125,1.41,3126,1.41,3127,3.926,3128,2.462,3129,2.462,3130,1.41,3131,1.41,3132,2.462,3133,2.462,3134,1.41,3135,1.41,3136,1.41,3137,2.462,3138,1.41,3139,1.41,3140,2.462,3141,1.41,3142,2.462,3143,1.41,3144,1.41,3145,1.41,3146,1.303,3147,1.41,3148,1.41,3149,2.462,3150,1.41,3151,1.41,3152,1.41,3153,2.462,3154,3.277,3155,2.462,3156,1.41,3157,1.41,3158,1.41,3159,3.277,3160,1.41,3161,1.41,3162,1.41,3163,1.41,3164,1.41,3165,2.462,3166,1.41,3167,1.41,3168,1.41,3169,3.626,3170,1.41,3171,1.41,3172,1.41,3173,1.41,3174,1.41,3175,1.41,3176,1.41,3177,1.41,3178,1.41,3179,2.462,3180,3.277,3181,2.462,3182,1.41,3183,2.462,3184,1.41,3185,2.462,3186,1.41,3187,1.41,3188,1.41,3189,1.41,3190,1.41,3191,2.462,3192,1.41,3193,1.303,3725,2.748,3726,2.748,3727,2.748,3728,2.748,3729,1.574,3730,1.574,3731,1.574,3732,1.574,3733,1.574,3734,1.574,3735,1.574,3736,1.574,3737,1.574,3738,1.574,3739,1.574,3740,1.574,3741,1.574,3742,1.574,3743,1.574,3744,1.574,3745,1.574,3746,1.574,3747,1.574,3748,1.574,3749,2.748,3750,2.748,3751,2.748,3752,2.748,3753,2.748,3754,2.748,3755,1.574,3756,1.574,3757,1.574,3758,2.748,3759,1.574,3760,2.748,3761,1.574,3762,1.574,3763,2.748,3764,1.574,3765,4.973,3766,1.574,3767,1.574,3768,1.574,3769,1.574,3770,1.574,3771,1.574,3772,2.748,3773,1.574,3774,2.748,3775,1.574,3776,2.748,3777,1.574,3778,2.748,3779,2.748,3780,4.382,3781,1.574,3782,2.748,3783,1.574,3784,1.574,3785,2.748,3786,1.574,3787,1.574,3788,1.574,3789,2.748,3790,4.382,3791,2.748,3792,2.748,3793,1.574,3794,1.574,3795,2.748,3796,1.574,3797,1.574,3798,1.574,3799,1.574,3800,1.41,3801,1.574,3802,1.574,3803,1.574,3804,1.574]],["title/modules/StatisticsPageModule.html",[128,1.545,3805,3.928]],["body/modules/StatisticsPageModule.html",[3,0.066,4,0.066,9,0.066,32,0.005,41,0.15,42,0.366,43,2.672,44,2.719,46,0.066,47,0.357,59,2.304,107,4.013,126,0.004,127,0.004,128,2.073,130,2.538,131,3.244,132,4.62,133,3.474,134,3.046,135,2.626,140,4.268,141,3.393,142,3.474,144,3.226,145,3.282,146,4.488,147,3.474,148,4.488,149,2.719,150,4.268,151,2.538,152,3.653,154,3.561,155,3.752,3046,5.617,3805,7.812,3806,6.082,3807,6.082,3808,6.082,3809,7.235,3810,6.788,3811,6.082]],["title/modules/StatisticsPageRoutingModule.html",[128,1.545,3809,3.721]],["body/modules/StatisticsPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,107,3.593,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,3809,6.48,3811,6.662,3812,7.435]],["title/injectables/StrapiAuthMappingService.html",[178,0.534,1473,3.158]],["body/injectables/StrapiAuthMappingService.html",[3,0.049,4,0.049,9,0.049,11,0.717,20,0.292,23,1.449,29,1.804,31,1.829,32,0.005,33,0.773,34,0.521,35,1.341,38,1.829,40,0.773,41,0.132,42,0.272,46,0.088,47,0.266,115,1.375,126,0.003,127,0.003,178,0.726,184,0.882,185,0.87,186,1.115,212,3.913,262,3.042,576,1.768,589,4.628,591,4.452,593,3.704,622,2.87,623,1.021,624,2.791,664,1.16,666,0.992,706,0.882,707,0.981,786,3.513,812,2.221,903,0.114,926,1.799,927,1.799,1081,2.137,1085,3.219,1086,2.662,1087,2.807,1088,3.363,1089,3.363,1227,3.152,1228,4.736,1229,4.505,1230,4.156,1233,5.759,1234,4.156,1236,4.156,1238,5.695,1240,4.156,1242,4.156,1432,4.34,1461,3.152,1462,5.078,1463,5.078,1464,4.296,1465,4.888,1466,5.078,1467,4.296,1468,3.266,1469,4.029,1470,4.296,1471,2.955,1472,2.955,1473,4.296,1474,3.266,1475,3.266,1476,4.452,1477,3.266,1478,3.266,1479,3.266,1480,3.266,1481,4.452,1482,4.452,1483,4.452,1484,3.266,1485,3.266,1486,3.266,3813,5.049,3814,5.049,3815,5.049,3816,5.049,3817,5.049]],["title/injectables/StrapiAuthenticationService.html",[178,0.534,3818,4.533]],["body/injectables/StrapiAuthenticationService.html",[3,0.038,4,0.038,9,0.038,11,0.56,20,0.228,21,0.669,23,1.217,25,1.267,29,2.01,31,1.421,32,0.005,33,0.601,34,0.545,35,1.042,38,1.799,39,1.404,40,0.73,41,0.136,42,0.213,46,0.038,47,0.208,49,2.101,126,0.003,127,0.003,177,4.054,178,0.61,180,1.074,182,1.927,184,0.689,185,0.68,186,1.124,187,2.441,191,2.123,203,4.487,204,4.093,212,2.79,222,4.585,243,4.131,244,2.012,245,3.224,263,2.019,266,2.768,267,3.062,274,1.638,275,2.767,318,2.019,403,3.598,405,1.845,439,3.264,440,3.264,441,3.264,576,1.381,578,3.264,579,4.874,580,4.782,581,4.782,582,4.782,583,4.782,584,4.782,585,5.31,586,5.66,588,5.539,589,3.886,590,5.847,591,3.738,593,4.053,595,5.66,599,4.487,601,3.062,606,5.66,609,3.264,611,3.264,614,3.264,616,3.264,618,5.178,619,1.298,622,2.242,623,0.798,624,2.18,633,3.264,650,3.781,771,2.278,786,1.526,800,2.762,802,1.972,807,1.278,894,1.845,1019,1.642,1024,2.958,1028,2.069,1229,2.019,1258,6.232,1259,5.464,1265,5.178,1267,3.534,1268,3.534,1269,3.534,1270,3.534,1271,3.534,1272,3.534,1273,3.534,1274,3.534,1275,3.534,1276,3.534,1277,2.767,1278,3.264,1284,3.534,1285,3.534,1291,6.129,1293,5.178,1294,5.178,1295,5.178,1296,3.534,1297,3.534,1388,2.901,1432,3.599,1433,2.382,1453,2.382,1456,3.49,1462,2.382,1463,2.382,1464,4.701,1466,2.382,2340,2.462,3818,5.178,3819,5.779,3820,3.944,3821,6.84,3822,6.129,3823,5.779,3824,3.944,3825,3.944,3826,3.944,3827,3.944,3828,3.944,3829,3.944,3830,3.944,3831,3.534,3832,3.944,3833,3.944,3834,3.944,3835,3.944,3836,3.944,3837,8.378,3838,3.944,3839,3.944,3840,3.944,3841,3.944,3842,3.944,3843,5.779,3844,5.779,3845,3.944,3846,3.944,3847,5.779,3848,5.779,3849,5.779,3850,3.944,3851,3.944,3852,3.944,3853,3.944,3854,3.944,3855,3.944,3856,3.944,3857,3.944,3858,3.944]],["title/interfaces/StrapiMeResponse.html",[903,0.062,1462,3.055]],["body/interfaces/StrapiMeResponse.html",[3,0.051,4,0.051,9,0.051,11,0.751,20,0.306,21,0.822,32,0.005,34,0.566,40,0.801,41,0.134,42,0.285,46,0.089,47,0.278,115,1.44,126,0.004,127,0.004,178,0.749,184,0.923,185,0.911,186,1.132,212,3.755,262,3.458,593,3.821,622,3.005,623,1.07,624,2.922,664,1.364,666,1.235,706,0.923,707,1.028,786,2.045,812,2.326,903,0.115,905,0.741,926,2.337,927,2.337,1081,2.238,1085,4.182,1086,3.458,1087,3.647,1088,4.368,1089,4.368,1227,3.3,1228,2.845,1229,2.706,1230,3.193,1234,3.193,1236,3.193,1240,3.193,1242,3.193,1432,2.526,1461,3.3,1462,4.841,1463,4.288,1464,4.433,1465,5.005,1466,4.288,1467,3.3,1468,3.42,1469,4.156,1470,3.3,1471,3.095,1472,3.095,1473,3.3,1474,3.42,1475,3.42,1476,4.593,1477,3.42,1478,3.42,1479,3.42,1480,3.42,1481,4.593,1482,4.593,1483,4.593,1484,3.42,1485,3.42,1486,3.42]],["title/interfaces/StrapiMedia.html",[903,0.062,920,1.479]],["body/interfaces/StrapiMedia.html",[3,0.048,4,0.048,9,0.048,20,0.288,21,0.789,25,1.09,32,0.005,33,0.769,34,0.46,40,0.806,41,0.136,42,0.268,46,0.094,47,0.262,49,2.096,126,0.003,127,0.003,161,0.954,162,3.605,180,1.354,186,0.984,187,1.612,204,2.429,256,1.165,266,1.475,274,2.065,403,2.231,405,2.325,463,3.486,464,1.393,509,2.91,619,1.636,634,2.826,637,2.748,639,3.002,664,1.238,666,1.462,759,4.376,786,1.923,800,3.255,802,2.485,806,2.837,807,1.612,894,2.325,903,0.116,905,0.697,917,2.408,920,1.991,926,1.299,927,1.299,1012,2.608,1019,1.413,1020,2.676,1023,2.676,1024,3.976,1025,2.676,1026,2.676,1027,2.676,1028,2.608,1087,2.028,1116,3.058,1118,3.058,1120,3.058,1122,3.058,1389,3.002,1431,4.691,1432,2.376,1433,3.002,1434,3.002,1435,4.891,1436,3.104,1437,3.104,1438,3.104,1439,3.104,1440,4.277,1441,4.277,1442,5.464,1443,5.464,1444,5.464,1445,3.104,1446,5.464,1447,5.459,1448,3.104,1449,3.104,1450,3.002,1451,3.104,1452,3.104,1453,3.002,1454,4.849,1455,3.104,1456,3.002,1457,3.104,1458,3.104,1459,3.104,1460,3.104]],["title/interfaces/StrapiMediaData.html",[903,0.062,1435,2.962]],["body/interfaces/StrapiMediaData.html",[3,0.042,4,0.042,9,0.042,20,0.253,21,0.721,25,0.958,32,0.005,33,0.802,34,0.592,40,0.811,41,0.13,42,0.236,46,0.091,47,0.23,49,1.981,126,0.003,127,0.003,161,0.872,162,3.408,180,1.191,186,0.918,187,1.417,204,2.136,256,1.025,266,1.297,274,1.816,403,1.962,405,2.045,463,3.187,464,1.225,509,2.559,619,1.439,634,2.485,637,2.416,639,2.64,664,1.171,666,1.467,759,4.563,786,1.691,800,2.975,802,2.185,806,2.959,807,1.417,894,2.045,903,0.112,905,0.612,920,1.278,926,2.065,927,2.065,1012,2.293,1019,1.242,1020,2.353,1023,2.353,1024,3.711,1025,2.353,1026,2.353,1027,2.353,1028,2.293,1087,3.223,1116,2.854,1118,2.854,1120,2.854,1122,2.854,1389,2.64,1431,5.512,1432,2.089,1433,2.64,1434,2.64,1435,4.244,1436,2.729,1437,2.729,1438,4.932,1439,4.932,1440,4.46,1441,4.46,1442,5.698,1443,5.698,1444,5.698,1445,4.932,1446,5.698,1447,5.512,1448,2.729,1449,2.729,1450,2.64,1451,2.729,1452,2.729,1453,2.64,1454,4.526,1455,2.729,1456,2.64,1457,2.729,1458,2.729,1459,2.729,1460,2.729]],["title/classes/StrapiMediaService.html",[47,0.266,1450,3.055]],["body/classes/StrapiMediaService.html",[3,0.045,4,0.045,9,0.045,20,0.271,23,1.374,25,1.43,29,1.542,31,1.356,32,0.005,33,0.799,34,0.445,35,0.994,38,1.356,40,0.805,41,0.133,42,0.252,46,0.093,47,0.246,49,2.224,126,0.003,127,0.003,161,0.914,162,3.511,180,1.273,186,0.952,187,1.515,204,3.674,256,1.095,266,1.936,274,1.942,403,3.842,405,2.186,463,4.166,464,1.31,509,2.736,619,1.538,634,2.657,635,5.4,636,3.868,637,4.498,639,2.822,664,0.693,666,1.439,759,4.28,786,2.908,800,3.889,802,2.336,806,2.775,807,1.515,894,2.186,903,0.114,920,1.367,926,1.221,927,1.221,1012,2.452,1019,1.854,1020,2.515,1023,4.38,1024,3.849,1025,2.515,1026,3.512,1027,3.512,1028,2.452,1087,1.906,1116,2.959,1118,2.959,1120,2.959,1122,2.959,1259,2.657,1389,2.822,1431,4.54,1432,3.593,1433,2.822,1434,2.822,1435,3.82,1436,2.918,1437,2.918,1438,2.918,1439,2.918,1440,4.183,1441,4.183,1442,5.344,1443,5.344,1444,5.344,1445,2.918,1446,5.344,1447,5.355,1448,2.918,1449,2.918,1450,3.941,1451,2.918,1452,4.074,1453,2.822,1454,4.694,1455,2.918,1456,2.822,1457,2.918,1458,2.918,1459,2.918,1460,2.918,3859,4.674,3860,4.674,3861,4.674,3862,4.674,3863,4.674]],["title/injectables/StrapiRepositoryService.html",[178,0.534,1018,3.549]],["body/injectables/StrapiRepositoryService.html",[3,0.041,4,0.041,9,0.041,20,0.242,23,1.269,25,1.321,29,1.807,31,1.776,32,0.005,33,0.751,34,0.506,35,1.302,38,1.776,40,0.756,41,0.142,42,0.225,46,0.08,47,0.22,49,1.773,56,1.769,126,0.003,127,0.003,161,0.585,178,0.636,180,1.138,182,2.041,184,0.73,185,0.72,186,1.196,222,1.954,244,0.928,245,1.487,256,0.979,266,2.767,274,1.736,299,1.954,301,1.914,308,1.589,403,3.473,405,1.954,455,1.635,576,1.464,619,1.375,623,0.845,642,2.089,646,3.085,647,3.013,648,3.243,649,3.243,652,3.243,655,1.635,658,2.819,659,3.729,661,3.619,662,2.88,664,1.147,665,2.703,666,1.324,667,1.63,668,3.639,669,3.619,671,2.145,672,2.192,677,2.819,698,1.954,699,1.451,700,1.838,702,2.375,703,2.139,704,1.736,705,2.089,706,0.73,707,0.812,710,2.523,765,2.608,783,5.63,785,3.458,786,2.993,787,4.831,788,4.413,790,3.639,796,2.608,798,2.523,799,2.703,800,3.698,801,2.931,802,2.089,805,2.703,806,1.354,807,1.953,808,2.608,809,2.703,810,2.703,811,2.703,812,1.838,813,3.162,814,2.703,815,2.608,816,2.703,818,2.375,819,2.041,820,2.375,874,1.562,903,0.095,908,1.529,917,1.295,924,2.067,1010,5.199,1011,2.809,1012,2.192,1013,2.809,1014,2.608,1015,4.959,1016,3.073,1017,2.446,1018,4.228,1019,1.713,1020,2.249,1021,5.516,1022,2.809,1023,4.165,1024,3.619,1025,2.249,1026,3.243,1027,3.243,1028,2.192,1029,2.608,1030,2.809,1031,2.809,1032,4.052,1033,3.073,1034,2.809,1035,2.809,1036,2.809,1037,4.052,1038,3.073,1039,5.199,1040,3.073,1041,2.809,1042,2.809,1043,3.073,1044,3.073,1045,2.809,1046,2.809,1047,2.809,1048,3.073,1049,2.809,1050,3.073,1051,2.809,1052,3.073,1053,2.809,1054,3.073,1055,3.073,1259,4.663,1699,3.744,3864,4.178,3865,4.178,3866,4.178,3867,4.178,3868,4.178,3869,4.178]],["title/interfaces/StrapiSignIn.html",[903,0.062,1467,3.158]],["body/interfaces/StrapiSignIn.html",[3,0.055,4,0.055,9,0.055,11,0.801,20,0.326,21,0.858,32,0.005,34,0.439,40,0.796,41,0.137,42,0.304,46,0.091,47,0.297,115,1.535,126,0.004,127,0.004,178,0.781,184,0.984,185,0.971,186,1.157,212,3.824,262,3.18,593,3.987,622,3.203,623,1.14,624,3.115,664,1.227,666,1.068,706,0.984,707,1.096,786,2.18,812,2.479,903,0.117,905,0.79,926,1.936,927,1.936,1081,2.385,1085,3.465,1086,2.866,1087,3.022,1088,3.62,1089,3.62,1227,3.518,1228,3.033,1229,2.885,1230,3.403,1234,3.403,1236,3.403,1240,3.403,1242,3.403,1246,5.166,1432,2.693,1461,3.518,1462,4.474,1463,4.474,1464,4.625,1465,5.166,1466,4.474,1467,4.625,1468,3.646,1469,4.337,1470,3.518,1471,3.299,1472,3.299,1473,3.518,1474,3.646,1475,3.646,1476,4.793,1477,3.646,1478,3.646,1479,3.646,1480,3.646,1481,4.793,1482,4.793,1483,4.793,1484,3.646,1485,3.646,1486,3.646,3870,8.276]],["title/interfaces/StrapiSignInResponse.html",[903,0.062,1463,3.055]],["body/interfaces/StrapiSignInResponse.html",[3,0.055,4,0.055,9,0.055,11,0.801,20,0.326,21,0.858,32,0.005,34,0.439,40,0.791,41,0.137,42,0.304,46,0.091,47,0.297,115,1.535,126,0.004,127,0.004,178,0.781,184,0.984,185,0.971,186,1.157,212,4.001,262,3.18,593,3.987,622,3.203,623,1.14,624,3.115,664,1.227,666,1.068,706,0.984,707,1.096,786,2.18,812,2.479,903,0.117,905,0.79,926,1.936,927,1.936,1081,2.385,1085,3.465,1086,2.866,1087,3.022,1088,3.62,1089,3.62,1227,3.518,1228,3.033,1229,2.885,1230,3.403,1234,3.403,1236,3.403,1240,3.403,1242,3.403,1432,2.693,1461,3.518,1462,4.474,1463,4.998,1464,5.701,1465,5.701,1466,4.474,1467,3.518,1468,3.646,1469,4.337,1470,3.518,1471,3.299,1472,3.299,1473,3.518,1474,3.646,1475,3.646,1476,4.793,1477,3.646,1478,3.646,1479,3.646,1480,3.646,1481,4.793,1482,4.793,1483,4.793,1484,3.646,1485,3.646,1486,3.646]],["title/interfaces/StrapiSignUp.html",[903,0.062,1470,3.158]],["body/interfaces/StrapiSignUp.html",[3,0.054,4,0.054,9,0.054,11,0.792,20,0.323,21,0.852,32,0.005,34,0.488,40,0.799,41,0.137,42,0.301,46,0.091,47,0.294,115,1.519,126,0.004,127,0.004,178,0.776,184,0.974,185,0.96,186,1.152,212,3.812,262,3.167,593,3.958,622,3.168,623,1.128,624,3.081,664,1.22,666,1.06,706,0.974,707,1.084,786,2.156,812,2.452,903,0.117,905,0.781,926,1.922,927,1.922,1081,2.36,1085,4.256,1086,3.52,1087,3,1088,3.594,1089,3.594,1227,3.48,1228,3,1229,2.853,1230,3.366,1234,3.366,1236,3.366,1240,3.366,1242,3.366,1246,5.139,1432,2.664,1461,3.48,1462,4.442,1463,4.442,1464,4.592,1465,5.139,1466,4.442,1467,3.48,1468,3.606,1469,4.306,1470,4.592,1471,3.263,1472,3.263,1473,3.48,1474,3.606,1475,3.606,1476,4.758,1477,3.606,1478,3.606,1479,3.606,1480,3.606,1481,4.758,1482,4.758,1483,4.758,1484,3.606,1485,3.606,1486,3.606]],["title/interfaces/StrapiSignUpResponse.html",[903,0.062,1466,3.055]],["body/interfaces/StrapiSignUpResponse.html",[3,0.055,4,0.055,9,0.055,11,0.801,20,0.326,21,0.858,32,0.005,34,0.439,40,0.791,41,0.137,42,0.304,46,0.091,47,0.297,115,1.535,126,0.004,127,0.004,178,0.781,184,0.984,185,0.971,186,1.157,212,4.001,262,3.18,593,3.987,622,3.203,623,1.14,624,3.115,664,1.227,666,1.068,706,0.984,707,1.096,786,2.18,812,2.479,903,0.117,905,0.79,926,1.936,927,1.936,1081,2.385,1085,3.465,1086,2.866,1087,3.022,1088,3.62,1089,3.62,1227,3.518,1228,3.033,1229,2.885,1230,3.403,1234,3.403,1236,3.403,1240,3.403,1242,3.403,1432,2.693,1461,3.518,1462,4.474,1463,4.474,1464,5.701,1465,5.701,1466,4.998,1467,3.518,1468,3.646,1469,4.337,1470,3.518,1471,3.299,1472,3.299,1473,3.518,1474,3.646,1475,3.646,1476,4.793,1477,3.646,1478,3.646,1479,3.646,1480,3.646,1481,4.793,1482,4.793,1483,4.793,1484,3.646,1485,3.646,1486,3.646]],["title/interfaces/StrapiUser.html",[903,0.062,1465,3.158]],["body/interfaces/StrapiUser.html",[3,0.051,4,0.051,9,0.051,11,0.751,20,0.306,21,0.822,32,0.005,34,0.566,40,0.801,41,0.134,42,0.285,46,0.089,47,0.278,115,1.44,126,0.004,127,0.004,178,0.749,184,0.923,185,0.911,186,1.132,212,3.755,262,3.458,593,3.821,622,3.005,623,1.07,624,2.922,664,1.364,666,1.235,706,0.923,707,1.028,786,2.045,812,2.326,903,0.115,905,0.741,926,2.337,927,2.337,1081,2.238,1085,4.182,1086,3.458,1087,3.647,1088,4.368,1089,4.368,1227,3.3,1228,2.845,1229,2.706,1230,3.193,1234,3.193,1236,3.193,1240,3.193,1242,3.193,1432,2.526,1461,3.3,1462,4.288,1463,4.288,1464,4.433,1465,5.35,1466,4.288,1467,3.3,1468,3.42,1469,4.156,1470,3.3,1471,3.095,1472,3.095,1473,3.3,1474,3.42,1475,3.42,1476,4.593,1477,3.42,1478,3.42,1479,3.42,1480,3.42,1481,4.593,1482,4.593,1483,4.593,1484,3.42,1485,3.42,1486,3.42]],["title/interfaces/Task.html",[903,0.062,3871,4.533]],["body/interfaces/Task.html",[3,0.072,4,0.072,9,0.072,20,0.432,21,1.023,32,0.005,34,0.523,41,0.133,46,0.072,115,2.562,126,0.004,127,0.004,704,3.907,903,0.092,905,1.046,974,4.543,1019,2.51,1913,5.02,3871,7.913,3872,7.466,3873,9.404,3874,7.466,3875,7.466,3876,7.466]],["title/interfaces/Team.html",[110,1.218,903,0.062]],["body/interfaces/Team.html",[3,0.063,4,0.063,9,0.063,20,0.377,21,0.941,32,0.005,33,0.815,34,0.596,35,1.484,40,0.799,41,0.098,46,0.063,74,2.089,93,2.793,110,1.958,126,0.004,127,0.004,256,2.238,666,1.451,704,3.682,806,2.112,903,0.08,905,0.913,968,3.785,1019,2.311,1059,4.75,1060,4.75,1104,3.303,1116,2.565,1118,2.565,1120,2.565,1122,2.565,1239,5.076,1913,4.381,3877,6.516]],["title/interfaces/TeamAttributes.html",[903,0.062,967,2.226]],["body/interfaces/TeamAttributes.html",[3,0.043,4,0.043,9,0.043,11,0.631,20,0.257,21,0.729,32,0.005,33,0.805,34,0.517,35,1.329,40,0.771,41,0.131,42,0.24,46,0.061,47,0.234,74,1.891,95,1.895,100,2.743,110,1.916,126,0.003,127,0.003,161,1.115,178,0.664,184,0.776,185,0.765,186,1.161,244,0.987,249,1.556,256,1.041,455,1.456,456,2.6,459,2.525,464,1.245,623,0.899,655,1.456,664,1.179,666,1.378,667,0.935,699,1.07,706,1.1,707,0.864,740,1.581,771,2.387,903,0.114,905,0.622,908,2.134,916,1.508,917,2.267,920,1.841,921,1.508,922,1.418,923,2.926,924,1.841,926,2.08,927,2.08,928,2.701,929,1.21,932,1.21,934,1.377,935,1.508,936,2.719,938,2.759,940,1.318,941,1.227,942,1.508,943,1.337,944,1.337,945,1.337,946,1.78,947,1.337,948,1.21,951,1.508,952,1.508,953,1.508,954,1.377,955,1.508,956,1.508,957,1.21,959,2.483,960,1.21,961,1.21,962,2.455,963,4.658,964,2.221,965,2.616,966,1.954,967,3.217,968,3.246,969,4.282,970,2.6,971,4.073,972,4.073,973,3.246,974,2.035,975,4.073,976,4.073,977,3.802,978,1.88,979,2.6,980,2.683,981,2.6,982,2.6,983,2.6,984,2.6,985,2.683,986,2.394,987,1.508,988,2.035,989,2.683,990,2.683,991,2.683,992,2.683,993,2.683,994,2.683,995,2.683,996,2.683,997,1.689,998,2.683,999,3.802,1000,2.683,1001,2.683,1002,2.683,1003,2.683,1004,2.683,1005,2.683,1006,2.683,1007,2.683,1008,4.157]],["title/interfaces/TeamAttributes-1.html",[874,1.582,903,0.052,967,1.861]],["body/interfaces/TeamAttributes-1.html",[3,0.044,4,0.044,9,0.044,11,0.648,20,0.264,21,0.743,32,0.005,33,0.811,34,0.547,35,1.341,40,0.77,41,0.127,42,0.246,46,0.044,47,0.24,74,2.035,110,1.545,126,0.003,127,0.003,161,1.128,178,0.677,184,0.797,185,0.786,186,1.169,244,1.013,249,1.598,256,1.069,455,1.055,457,2.521,464,1.278,623,0.923,655,1.483,664,1.193,666,1.427,667,0.96,699,1.098,706,1.12,707,0.887,740,1.623,771,2.411,903,0.117,905,0.639,908,2.129,916,1.548,917,2.3,918,3.47,920,1.876,921,1.548,922,1.456,923,2.961,924,2.354,925,3.398,926,2.217,927,2.217,928,2.88,929,1.243,932,1.243,934,1.414,935,1.548,936,2.517,938,2.554,940,1.353,941,1.26,942,1.548,943,1.373,944,1.373,945,1.373,946,1.827,947,1.373,948,1.243,951,1.548,952,1.548,953,1.548,954,1.414,955,1.548,956,1.548,957,1.243,959,2.518,960,1.243,961,1.243,965,3.345,966,2.006,967,3.732,968,3.687,978,1.93,986,2.439,987,1.548,988,2.089,997,1.734,1057,2.455,1058,2.28,1059,4.627,1060,4.627,1061,3.755,1062,2.592,1063,2.455,1064,2.455,1065,2.67,1066,2.67,1067,2.67,1068,2.67,1069,2.67,1070,2.67,1071,3.755,1072,2.67,1073,2.67,1074,2.67,1075,2.67,1076,2.67,1077,4.101]],["title/components/TeamCreateModalComponent.html",[0,1.235,109,2.142]],["body/components/TeamCreateModalComponent.html",[0,1.218,1,0.998,2,1.73,3,0.023,4,0.023,5,1.078,6,1.101,7,1.078,8,1.078,9,0.023,11,0.559,12,2.112,13,0.963,14,3.757,15,3.578,16,1.664,18,1.664,20,0.139,21,0.455,23,0.828,24,2.641,25,0.862,29,1.773,31,1.037,32,0.005,33,0.703,34,0.427,35,0.76,36,3.826,38,1.321,39,2.052,41,0.087,42,0.13,46,0.023,47,0.127,49,1.252,59,0.816,60,1.73,61,1.73,62,0.93,63,2.854,64,1.078,65,1.078,66,1.017,67,1.078,68,0.98,69,1.078,70,0.998,71,1.037,72,1.078,73,1.017,74,1.537,75,4.288,76,2.588,77,1.017,78,2.588,79,0.998,80,1.078,81,0.998,82,1.078,83,0.998,84,1.078,85,0.998,86,1.446,87,1.078,88,0.998,89,1.078,90,0.998,91,1.078,92,0.998,93,2.169,94,1.017,95,1.184,96,1.017,97,1.017,98,1.078,99,1.017,100,1.356,101,0.998,102,1.078,103,0.998,104,1.078,105,1.017,106,1.078,107,0.98,108,1.078,109,2.441,110,2.158,111,1.017,112,1.017,113,1.078,114,0.998,115,0.655,116,0.98,117,0.998,118,1.078,119,0.998,120,1.078,121,0.998,122,1.078,123,0.998,124,1.057,125,1.078,126,0.002,127,0.002,149,0.963,151,0.899,161,0.551,186,0.805,187,1.618,244,0.873,245,1.776,259,2.013,262,1.422,289,4.461,306,1.366,308,0.914,759,3.413,761,1.451,822,3.495,968,2.352,1136,2.302,1169,2.952,1173,1.23,1187,1.768,1195,1.5,1223,3.014,1425,1.686,1440,3.107,1441,2.438,1513,4.275,1528,2.375,1529,3.482,1530,3.115,1549,4.8,1555,2.455,1789,3.228,1793,1.768,1794,2.892,1795,4.985,1796,2.455,1797,3.501,1801,5.305,1802,2.644,1804,3.355,1806,1.686,1808,4.836,1809,2.455,1810,3.73,1811,1.866,1812,1.866,1821,1.686,1822,2.644,1827,1.555,1829,5.384,1832,1.616,1833,2.892,1834,4.123,1835,4.276,1836,2.544,1837,2.544,1838,1.616,1839,3.877,1840,2.758,1844,1.768,1846,3.482,1847,4.591,1850,1.616,1852,1.555,1853,1.555,1854,3.355,1855,1.616,1856,1.768,1864,2.455,1872,5.057,1874,4.417,1875,2.758,1876,2.892,1877,2.892,1916,1.866,1917,3.841,1918,3.874,1919,3.053,1920,5.057,1921,3.874,1922,2.892,1923,4.477,1924,3.053,1925,3.877,1926,2.644,1927,1.616,1928,3.355,1929,2.644,1930,3.228,1931,5.301,1933,1.616,1936,3.053,1940,2.153,1942,2.758,1943,1.866,1946,1.768,1947,2.153,1948,1.616,1950,1.866,1951,1.866,1952,1.686,1956,3.053,1959,1.866,1960,1.866,1961,1.866,1962,1.866,1963,1.866,1964,1.768,1965,1.616,1966,2.644,1967,1.866,1968,1.866,1969,3.053,1970,1.866,1971,2.892,1972,1.866,1973,1.866,1974,1.866,1975,1.866,1976,1.768,1977,2.892,1978,1.866,1979,1.866,1980,1.866,1981,1.686,1982,1.866,1983,3.053,1986,3.523,1987,3.523,1990,5.784,1991,5.46,1992,2.455,1993,1.686,2001,4.045,2002,3.501,2003,4.79,2004,4.591,2005,2.758,2006,1.768,2007,1.768,2008,1.866,2009,2.892,2010,2.921,2011,1.866,2012,1.555,2013,1.866,2014,4.477,2015,1.686,2016,1.686,2017,2.892,2018,1.616,2019,3.053,2020,1.866,2021,1.768,2022,1.866,2023,1.768,2024,1.768,2025,1.866,2026,1.866,2027,1.866,2028,1.866,2029,1.866,2030,1.866,2031,3.053,2032,1.866,2033,1.866,2034,1.866,2035,1.989,2036,1.989,2037,1.989,2038,1.768,2039,1.866,2040,3.053,2217,1.686,2227,1.866,2228,1.866,2229,1.686,2230,3.874,2499,1.555,2731,3.254,3315,3.523,3319,2.153,3333,2.153,3353,2.153,3377,2.153,3393,2.153,3394,2.153,3668,7.853,3878,7.853,3879,2.403,3880,2.403,3881,2.403,3882,2.403,3883,2.403,3884,2.403,3885,2.403,3886,2.403,3887,2.403,3888,2.403,3889,2.403,3890,2.403,3891,2.403,3892,2.403,3893,2.403,3894,2.403,3895,2.403,3896,2.403,3897,2.403,3898,2.403,3899,2.403,3900,3.932,3901,3.932,3902,3.932,3903,3.932,3904,3.932,3905,3.932]],["title/interfaces/TeamData.html",[903,0.062,966,2.226]],["body/interfaces/TeamData.html",[3,0.045,4,0.045,9,0.045,11,0.666,20,0.271,21,0.757,32,0.005,33,0.753,34,0.387,40,0.73,41,0.133,42,0.253,46,0.063,47,0.247,74,1.472,95,1.968,100,2.809,110,1.962,126,0.003,127,0.003,161,1.141,178,0.69,184,0.818,185,0.807,186,1.177,244,1.041,249,1.641,256,1.098,455,1.512,456,2.743,459,2.663,464,1.313,623,0.948,655,1.512,664,1.35,666,1.36,667,0.987,699,1.128,706,1.142,707,0.911,740,1.668,771,2.14,903,0.116,905,0.656,908,2.15,916,1.59,917,2.751,920,1.912,921,1.59,922,1.496,923,2.404,924,1.912,926,1.225,927,1.225,928,1.59,929,1.277,932,1.277,934,1.452,935,1.59,936,2.756,938,2.796,940,1.39,941,1.295,942,1.59,943,1.41,944,1.41,945,1.41,946,1.877,947,1.41,948,1.277,951,1.59,952,1.59,953,1.59,954,1.452,955,1.59,956,1.59,957,1.277,959,2.555,960,1.277,961,1.277,962,2.59,963,4.769,964,2.343,965,2.716,966,2.876,967,3.584,968,1.911,969,4.385,970,2.743,971,4.17,972,4.17,973,3.323,974,2.146,975,4.17,976,4.17,977,3.948,978,1.983,979,2.743,980,2.83,981,2.743,982,2.743,983,2.743,984,2.743,985,2.83,986,2.486,987,1.59,988,2.146,989,2.83,990,2.83,991,2.83,992,2.83,993,2.83,994,2.83,995,2.83,996,2.83,997,1.782,998,2.83,999,3.948,1000,2.83,1001,2.83,1002,2.83,1003,2.83,1004,2.83,1005,2.83,1006,2.83,1007,2.83,1008,4.28]],["title/interfaces/TeamData-1.html",[874,1.582,903,0.052,966,1.861]],["body/interfaces/TeamData-1.html",[3,0.048,4,0.048,9,0.048,11,0.704,20,0.287,21,0.787,32,0.005,33,0.768,34,0.294,40,0.729,41,0.131,42,0.268,46,0.048,47,0.261,74,1.879,110,1.637,126,0.003,127,0.003,161,1.169,178,0.717,184,0.866,185,0.854,186,1.193,244,1.101,249,1.737,256,1.162,455,1.147,457,2.74,464,1.389,623,1.003,655,1.572,664,1.237,666,1.333,667,1.044,699,1.194,706,1.187,707,0.964,740,1.765,771,2.204,903,0.118,905,0.695,908,2.186,916,1.683,917,2.404,918,3.628,920,1.988,921,1.683,922,1.583,923,2.5,924,2.441,925,3.553,926,1.776,927,1.776,928,2.307,929,1.351,932,1.351,934,1.537,935,1.683,936,2.594,938,2.632,940,1.471,941,1.37,942,1.683,943,1.492,944,1.492,945,1.492,946,1.986,947,1.492,948,1.351,951,1.683,952,1.683,953,1.683,954,1.537,955,1.683,956,1.683,957,1.351,959,2.633,960,1.351,961,1.351,965,3.467,966,2.99,967,3.973,968,3.404,978,2.099,986,2.585,987,1.683,988,2.271,997,1.885,1057,2.668,1058,2.479,1059,4.272,1060,4.272,1061,3.979,1062,2.818,1063,2.668,1064,2.668,1065,2.902,1066,2.902,1067,2.902,1068,2.902,1069,2.902,1070,2.902,1071,3.979,1072,2.902,1073,2.902,1074,2.902,1075,2.902,1076,2.902,1077,4.288]],["title/injectables/TeamJsonServerStorageMapping.html",[178,0.534,3906,4.187]],["body/injectables/TeamJsonServerStorageMapping.html",[3,0.047,4,0.047,9,0.047,11,0.685,20,0.279,23,1.404,29,1.882,31,1.907,32,0.005,33,0.822,34,0.544,35,1.398,38,1.907,40,0.591,41,0.124,42,0.26,46,0.047,47,0.254,74,1.085,110,2.287,126,0.003,127,0.003,178,0.703,184,0.841,185,0.83,186,1.096,187,2.477,244,1.07,455,2.163,487,6.051,576,1.688,623,0.975,655,1.541,664,0.714,666,1.385,667,1.609,671,1.715,699,1.16,706,1.335,707,0.937,812,2.119,870,4.343,903,0.059,908,2.023,929,1.816,932,1.816,934,1.493,936,2.568,938,2.695,939,2.663,940,1.429,941,1.331,943,1.45,944,1.45,945,1.45,947,1.45,948,1.816,957,1.816,960,1.816,961,1.816,965,3.813,968,1.965,1057,5.034,1058,2.409,1059,4.221,1060,4.221,1063,3.587,1064,3.587,1077,2.663,1609,3.497,1610,3.497,1611,3.497,1612,3.497,1613,3.497,1614,3.497,1615,3.497,1617,2.528,1618,3.053,1635,3.117,2042,3.38,2051,4.312,2052,3.38,2053,3.38,2054,3.117,2055,3.38,2058,3.38,2060,4.943,2061,4.77,3398,4.317,3906,5.515,3907,4.818,3908,4.818,3909,4.818,3910,4.818,3911,4.818,3912,4.818,3913,4.317,3914,4.317,3915,5.972,3916,4.317,3917,4.317,3918,4.317,3919,4.317,3920,4.317,3921,4.317,3922,4.317,3923,4.317,3924,4.317,3925,4.317,3926,6.847]],["title/injectables/TeamMappingFirebase.html",[178,0.534,477,4.187]],["body/injectables/TeamMappingFirebase.html",[3,0.041,4,0.041,9,0.041,11,0.594,20,0.242,21,0.698,23,1.27,25,0.917,29,1.884,31,1.875,32,0.005,33,0.82,34,0.486,35,1.375,38,1.831,40,0.635,41,0.135,42,0.226,46,0.041,47,0.22,49,1.774,74,0.942,93,1.815,110,2.299,126,0.003,127,0.003,161,0.586,178,0.636,184,0.731,185,0.721,186,1.116,256,0.98,447,2.378,455,2.158,477,4.991,498,2.706,499,3.765,576,1.465,579,2.251,619,1.377,623,0.846,643,2.813,645,4.576,653,2.526,655,1.395,657,3.642,664,1.267,666,1.324,667,1.63,670,3.462,671,2.147,680,2.526,681,2.526,682,2.706,684,2.813,696,2.251,699,1.007,703,2.141,706,1.235,707,0.813,712,2.706,741,4.756,806,1.356,908,2.018,929,1.643,932,1.643,948,1.643,954,1.296,957,1.643,960,1.643,961,1.643,968,2.46,978,3.277,987,2.401,1017,4.141,1057,5.021,1058,2.091,1059,3.088,1060,3.088,1062,4.401,1063,4.167,1064,4.167,1104,1.489,1116,1.647,1118,1.647,1120,1.647,1122,1.647,1368,3.428,1413,7.721,1609,3.164,1610,3.164,1611,3.164,1612,3.164,1613,3.164,1614,3.164,1615,3.164,1617,3.164,1618,1.916,2064,3.462,2067,3.748,2068,3.462,2070,4.962,2071,2.934,2074,2.934,2075,2.934,2076,2.934,2077,2.934,2078,2.934,2079,6.843,2080,3.077,2081,4.576,2083,4.683,2084,4.962,2085,3.077,2086,2.934,2087,3.248,2088,3.248,2089,3.462,2758,4.683,2761,3.248,2762,3.248,2764,3.748,2780,3.462,3927,4.183,3928,4.183,3929,4.183,3930,4.183,3931,4.183,3932,7.074,3933,4.183,3934,4.183,3935,4.183,3936,4.183]],["title/injectables/TeamMappingStrapi.html",[178,0.534,457,2.797]],["body/injectables/TeamMappingStrapi.html",[3,0.041,4,0.041,9,0.041,11,0.594,20,0.242,23,1.269,29,1.807,31,1.831,32,0.005,33,0.839,34,0.522,35,1.343,38,1.831,40,0.698,41,0.123,42,0.225,46,0.041,47,0.22,74,1.742,110,2.246,126,0.003,127,0.003,161,1.084,178,0.636,184,0.73,185,0.72,186,1.142,244,0.928,249,1.464,256,0.979,455,2.086,457,3.331,464,1.171,576,1.464,623,0.845,655,1.394,664,1.147,666,1.388,667,1.489,671,1.487,699,1.006,706,1.235,707,0.812,740,1.487,771,2.009,903,0.114,908,2.203,916,1.418,917,2.191,918,3.306,920,1.762,921,1.418,922,1.334,923,2.216,924,2.263,925,3.238,926,1.575,927,1.575,928,2.046,929,1.642,932,1.642,934,1.295,935,1.418,936,2.434,938,2.469,940,1.239,941,1.154,942,1.418,943,1.258,944,1.258,945,1.258,946,1.674,947,1.258,948,1.642,951,1.418,952,1.418,953,1.418,954,1.295,955,1.418,956,1.418,957,1.642,959,2.399,960,1.642,961,1.642,965,3.966,966,3.11,967,3.404,968,3.156,978,1.769,986,2.292,987,1.418,988,1.914,997,1.589,1057,4.854,1058,2.089,1059,3.961,1060,3.961,1061,3.528,1062,2.375,1063,2.249,1064,2.249,1065,2.446,1066,2.446,1067,2.446,1068,2.446,1069,2.446,1070,2.446,1071,3.528,1072,2.446,1073,2.446,1074,2.446,1075,2.446,1076,2.446,1077,3.907,1609,3.162,1610,3.162,1611,3.162,1612,3.162,1613,3.162,1614,3.162,1615,3.162,1617,2.192,1618,2.76,3937,4.178,3938,4.178,3939,3.744,3940,4.178,3941,4.178,3942,4.178,3943,4.178]],["title/interfaces/TeamRaw.html",[903,0.062,965,2.102]],["body/interfaces/TeamRaw.html",[3,0.046,4,0.046,9,0.046,11,0.672,20,0.274,21,0.762,32,0.005,33,0.755,34,0.28,40,0.732,41,0.134,42,0.255,46,0.064,47,0.249,74,1.481,95,1.98,100,2.82,110,1.97,126,0.003,127,0.003,161,1.146,178,0.694,184,0.826,185,0.815,186,1.179,244,1.05,249,1.656,256,1.108,455,1.521,456,2.768,459,2.688,464,1.325,623,0.957,655,1.521,664,1.212,666,1.316,667,0.996,699,1.139,706,1.149,707,0.919,740,1.683,771,2.15,903,0.116,905,0.663,908,2.196,916,1.605,917,2.345,920,1.924,921,1.605,922,1.51,923,2.419,924,1.924,926,1.236,927,1.236,928,1.605,929,1.288,932,1.288,934,1.466,935,1.605,936,2.762,938,2.803,940,1.403,941,1.307,942,1.605,943,1.423,944,1.423,945,1.423,946,1.895,947,1.423,948,1.288,951,1.605,952,1.605,953,1.605,954,1.466,955,1.605,956,1.605,957,1.288,959,2.568,960,1.288,961,1.288,962,2.614,963,4.788,964,2.364,965,3.143,966,2.08,967,2.894,968,1.929,969,4.402,970,2.768,971,4.187,972,4.187,973,3.336,974,2.166,975,4.187,976,4.187,977,3.973,978,2.002,979,2.768,980,2.856,981,2.768,982,2.768,983,2.768,984,2.768,985,2.856,986,2.502,987,1.605,988,2.166,989,2.856,990,2.856,991,2.856,992,2.856,993,2.856,994,2.856,995,2.856,996,2.856,997,1.798,998,2.856,999,3.973,1000,2.856,1001,2.856,1002,2.856,1003,2.856,1004,2.856,1005,2.856,1006,2.856,1007,2.856,1008,4.301]],["title/interfaces/TeamRaw-1.html",[874,1.582,903,0.052,965,1.758]],["body/interfaces/TeamRaw-1.html",[3,0.054,4,0.054,9,0.054,11,0.787,20,0.321,21,0.848,32,0.005,33,0.487,34,0.553,40,0.756,41,0.131,42,0.299,46,0.054,47,0.292,74,1.247,110,1.334,126,0.004,127,0.004,178,0.773,184,0.968,185,0.955,186,1.15,187,2.66,244,1.231,455,1.281,487,3.584,623,1.121,655,1.694,664,1.294,666,1.422,667,1.167,699,1.334,706,1.279,707,1.077,812,3.841,870,4.665,903,0.068,905,0.776,929,1.509,932,1.509,934,1.717,936,2.694,938,2.808,939,3.062,940,1.643,941,1.531,943,1.667,944,1.667,945,1.667,947,1.667,948,1.509,957,1.509,960,1.509,961,1.509,965,3.043,968,2.26,1057,2.982,1058,2.769,1059,4.871,1060,4.871,1063,3.942,1064,3.942,1077,3.062,1635,3.584,2042,3.886,2051,4.739,2052,3.886,2053,3.886,2054,3.584,2055,3.886,2058,3.886,2060,5.309,2061,5.123,3906,4.584,3913,7.824,3914,7.824,3915,6.563,3916,4.964,3917,4.964,3918,4.964,3919,4.964,3920,4.964,3921,4.964,3922,4.964,3923,4.964,3924,4.964,3925,4.964,3926,7.353]],["title/interfaces/TeamRaw-2.html",[903,0.052,965,1.758,1009,2.339]],["body/interfaces/TeamRaw-2.html",[3,0.048,4,0.048,9,0.048,11,0.704,20,0.287,21,0.787,32,0.005,33,0.768,34,0.294,40,0.729,41,0.131,42,0.268,46,0.048,47,0.261,74,1.879,110,1.637,126,0.003,127,0.003,161,1.169,178,0.717,184,0.866,185,0.854,186,1.193,244,1.101,249,1.737,256,1.162,455,1.147,457,2.74,464,1.389,623,1.003,655,1.572,664,1.237,666,1.333,667,1.044,699,1.194,706,1.187,707,0.964,740,1.765,771,2.204,903,0.118,905,0.695,908,2.201,916,1.683,917,2.404,918,3.628,920,1.988,921,1.683,922,1.583,923,2.5,924,2.441,925,3.553,926,1.776,927,1.776,928,2.307,929,1.351,932,1.351,934,1.537,935,1.683,936,2.594,938,2.632,940,1.471,941,1.37,942,1.683,943,1.492,944,1.492,945,1.492,946,1.986,947,1.492,948,1.351,951,1.683,952,1.683,953,1.683,954,1.537,955,1.683,956,1.683,957,1.351,959,2.633,960,1.351,961,1.351,965,3.633,966,2.181,967,3.671,968,3.404,978,2.099,986,2.585,987,1.683,988,2.271,997,1.885,1057,2.668,1058,2.479,1059,4.272,1060,4.272,1061,3.979,1062,2.818,1063,2.668,1064,2.668,1065,2.902,1066,2.902,1067,2.902,1068,2.902,1069,2.902,1070,2.902,1071,3.979,1072,2.902,1073,2.902,1074,2.902,1075,2.902,1076,2.902,1077,4.288]],["title/components/TeamSelectableComponent.html",[0,1.235,111,2.142]],["body/components/TeamSelectableComponent.html",[0,1.252,1,1.039,2,1.787,3,0.024,4,0.024,5,1.122,6,1.145,7,1.122,8,1.122,9,0.024,11,0.577,12,2.171,13,1.002,14,3.776,15,3.598,16,1.719,18,1.719,20,0.235,21,0.47,23,0.855,24,2.704,25,0.89,29,1.956,31,1.725,32,0.005,33,0.767,34,0.545,35,1.312,36,3.001,38,1.815,39,3.218,40,0.314,41,0.11,42,0.135,46,0.024,47,0.132,49,1.98,59,0.849,60,1.787,61,1.787,62,0.967,63,2.649,64,1.122,65,1.122,66,1.058,67,1.122,68,1.02,69,1.122,70,1.039,71,1.079,72,1.122,73,1.058,74,0.914,75,2.212,76,2.649,77,1.058,78,2.649,79,1.039,80,1.122,81,1.039,82,1.122,83,1.039,84,1.122,85,1.039,86,1.493,87,1.122,88,1.039,89,1.122,90,1.039,91,1.122,92,1.039,93,0.753,94,1.058,95,1.222,96,1.058,97,1.058,98,1.122,99,1.058,100,1.4,101,1.039,102,1.122,103,1.039,104,1.122,105,1.058,106,1.122,107,1.02,108,1.122,109,1.058,110,2.073,111,2.944,112,1.058,113,1.122,114,1.039,115,0.681,116,1.02,117,1.039,118,1.122,119,1.039,120,1.122,121,1.039,122,1.122,123,1.039,124,1.1,125,1.122,126,0.002,127,0.002,134,1.822,149,1.002,151,0.935,179,1.754,180,0.681,187,1.316,191,1.346,204,3.399,211,3.318,225,3.456,237,1.839,243,3.565,244,1.844,245,2.954,256,1.384,259,1.28,262,2.516,263,3.561,272,1.941,306,1.421,490,2.627,500,3.201,646,2.079,650,3.845,664,0.371,666,0.739,667,0.855,671,1.446,706,0.437,771,2.446,819,1.222,822,3.022,874,2.208,886,2.849,941,0.691,1029,1.561,1169,1.28,1187,1.839,1313,4.584,1440,2.506,1441,1.984,1513,2.308,1528,1.51,1529,2.453,1530,1.561,1549,3.002,1618,1.86,1717,3.448,1719,3.448,1722,2.731,1723,2.731,1743,3.153,1749,1.941,1760,2.849,1762,3.598,1763,2.849,1764,1.839,1765,2.987,1766,2.987,1767,2.987,1769,3.153,1770,2.987,1795,3.801,1797,2.849,1808,3.097,1809,1.561,1834,3.565,1845,2.069,1846,1.51,1847,4.366,1848,3.361,1850,3.97,1851,2.987,1852,1.617,1853,2.627,1855,3.448,1864,1.561,1867,1.839,1872,5.135,1873,2.069,1874,4.5,1876,2.987,1877,2.987,1990,1.561,2002,4.142,2098,1.839,2099,3.153,2100,4.244,2101,3.361,2104,6.233,2105,4.244,2106,3.639,2107,3.639,2111,3.639,2116,3.639,2117,2.24,2118,4.595,2120,2.24,2121,7.073,2127,2.069,2129,3.153,2130,2.24,2131,2.069,2132,1.941,2133,2.069,2137,2.24,2138,3.153,2140,2.069,2142,4.595,2143,2.24,2144,2.24,2145,2.24,2146,2.24,2148,3.639,2149,2.24,2150,2.24,2151,3.361,2152,2.24,2153,3.361,2154,2.24,2155,2.24,2157,2.24,2158,2.24,2159,2.24,2160,2.069,2161,1.941,2162,3.639,2163,3.639,2164,2.069,2165,2.24,2166,1.754,2169,2.24,2171,2.069,2173,2.24,2175,3.981,2177,1.941,2178,2.24,2180,1.941,2181,1.941,2182,1.941,2184,2.24,2186,2.069,2187,3.153,2191,2.24,2192,2.24,2195,2.24,2198,2.069,2199,2.069,2204,2.24,2207,3.639,2208,2.24,2209,2.24,2210,2.24,2212,2.24,2217,2.849,2218,2.24,2219,2.24,2220,2.24,2221,2.24,2222,2.24,2223,2.24,2224,2.24,2225,2.24,2226,2.24,2227,1.941,2228,1.941,2229,1.754,2230,3.153,2231,2.24,2232,2.24,2233,2.24,2499,1.617,2502,1.681,3103,2.069,3169,4.886,3669,8.587,3878,8.587,3944,4.061,3945,4.061,3946,4.061,3947,5.904,3948,4.061,3949,4.061,3950,2.5,3951,2.5,3952,2.5,3953,2.5,3954,2.5,3955,2.5,3956,2.5,3957,4.061,3958,2.5,3959,2.5,3960,2.5,3961,2.5,3962,2.5,3963,2.5,3964,2.5,3965,2.5,3966,2.5,3967,2.5,3968,5.128,3969,2.5,3970,2.5,3971,2.5,3972,2.5,3973,2.5,3974,2.5,3975,4.061,3976,5.904,3977,4.061,3978,4.061]],["title/injectables/TeamService.html",[178,0.534,225,2.962]],["body/injectables/TeamService.html",[3,0.052,4,0.052,9,0.052,11,0.761,20,0.31,23,1.509,25,1.57,29,1.935,31,1.92,32,0.005,33,0.812,34,0.547,35,1.408,38,1.92,40,0.751,41,0.144,42,0.289,46,0.052,47,0.282,74,1.817,110,1.29,126,0.004,127,0.004,161,1.004,178,0.756,180,1.46,184,0.936,185,0.923,186,0.679,225,4.194,266,2.881,434,4.434,576,1.877,619,1.763,642,3.581,646,3.667,647,3.581,648,4.344,649,3.856,652,3.856,658,2.506,659,3.647,661,3.775,662,2.56,664,1.196,666,1.332,667,1.815,668,4.326,671,2.873,672,2.811,677,2.506,700,2.357,706,0.936,707,1.042,732,2.811,807,1.737,876,6.203,878,3.603,891,2.961,894,2.506,898,4.434,1019,2.036,1058,2.678,1259,5.105,1638,2.811,1676,7.13,1678,5.929,1680,6.419,1681,6.419,1688,3.603,1689,3.466,1690,3.345,2236,3.759,2237,3.759,2238,3.759,2239,3.759,2240,3.759,2242,3.759,2245,3.759,2246,3.603,2285,6.419,3979,5.358,3980,5.358,3981,5.358,3982,5.358,3983,5.358,3984,5.358,3985,5.358]],["title/modules/TeamsPageModule.html",[128,1.545,3986,3.928]],["body/modules/TeamsPageModule.html",[3,0.064,4,0.064,9,0.064,32,0.005,41,0.15,42,0.358,43,2.612,44,2.659,46,0.064,47,0.349,59,2.253,112,4.141,126,0.004,127,0.004,128,2.027,130,2.482,131,3.172,132,4.574,133,3.397,134,2.978,135,2.567,140,4.21,141,3.318,142,3.397,144,3.181,145,3.237,146,4.426,147,3.397,148,4.426,149,2.659,150,4.21,151,2.482,152,3.572,154,3.482,155,3.668,395,5.561,500,4.143,2472,4.463,3986,7.895,3987,5.947,3988,5.947,3989,5.947,3990,7.196,3991,6.637,3992,5.947]],["title/modules/TeamsPageRoutingModule.html",[128,1.545,3990,3.721]],["body/modules/TeamsPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,112,3.729,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,3990,6.48,3992,6.662,3993,7.435]],["title/interfaces/Thumbnail.html",[903,0.062,1122,1.992]],["body/interfaces/Thumbnail.html",[3,0.045,4,0.045,9,0.045,20,0.268,21,0.75,25,1.014,32,0.005,33,0.813,34,0.571,40,0.81,41,0.133,42,0.25,46,0.093,47,0.244,49,2.032,126,0.003,127,0.003,161,0.908,162,3.915,180,1.26,186,0.947,187,1.499,204,2.26,256,1.084,266,1.372,274,1.922,403,2.076,405,2.163,463,3.316,464,1.296,509,2.708,619,1.522,634,2.629,637,2.557,639,2.793,664,0.685,666,1.468,759,4.63,786,1.789,800,3.096,802,2.312,806,3.002,807,1.499,894,2.163,903,0.114,905,0.648,920,1.353,926,1.209,927,1.209,1012,2.427,1019,1.315,1020,2.489,1023,2.489,1024,3.827,1025,2.489,1026,2.489,1027,2.489,1028,2.427,1087,1.887,1116,2.943,1118,2.943,1120,2.943,1122,3.189,1389,2.793,1431,4.515,1432,2.21,1433,2.793,1434,2.793,1435,3.792,1436,2.887,1437,2.887,1438,2.887,1439,2.887,1440,4.525,1441,4.525,1442,5.781,1443,5.781,1444,5.781,1445,2.887,1446,5.781,1447,5.592,1448,2.887,1449,2.887,1450,2.793,1451,2.887,1452,2.887,1453,2.793,1454,4.667,1455,2.887,1456,2.793,1457,2.887,1458,2.887,1459,2.887,1460,2.887]],["title/directives/TimeDirectiveDirective.html",[62,1.957,123,2.102]],["body/directives/TimeDirectiveDirective.html",[3,0.055,4,0.055,9,0.055,11,1.057,13,2.272,14,2.878,20,0.328,23,1.567,25,1.243,27,3.135,29,1.807,31,1.178,32,0.005,33,0.498,34,0.492,35,0.864,38,1.178,39,2.019,40,0.751,41,0.125,42,0.306,43,2.232,44,2.272,46,0.055,47,0.299,49,1.422,60,2.495,62,2.878,75,2.447,116,2.313,123,3.091,124,3.877,126,0.004,127,0.004,147,2.903,161,0.795,187,1.838,244,1.26,245,2.648,300,3.135,301,2.598,308,3.157,312,3.54,317,3.54,318,3.808,542,5.082,619,1.866,974,4.191,1136,4.355,1145,4.403,1146,6.842,1169,4.25,1173,2.903,1175,3.979,1202,7.438,1204,7.896,1223,3.425,1250,5.082,1252,3.669,1253,4.693,1524,4.403,2341,3.54,2375,3.813,2621,5.082,2638,5.082,2726,3.979,3028,5.082,3679,8.199,3994,9.15,3995,5.671,3996,8.812,3997,8.302,3998,7.439,3999,5.671,4000,7.439,4001,5.671,4002,5.671,4003,5.671,4004,5.671,4005,5.671,4006,5.671,4007,5.671,4008,5.671,4009,5.671,4010,9.15,4011,5.671,4012,5.671,4013,7.439,4014,5.671,4015,7.439,4016,5.671,4017,5.671,4018,5.671,4019,7.439,4020,5.671,4021,5.671,4022,5.671,4023,5.671]],["title/interfaces/User.html",[212,2.064,903,0.062]],["body/interfaces/User.html",[3,0.071,4,0.071,9,0.071,20,0.422,21,1.008,32,0.005,34,0.551,40,0.774,46,0.09,126,0.004,127,0.004,212,3.55,664,1.379,903,0.114,905,1.02,1085,4.353,1086,3.6,1228,3.92,1229,3.729,1419,5.357,1420,5.357,1469,5.094,1471,5.448,1472,4.264,3203,5.11,3689,6.028,3690,6.028,3691,6.028,3692,6.028,3693,6.028]],["title/interfaces/UserAttributes.html",[903,0.062,1084,2.962]],["body/interfaces/UserAttributes.html",[3,0.043,4,0.043,9,0.043,11,0.627,20,0.256,21,0.726,32,0.005,33,0.64,34,0.53,40,0.782,41,0.126,42,0.238,46,0.043,47,0.232,93,1.887,115,1.708,126,0.003,127,0.003,161,1.112,178,0.661,184,0.771,185,0.761,186,1.159,249,2.196,256,1.469,262,3.15,455,1.021,461,2.509,464,1.237,623,0.893,655,1.45,664,1.176,666,1.208,667,0.93,699,1.063,706,1.095,707,0.858,740,2.231,771,2.255,806,1.431,903,0.114,905,0.618,908,2.103,916,1.498,917,2.259,920,1.833,921,1.498,922,1.41,924,2.32,926,2.19,927,2.19,928,1.498,929,1.203,931,2.207,932,1.203,934,1.368,935,1.498,936,2.486,938,2.522,940,1.31,941,1.22,942,1.498,943,1.329,944,1.329,945,1.329,947,1.329,948,1.203,951,1.498,952,1.498,953,1.498,954,1.368,955,1.498,956,1.498,957,1.203,959,2.474,960,1.203,961,1.203,973,1.801,986,2.384,987,2.128,997,2.384,1079,2.44,1080,4.645,1081,1.869,1082,2.376,1083,3.563,1084,4.267,1085,3.711,1086,3.07,1087,3.237,1088,3.877,1089,3.877,1090,4.645,1091,3.67,1092,3.731,1093,2.666,1094,2.666,1095,2.376,1096,2.666,1097,2.666,1098,2.666,1099,2.666,1100,2.509,1101,2.666,1102,5.061,1103,2.666,1104,2.231,1105,2.666,1106,2.666,1107,2.666,1108,2.666,1109,2.666,1110,3.786,1111,2.666,1112,2.666,1113,2.666,1114,2.666,1115,5.061,1116,1.738,1117,2.666,1118,1.738,1119,2.666,1120,1.738,1121,2.666,1122,1.738,1123,2.666,1124,2.157,1125,2.666,1126,4.402]],["title/interfaces/UserData.html",[903,0.062,1083,2.876]],["body/interfaces/UserData.html",[3,0.045,4,0.045,9,0.045,11,0.656,20,0.267,21,0.749,32,0.005,33,0.656,34,0.383,40,0.745,41,0.128,42,0.249,46,0.045,47,0.243,93,1.946,115,1.762,126,0.003,127,0.003,161,1.134,178,0.682,184,0.806,185,0.795,186,1.172,249,2.265,256,1.516,262,2.339,455,1.067,461,2.622,464,1.293,623,0.933,655,1.495,664,1.344,666,1.307,667,0.972,699,1.111,706,1.129,707,0.897,740,2.302,771,2.3,806,1.495,903,0.115,905,0.646,908,2.119,916,1.566,917,2.737,920,1.891,921,1.566,922,1.473,924,2.366,926,1.69,927,1.69,928,1.566,929,1.257,931,2.306,932,1.257,934,1.43,935,1.566,936,2.528,938,2.564,940,1.369,941,1.275,942,1.566,943,1.389,944,1.389,945,1.389,947,1.389,948,1.257,951,1.566,952,1.566,953,1.566,954,1.43,955,1.566,956,1.566,957,1.257,959,2.534,960,1.257,961,1.257,973,1.882,986,2.459,987,2.195,997,2.459,1079,2.55,1080,4.737,1081,1.953,1082,2.483,1083,4.244,1084,4.737,1085,2.158,1086,1.785,1087,1.882,1088,2.254,1089,2.254,1090,4.737,1091,3.785,1092,3.822,1093,2.786,1094,2.786,1095,2.483,1096,2.786,1097,2.786,1098,2.786,1099,2.786,1100,2.622,1101,2.786,1102,5.145,1103,2.786,1104,2.302,1105,2.786,1106,2.786,1107,2.786,1108,2.786,1109,2.786,1110,3.905,1111,2.786,1112,2.786,1113,2.786,1114,2.786,1115,5.145,1116,1.816,1117,2.786,1118,1.816,1119,2.786,1120,1.816,1121,2.786,1122,1.816,1123,2.786,1124,2.254,1125,2.786,1126,4.509]],["title/interfaces/UserRaw.html",[903,0.062,1082,2.723]],["body/interfaces/UserRaw.html",[3,0.058,4,0.058,9,0.058,11,0.843,20,0.344,21,0.887,32,0.005,33,0.788,34,0.587,40,0.694,41,0.135,42,0.32,46,0.058,47,0.312,93,2.794,115,2.087,126,0.004,127,0.004,178,0.808,184,1.036,185,1.022,186,1.204,187,2.483,455,1.372,623,1.201,655,1.772,664,1.257,666,1.104,699,1.429,706,1.338,707,1.154,819,2.899,831,3.584,832,4.911,870,4.355,903,0.073,905,0.831,908,1.283,929,1.617,932,1.617,940,1.76,941,1.639,943,1.786,944,1.786,945,1.786,947,1.786,948,1.617,957,1.617,960,1.617,961,1.617,1079,3.28,1081,2.512,1082,4.567,1095,3.194,1100,3.373,1124,4.146,1239,5.598,2051,3.839,2060,4.956,2061,4.783,2081,5.489,3203,4.163,4024,8.485,4025,5.317,4026,5.317,4027,5.317,4028,5.317,4029,4.911,4030,4.911,4031,4.911,4032,4.911,4033,4.911,4034,4.911,4035,5.317,4036,8.034,4037,5.317,4038,5.317,4039,5.317,4040,5.317,4041,5.317,4042,5.317,4043,5.317]],["title/interfaces/UserRaw-1.html",[874,1.582,903,0.052,1082,2.277]],["body/interfaces/UserRaw-1.html",[3,0.045,4,0.045,9,0.045,11,0.662,20,0.27,21,0.754,32,0.005,33,0.659,34,0.276,40,0.746,41,0.128,42,0.251,46,0.045,47,0.245,93,1.959,115,1.773,126,0.003,127,0.003,161,1.138,178,0.686,184,0.813,185,0.802,186,1.175,249,2.28,256,1.525,262,2.354,455,1.077,461,2.646,464,1.304,623,0.942,655,1.505,664,1.204,666,1.232,667,0.98,699,1.121,706,1.137,707,0.905,740,2.316,771,2.309,806,1.509,903,0.116,905,0.652,908,2.159,916,1.58,917,2.325,920,1.903,921,1.58,922,1.486,924,2.376,926,1.701,927,1.701,928,1.58,929,1.268,931,2.327,932,1.268,934,1.443,935,1.58,936,2.536,938,2.573,940,1.381,941,1.286,942,1.58,943,1.401,944,1.401,945,1.401,947,1.401,948,1.268,951,1.58,952,1.58,953,1.58,954,1.443,955,1.58,956,1.58,957,1.268,959,2.547,960,1.268,961,1.268,973,1.899,986,2.475,987,2.209,997,2.475,1079,2.573,1080,4.756,1081,1.971,1082,3.502,1083,4.618,1084,3.809,1085,2.177,1086,1.801,1087,1.899,1088,2.275,1089,2.275,1090,4.756,1091,3.809,1092,3.841,1093,2.811,1094,2.811,1095,2.506,1096,2.811,1097,2.811,1098,2.811,1099,2.811,1100,2.646,1101,2.811,1102,5.162,1103,2.811,1104,2.316,1105,2.811,1106,2.811,1107,2.811,1108,2.811,1109,2.811,1110,3.93,1111,2.811,1112,2.811,1113,2.811,1114,2.811,1115,5.162,1116,1.832,1117,2.811,1118,1.832,1119,2.811,1120,1.832,1121,2.811,1122,1.832,1123,2.811,1124,2.275,1125,2.811,1126,4.531]],["title/interfaces/Users.html",[115,1.378,903,0.062]],["body/interfaces/Users.html",[3,0.061,4,0.061,9,0.061,20,0.367,21,0.925,32,0.005,33,0.768,34,0.601,35,1.555,40,0.801,41,0.095,46,0.061,93,2.765,115,2.176,126,0.004,127,0.004,256,2.219,704,3.634,903,0.078,905,0.887,1019,2.269,1086,3.384,1092,4.478,1095,3.408,1104,3.113,1124,4.274,1239,4.985,1416,6.791,1417,7.238,1418,7.238,1419,4.657,1420,4.657,1421,5.674,1422,5.24,1423,5.674,1424,5.674,1425,4.442,1426,5.674,1913,4.258,4029,5.24,4030,5.24,4031,5.24,4032,5.24,4033,5.24,4044,6.332,4045,6.332,4046,6.332,4047,6.332,4048,6.332]],["title/injectables/UsersLocalStorageMapping.html",[178,0.534,4034,4.187]],["body/injectables/UsersLocalStorageMapping.html",[3,0.049,4,0.049,9,0.049,11,0.719,20,0.293,23,1.452,29,1.907,31,1.933,32,0.005,33,0.831,34,0.551,35,1.417,38,1.933,39,2.454,41,0.126,42,0.273,46,0.049,47,0.267,93,2.075,115,2.579,126,0.003,127,0.003,178,0.727,184,0.884,185,0.872,186,1.151,187,2.235,455,2.189,576,1.773,623,1.024,655,1.595,666,1.31,667,1.452,671,1.802,699,1.219,706,1.37,707,0.984,819,2.474,831,5.716,832,4.19,870,3.919,903,0.062,908,2.076,929,1.879,932,1.879,940,1.502,941,1.399,943,1.524,944,1.524,945,1.524,947,1.524,948,1.879,957,1.879,960,1.879,961,1.879,1079,5.232,1081,2.143,1082,5.314,1095,2.725,1100,2.878,1609,3.618,1610,3.618,1611,3.618,1612,3.618,1613,3.618,1614,3.618,1615,3.618,1617,2.656,1618,3.158,2051,3.275,2060,4.461,2061,4.305,2081,5.073,3203,3.552,4025,4.536,4026,4.536,4027,4.536,4028,4.536,4029,4.19,4030,4.19,4031,4.19,4032,4.19,4033,4.19,4034,5.706,4035,4.536,4036,7.544,4037,4.536,4038,4.536,4039,4.536,4040,4.536,4041,4.536,4042,4.536,4043,4.536,4049,5.063,4050,5.063,4051,5.063,4052,5.063,4053,5.063,4054,5.063,4055,5.063]],["title/injectables/UsersMappingFirebase.html",[178,0.534,4056,4.533]],["body/injectables/UsersMappingFirebase.html",[3,0.039,4,0.039,9,0.039,11,0.567,20,0.231,21,0.675,23,1.228,25,0.875,29,1.863,31,1.851,32,0.005,33,0.811,34,0.477,35,1.357,38,1.805,40,0.623,41,0.139,42,0.215,46,0.039,47,0.21,49,1.728,93,1.755,95,1.202,115,2.578,126,0.003,127,0.003,161,0.559,178,0.615,184,0.697,185,0.688,186,1.1,256,0.936,447,2.269,455,2.135,499,3.64,500,3.64,502,3.772,576,1.398,579,2.149,619,1.314,623,0.808,643,2.684,645,4.456,653,2.411,655,1.348,657,3.521,664,1.247,666,1.309,667,1.595,671,2.075,680,2.411,681,2.411,682,2.583,684,2.684,696,2.149,699,0.961,703,2.044,706,1.203,707,0.776,712,2.583,741,5.657,771,1.958,806,1.294,908,1.997,929,1.589,932,1.589,948,1.589,954,1.237,957,1.589,960,1.589,961,1.589,964,1.996,978,3.206,987,2.338,1017,4.032,1079,5.103,1081,1.69,1086,2.255,1092,2.985,1104,2.075,1116,1.571,1118,1.571,1120,1.571,1122,1.571,1124,2.849,1231,7.167,1368,3.314,1411,2.936,1416,3.099,1417,3.304,1418,3.304,1609,3.059,1610,3.059,1611,3.059,1612,3.059,1613,3.059,1614,3.059,1615,3.059,1617,3.059,1618,1.828,2070,4.832,2071,4.09,2073,3.304,2074,2.801,2075,2.801,2076,2.801,2077,2.801,2078,2.801,2079,6.746,2081,4.456,2083,4.527,2084,4.09,2086,2.801,2087,3.099,2088,3.099,2763,3.577,4056,5.224,4057,5.831,4058,3.992,4059,3.992,4060,3.992,4061,3.992,4062,3.992,4063,3.992,4064,3.992,4065,7.575,4066,7.575,4067,7.575,4068,3.992,4069,3.992,4070,3.992,4071,3.992,4072,3.992,4073,3.992,4074,6.888,4075,3.992,4076,3.992,4077,6.888,4078,3.992,4079,3.992,4080,6.888,4081,3.992,4082,3.992,4083,3.992,4084,3.992,4085,3.992,4086,3.992]],["title/injectables/UsersMappingStrapi.html",[178,0.534,461,2.876]],["body/injectables/UsersMappingStrapi.html",[3,0.038,4,0.038,9,0.038,11,0.563,20,0.229,23,1.221,29,1.777,31,1.801,32,0.005,33,0.809,34,0.513,35,1.321,38,1.801,40,0.723,41,0.121,42,0.214,46,0.038,47,0.209,93,1.745,115,2.421,126,0.003,127,0.003,161,1.057,178,0.612,184,0.692,185,0.683,186,1.126,249,2.031,256,1.359,262,2.097,455,2.055,461,3.295,464,1.11,576,1.388,623,0.801,655,1.341,664,1.118,666,1.346,667,1.444,671,1.41,699,0.954,706,1.198,707,0.77,740,2.064,771,2.145,806,1.284,903,0.111,908,2.186,916,1.345,917,2.125,920,1.695,921,1.345,922,1.265,924,2.207,926,1.515,927,1.515,928,1.345,929,1.58,931,1.98,932,1.58,934,1.228,935,1.345,936,2.383,938,2.417,940,1.175,941,1.094,942,1.345,943,1.192,944,1.192,945,1.192,947,1.192,948,1.58,951,1.345,952,1.345,953,1.345,954,1.228,955,1.345,956,1.345,957,1.58,959,2.327,960,1.58,961,1.58,973,1.616,986,2.205,987,2.562,997,2.205,1079,4.913,1080,4.418,1081,1.677,1082,2.132,1083,3.295,1084,3.394,1085,1.853,1086,1.532,1087,1.616,1088,1.935,1089,1.935,1090,5.53,1091,4.418,1092,3.51,1093,2.392,1094,2.392,1095,2.132,1096,2.392,1097,2.392,1098,2.392,1099,2.392,1100,2.252,1101,2.392,1102,4.85,1103,2.392,1104,2.064,1105,2.392,1106,2.392,1107,2.392,1108,2.392,1109,2.392,1110,3.501,1111,2.392,1112,2.392,1113,2.392,1114,2.392,1115,4.85,1116,1.559,1117,2.392,1118,1.559,1119,2.392,1120,1.559,1121,2.392,1122,1.559,1123,2.392,1124,1.935,1125,2.392,1126,4.141,1609,3.042,1610,3.042,1611,3.042,1612,3.042,1613,3.042,1614,3.042,1615,3.042,1617,2.078,1618,2.655,3939,3.549,4087,3.961,4088,3.961,4089,3.961,4090,3.961,4091,3.961,4092,3.961]],["title/components/UsersPage.html",[0,1.235,114,2.102]],["body/components/UsersPage.html",[0,1.654,1,1.612,2,2.512,3,0.038,4,0.038,5,1.741,6,1.777,7,1.741,8,1.741,9,0.038,11,0.811,12,2.868,13,1.554,14,3.953,15,3.79,16,2.417,18,2.417,20,0.225,21,0.661,22,4.091,23,1.202,24,3.422,25,1.252,28,4.518,29,1.708,31,1.408,32,0.005,33,0.732,34,0.472,35,1.032,36,2.463,38,1.408,39,2.412,40,0.442,41,0.12,42,0.209,45,2.205,46,0.038,47,0.204,49,1.699,50,2.271,51,2.271,59,1.317,60,2.512,61,2.512,62,1.501,63,3.353,64,1.741,65,1.741,66,1.642,67,1.741,68,1.583,69,1.741,70,1.612,71,1.674,72,1.741,73,1.642,74,1.285,75,2.923,76,3.353,77,1.642,78,3.353,79,1.612,80,1.741,81,1.612,82,1.741,83,1.612,84,1.741,85,1.612,86,2.1,87,1.741,88,1.612,89,1.741,90,1.612,91,1.741,92,1.612,93,1.168,94,1.642,95,1.719,96,1.642,97,1.642,98,1.741,99,1.642,100,2.336,101,1.612,102,1.741,103,1.612,104,1.741,105,1.642,106,1.741,107,1.583,108,1.741,109,1.642,110,1.375,111,1.642,112,1.642,113,1.741,114,3.104,115,2.563,116,1.583,117,1.612,118,1.741,119,1.612,120,1.741,121,1.612,122,1.741,123,1.612,124,1.707,125,1.741,126,0.003,127,0.003,151,1.451,161,0.949,172,5.03,177,4.006,191,4.021,196,4.725,212,2.764,229,4.23,244,0.862,245,1.381,296,3.246,304,2.722,308,2.171,309,5.116,318,3.468,498,2.51,650,4.402,733,2.271,822,2.923,908,1.235,987,1.317,1124,1.896,1513,3.246,1516,4.2,1703,3.448,1795,3.342,1796,3.565,1992,3.565,2299,3.211,2302,2.854,2327,4.725,2334,5.116,2340,4.665,2341,3.565,2386,3.211,3025,2.51,3034,4.433,3193,4.725,3534,7.716,3558,5.116,3561,5.116,3562,3.476,3563,5.116,4093,3.88,4094,6.775,4095,5.71,4096,5.71,4097,5.71,4098,3.88,4099,5.71,4100,5.71,4101,3.88,4102,3.88,4103,5.71,4104,3.88,4105,3.88,4106,3.88,4107,3.88,4108,3.88,4109,5.71,4110,3.88,4111,3.88,4112,5.71,4113,3.88,4114,3.88,4115,5.71,4116,6.775,4117,3.88,4118,3.88,4119,3.88,4120,3.88,4121,3.88,4122,5.71,4123,5.71,4124,5.71,4125,5.71,4126,5.71,4127,5.71,4128,5.71,4129,5.71,4130,5.71]],["title/modules/UsersPageModule.html",[128,1.545,4131,3.928]],["body/modules/UsersPageModule.html",[3,0.066,4,0.066,9,0.066,32,0.005,41,0.15,42,0.366,43,2.672,44,2.719,46,0.066,47,0.357,59,2.304,114,4.087,115,1.849,126,0.004,127,0.004,128,2.073,130,2.538,131,3.244,132,4.62,133,3.474,134,3.046,135,2.626,140,4.268,141,3.393,142,3.474,144,3.226,145,3.282,146,4.488,147,3.474,148,4.488,149,2.719,150,4.268,151,2.538,152,3.653,154,3.561,155,3.752,4131,7.812,4132,6.082,4133,6.082,4134,6.082,4135,7.235,4136,6.788,4137,6.082]],["title/modules/UsersPageRoutingModule.html",[128,1.545,4135,3.721]],["body/modules/UsersPageRoutingModule.html",[0,1.815,3,0.072,4,0.072,9,0.072,32,0.005,41,0.141,42,0.401,46,0.072,47,0.392,114,3.66,126,0.004,127,0.004,130,2.78,135,2.876,144,2.876,145,3.468,157,4.001,158,4.693,159,4.741,160,3.033,161,1.042,162,3.208,163,4.11,4135,6.48,4137,6.662,4138,7.435]],["title/injectables/UsersService.html",[172,3.055,178,0.534]],["body/injectables/UsersService.html",[3,0.049,4,0.049,9,0.049,11,0.72,20,0.294,23,1.453,25,1.513,29,1.941,31,1.889,32,0.005,33,0.799,34,0.539,35,1.386,38,1.933,40,0.743,41,0.142,42,0.274,46,0.049,47,0.267,49,1.272,115,1.381,126,0.003,127,0.003,172,4.168,178,0.728,180,1.381,182,2.477,184,0.885,185,0.874,186,1.116,190,4.196,205,5.505,212,3.436,222,3.94,266,2.88,274,2.106,495,4.196,576,1.776,588,6.196,619,1.669,642,3.451,646,3.533,647,3.451,648,4.223,649,3.715,652,3.715,658,2.371,659,3.566,661,3.67,662,2.423,664,1.163,672,2.66,677,2.371,700,2.23,732,2.66,771,1.962,807,2.237,874,1.896,876,6.125,878,3.409,891,2.802,894,2.371,1019,1.962,1081,2.146,1104,2.457,1259,5.009,1308,4.543,1388,3.729,1638,2.66,1682,6.971,1684,5.712,1686,6.184,1687,6.184,1688,3.409,1689,3.28,1690,3.165,2236,3.557,2237,3.557,2238,3.557,2239,3.557,2240,3.557,2242,3.557,2245,3.557,2246,3.409,4139,5.07,4140,5.07,4141,5.07,4142,5.07,4143,5.07,4144,5.07,4145,5.07,4146,5.07,4147,5.07,4148,5.07,4149,5.07,4150,5.07,4151,5.07,4152,5.07,4153,5.07,4154,5.07,4155,5.07,4156,5.07,4157,5.07,4158,5.07]],["title/dependencies.html",[131,2.906,4159,3.791]],["body/dependencies.html",[32,0.005,42,0.37,43,3.568,44,2.745,126,0.004,127,0.004,131,3.275,147,3.508,149,2.745,151,2.562,160,2.795,180,1.867,398,7.515,399,6.941,467,5.671,468,5.671,470,6.512,471,5.884,497,4.607,2809,5.32,2811,5.32,3338,6.14,4160,6.852,4161,10.08,4162,6.852,4163,6.852,4164,6.852,4165,9.064,4166,6.852,4167,6.852,4168,6.852,4169,6.852,4170,6.852,4171,6.852,4172,6.852,4173,6.852,4174,6.852,4175,6.852,4176,6.852,4177,6.852,4178,6.852,4179,6.852,4180,6.852,4181,6.852,4182,6.852,4183,6.852,4184,6.852,4185,6.852,4186,6.852]],["title/miscellaneous/functions.html",[4187,2.968,4188,5.449]],["body/miscellaneous/functions.html",[20,0.358,31,2.054,32,0.005,33,0.868,34,0.585,35,1.506,38,1.997,40,0.704,126,0.004,127,0.004,131,4.592,396,5.537,403,3.529,484,5.537,492,7.045,654,4.798,771,2.235,790,3.732,1024,4.427,1971,4.545,2138,4.798,3617,7.045,3618,7.045,4187,4.335,4188,5.537,4189,7.863,4190,8.157,4191,7.045,4192,7.863,4193,7.045,4194,6.179,4195,7.863,4196,6.179,4197,7.863,4198,5.537,4199,6.179,4200,10.055,4201,8.157,4202,6.179,4203,7.863,4204,6.179,4205,6.179,4206,7.863,4207,7.863,4208,6.179,4209,6.179,4210,7.863,4211,6.179,4212,6.179,4213,6.179,4214,9.103,4215,7.863,4216,6.179]],["title/index.html",[20,0.245,4217,4.231,4218,4.231]],["body/index.html",[15,2.028,32,0.005,56,4.406,126,0.004,127,0.004,299,3.378,300,3.992,301,4.247,304,3.804,306,5.635,308,2.062,310,4.859,327,3.508,338,4.21,471,3.804,497,4.856,498,5.601,551,3.988,732,2.845,733,4.228,736,4.487,807,2.341,812,2.385,815,3.385,1086,2.098,1173,4.432,1192,4.859,1210,5.066,1212,7.276,1350,4.859,1351,5.607,1422,4.487,1533,4.487,1638,4.26,1792,5.976,1862,4.859,2328,4.487,2375,5.46,2394,5.976,2579,8.309,2696,4.859,2810,4.21,2815,4.487,2859,4.21,2923,6.471,3018,4.487,3019,4.859,3025,4.672,3105,5.976,3106,6.719,3220,6.471,3221,7.276,3225,6.471,3252,6.719,3267,4.859,3467,4.859,3800,4.859,4219,8.12,4220,7.222,4221,5.423,4222,8.658,4223,7.222,4224,5.423,4225,5.423,4226,5.423,4227,5.423,4228,5.423,4229,8.658,4230,5.423,4231,8.12,4232,8.12,4233,8.12,4234,7.222,4235,5.423,4236,5.423,4237,5.423,4238,5.423,4239,5.423,4240,5.423,4241,5.423,4242,5.423,4243,5.423,4244,4.859,4245,5.423,4246,4.859,4247,5.423,4248,5.423,4249,5.423,4250,5.423,4251,5.423,4252,5.423,4253,5.423,4254,5.423,4255,5.423,4256,7.222,4257,5.423,4258,5.423,4259,5.423,4260,5.423,4261,5.423,4262,5.423,4263,5.423,4264,5.423,4265,5.423,4266,7.222,4267,5.423,4268,5.423,4269,5.423,4270,5.423,4271,5.423,4272,5.423,4273,5.423,4274,5.423,4275,5.423,4276,5.423,4277,5.423,4278,7.222,4279,5.423,4280,8.658,4281,7.222,4282,7.222,4283,5.423]],["title/modules.html",[130,2.577]],["body/modules.html",[32,0.004,126,0.004,127,0.004,129,4.89,130,2.355,139,4.633,389,4.89,394,4.633,395,3.58,399,8.536,1578,4.89,1582,4.633,2465,4.89,2469,4.633,2535,4.89,2539,4.633,2600,4.89,2604,4.633,3194,4.89,3198,4.633,3502,4.89,3506,4.633,3584,4.89,3588,4.633,3652,4.89,3656,4.633,3718,4.89,3721,4.633,3805,4.89,3809,4.633,3986,4.89,3990,4.633,4131,4.89,4135,4.633,4284,10.316,4285,10.316,4286,10.547,4287,10.282,4288,10.282]],["title/overview.html",[4289,6.176]],["body/overview.html",[1,2.797,2,1.688,32,0.005,47,0.202,59,1.303,66,3.633,68,2.746,70,3.565,73,3.633,77,3.633,79,2.797,81,2.797,83,2.797,85,3.565,88,2.797,90,3.565,92,3.565,94,3.633,96,3.633,97,2.85,99,3.633,101,2.797,103,2.797,107,2.746,109,3.633,111,3.633,112,2.85,114,2.797,116,1.566,117,3.565,119,3.565,121,3.565,123,3.565,126,0.003,127,0.003,128,1.172,129,6.441,130,1.435,131,1.834,132,1.965,133,1.965,134,1.722,135,1.485,136,3.439,137,3.439,138,3.439,139,4.952,140,2.9,141,1.919,142,1.965,158,1.919,164,3.439,333,2.98,389,6.982,390,3.439,391,3.439,392,3.439,393,3.439,394,4.952,395,5.957,576,1.344,874,2.517,886,2.693,905,0.538,1078,2.693,1578,6.441,1579,3.439,1580,3.439,1581,3.439,1582,4.952,2465,6.839,2466,3.439,2467,3.439,2468,3.439,2469,4.952,2535,6.441,2536,3.439,2537,3.439,2538,3.439,2539,4.952,2600,6.839,2601,3.439,2602,3.439,2603,3.439,2604,4.952,3194,6.839,3195,3.439,3196,3.439,3197,3.439,3198,4.952,3208,6.02,3502,6.839,3503,3.439,3504,3.439,3505,3.439,3506,4.952,3584,6.839,3585,3.439,3586,3.439,3587,3.439,3588,4.952,3652,6.839,3653,3.439,3654,3.439,3655,3.439,3656,4.952,3662,3.439,3663,3.439,3664,3.439,3718,5.771,3719,3.439,3720,3.439,3721,4.952,3805,6.441,3806,3.439,3807,3.439,3808,3.439,3809,4.952,3986,6.839,3987,3.439,3988,3.439,3989,3.439,3990,4.952,4131,6.441,4132,3.439,4133,3.439,4134,3.439,4135,4.952,4289,3.439,4290,3.838,4291,3.838,4292,3.838,4293,3.838]],["title/properties.html",[21,0.704,4159,3.791]],["body/properties.html",[21,0.918,32,0.005,68,3.234,126,0.005,127,0.005,1557,6.56,1792,7.569,4294,7.928,4295,7.928,4296,7.928,4297,7.928,4298,7.928,4299,7.928]],["title/routes.html",[158,3.446]],["body/routes.html",[32,0.005,126,0.005,127,0.005,158,4.09]],["title/miscellaneous/typealiases.html",[4187,2.968,4300,6.082]],["body/miscellaneous/typealiases.html",[20,0.463,32,0.005,34,0.474,126,0.005,127,0.005,634,5.226,1432,3.822,1434,5.552,1435,4.682,4187,5.611,4301,7.999,4302,7.999]],["title/miscellaneous/variables.html",[4187,2.968,4303,5.449]],["body/miscellaneous/variables.html",[20,0.152,32,0.005,34,0.523,56,1.109,74,0.95,86,1.551,92,1.089,95,1.27,110,1.016,126,0.002,127,0.002,161,0.591,173,1.636,175,2.348,186,0.946,187,3.321,222,3.635,244,2.302,245,3.685,249,1.478,259,2.16,263,3.405,296,1.49,300,1.449,304,4.257,305,3.491,308,1.604,403,3.488,406,3.78,407,3.78,408,3.78,409,3.78,410,3.78,411,3.78,412,3.78,413,3.78,414,3.78,415,3.78,416,3.78,417,3.78,418,3.78,419,3.78,420,3.78,421,3.78,422,3.78,423,3.78,424,3.78,425,3.78,426,3.78,428,4.744,429,5.96,430,3.491,431,4.744,432,4.744,433,5.96,434,3.491,435,4.744,436,4.744,437,5.96,439,4.382,440,4.382,441,4.382,443,8.181,444,5.96,445,4.744,446,4.744,447,5.14,448,4.744,449,4.744,450,4.744,451,4.744,455,0.976,463,1.342,473,5.438,487,2.729,490,3.425,491,3.78,493,3.78,495,3.491,497,2.837,501,4.744,509,3.099,522,2.348,532,3.78,551,1.928,585,2.035,591,1.696,701,3.78,702,2.398,735,3.275,786,1.632,787,2.634,790,3.665,796,2.634,797,3.103,798,2.548,800,1.253,831,2.548,870,4.418,893,3.78,936,2.443,1012,2.213,1278,4.382,1379,3.78,1388,1.928,1533,2.169,1693,3.491,1717,1.762,1719,1.762,1722,1.762,1723,1.762,2061,4.852,2098,3.103,2229,1.839,2300,4.744,2488,1.839,2574,2.169,2585,2.169,2882,3.491,2902,3.78,2908,4.744,3217,2.348,3218,2.169,3227,3.78,3239,2.348,3474,2.348,3496,3.78,3822,2.348,3831,3.78,4187,1.839,4190,8.43,4191,6.369,4193,6.369,4198,2.348,4201,7.189,4244,2.348,4246,2.348,4303,2.348,4304,10.106,4305,2.621,4306,4.219,4307,4.219,4308,4.219,4309,2.621,4310,2.621,4311,5.295,4312,6.652,4313,5.295,4314,6.652,4315,2.621,4316,5.295,4317,5.295,4318,2.621,4319,2.621,4320,2.621,4321,2.621,4322,2.621,4323,2.621,4324,2.621,4325,2.621,4326,2.621,4327,2.621,4328,2.621,4329,2.621,4330,2.621,4331,2.621,4332,2.621,4333,2.621,4334,2.621,4335,2.621,4336,2.621,4337,2.621,4338,2.621,4339,2.621,4340,2.621,4341,2.621,4342,2.621,4343,2.621,4344,2.621,4345,2.621,4346,2.621,4347,2.621,4348,2.621,4349,2.621,4350,2.621,4351,2.621,4352,2.621,4353,2.621,4354,2.621,4355,2.621,4356,2.621,4357,2.621,4358,2.621,4359,2.621,4360,2.621,4361,2.621,4362,2.621,4363,2.621,4364,4.219,4365,4.219,4366,2.621,4367,2.621,4368,2.621,4369,2.621,4370,4.219,4371,4.219,4372,7.773,4373,2.621,4374,2.621,4375,2.621,4376,2.621,4377,2.621,4378,4.219,4379,2.621,4380,2.621,4381,2.621,4382,2.621,4383,2.621,4384,2.621,4385,2.621,4386,2.621,4387,2.621,4388,2.621,4389,2.621,4390,2.621,4391,2.621,4392,2.621,4393,2.621,4394,2.621,4395,2.621,4396,2.621,4397,2.621,4398,2.621,4399,2.621,4400,2.621,4401,2.621,4402,2.621,4403,2.621,4404,2.621,4405,2.621,4406,2.621,4407,2.621,4408,2.621,4409,2.621,4410,2.621,4411,2.621,4412,2.621,4413,4.219,4414,2.621,4415,2.621,4416,2.621]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":822,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"directives/FilterByTeamDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["0.0.1",{"_index":4295,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":3755,"title":{},"body":{"components/StatisticsPage.html":{}}}],["0.1",{"_index":1530,"title":{},"body":{"directives/HighLightDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["0.14.2",{"_index":4186,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":1817,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["0.151",{"_index":2462,"title":{},"body":{"components/LeaguesPage.html":{}}}],["0.192",{"_index":3756,"title":{},"body":{"components/StatisticsPage.html":{}}}],["0.199",{"_index":2460,"title":{},"body":{"components/LeaguesPage.html":{}}}],["0.2",{"_index":1819,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["0.2s",{"_index":1881,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{}}}],["0.3",{"_index":1504,"title":{},"body":{"directives/HighLightDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["0.38.1",{"_index":4175,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1814,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{}}}],["0.5",{"_index":1184,"title":{},"body":{"directives/DragDropDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{}}}],["0.5fr",{"_index":3776,"title":{},"body":{"components/StatisticsPage.html":{}}}],["0.6",{"_index":1841,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["0.85rem",{"_index":1842,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["00ff88",{"_index":2407,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["00ffcc",{"_index":2418,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["01",{"_index":2853,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["01t${match.hour}`).tolocaletimestring(this.currentlang",{"_index":3024,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["01t${this.match.hour}`).tolocaletimestring",{"_index":2854,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["0c4a2a",{"_index":3779,"title":{},"body":{"components/StatisticsPage.html":{}}}],["0c4a2a00",{"_index":3770,"title":{},"body":{"components/StatisticsPage.html":{}}}],["0px",{"_index":2030,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["1",{"_index":874,"title":{"interfaces/Data-1.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/UserRaw-1.html":{}},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"directives/DragDropDirective.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/StatisticsPage.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamSelectableComponent.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["1).tostring().padstart(2",{"_index":3365,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["1)[0",{"_index":2398,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["1.1rem",{"_index":3781,"title":{},"body":{"components/StatisticsPage.html":{}}}],["1.25rem",{"_index":1830,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["1.2rem",{"_index":3762,"title":{},"body":{"components/StatisticsPage.html":{}}}],["1.3rem",{"_index":2442,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["1.5rem",{"_index":3760,"title":{},"body":{"components/StatisticsPage.html":{}}}],["10",{"_index":3058,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["100",{"_index":1789,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["1000",{"_index":2929,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["100px",{"_index":3778,"title":{},"body":{"components/StatisticsPage.html":{}}}],["101",{"_index":4292,"title":{},"body":{"overview.html":{}}}],["1024px",{"_index":2456,"title":{},"body":{"components/LeaguesPage.html":{}}}],["1036668813891",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["10b981",{"_index":3790,"title":{},"body":{"components/StatisticsPage.html":{}}}],["10px",{"_index":2004,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["11.1.0",{"_index":4178,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":3069,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["12.0.0",{"_index":4182,"title":{},"body":{"dependencies.html":{}}}],["120px",{"_index":3798,"title":{},"body":{"components/StatisticsPage.html":{}}}],["128",{"_index":1807,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["12px",{"_index":1854,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["13",{"_index":3056,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["131313",{"_index":2413,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["14px",{"_index":2020,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["150",{"_index":3795,"title":{},"body":{"components/StatisticsPage.html":{}}}],["150px",{"_index":1857,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{}}}],["15px",{"_index":2017,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["16",{"_index":2696,"title":{},"body":{"components/MatchCreateComponent.html":{},"index.html":{}}}],["16.0.0",{"_index":4177,"title":{},"body":{"dependencies.html":{}}}],["16.0.3",{"_index":4176,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":1991,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["18",{"_index":3055,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["18.0.0",{"_index":4161,"title":{},"body":{"dependencies.html":{}}}],["18px",{"_index":2008,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["193",{"_index":2463,"title":{},"body":{"components/LeaguesPage.html":{}}}],["1:1036668813891:web:1af654984665fdaae78af6",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["1a1a1a",{"_index":1849,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["1px",{"_index":1825,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["1rem",{"_index":1803,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/StatisticsPage.html":{}}}],["2",{"_index":1009,"title":{"interfaces/Data-2.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-2.html":{},"interfaces/TeamRaw-2.html":{}},"body":{"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["2.3.0",{"_index":4184,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":3761,"title":{},"body":{"components/StatisticsPage.html":{}}}],["20",{"_index":4127,"title":{},"body":{"components/UsersPage.html":{}}}],["200px",{"_index":3801,"title":{},"body":{"components/StatisticsPage.html":{}}}],["20px",{"_index":2018,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["216",{"_index":1502,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["218838",{"_index":2029,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["230",{"_index":1503,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["235",{"_index":3787,"title":{},"body":{"components/StatisticsPage.html":{}}}],["24px",{"_index":1821,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["25",{"_index":886,"title":{},"body":{"injectables/BaseService.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/TeamSelectableComponent.html":{},"overview.html":{}}}],["2500",{"_index":4118,"title":{},"body":{"components/UsersPage.html":{}}}],["250px",{"_index":2436,"title":{},"body":{"components/LeaguesPage.html":{}}}],["255",{"_index":1529,"title":{},"body":{"directives/HighLightDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["28a745",{"_index":2026,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["28px",{"_index":2447,"title":{},"body":{"components/LeaguesPage.html":{}}}],["29",{"_index":4290,"title":{},"body":{"overview.html":{}}}],["2px",{"_index":1187,"title":{},"body":{"directives/DragDropDirective.html":{},"components/LeagueSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["2rem",{"_index":3804,"title":{},"body":{"components/StatisticsPage.html":{}}}],["3",{"_index":1056,"title":{"interfaces/Data-3.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-3.html":{}},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["30",{"_index":3161,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["3000",{"_index":3562,"title":{},"body":{"components/ProfilePage.html":{},"components/UsersPage.html":{}}}],["300px",{"_index":2217,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["32px",{"_index":2455,"title":{},"body":{"components/LeaguesPage.html":{}}}],["349",{"_index":3064,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["35",{"_index":4291,"title":{},"body":{"overview.html":{}}}],["350px",{"_index":2742,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["355e38",{"_index":2002,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["39",{"_index":3061,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["3px",{"_index":1878,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["4",{"_index":1078,"title":{"interfaces/Data-4.html":{},"interfaces/Meta-4.html":{}},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"overview.html":{}}}],["42",{"_index":4293,"title":{},"body":{"overview.html":{}}}],["4caf50",{"_index":1189,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["4da841",{"_index":3766,"title":{},"body":{"components/StatisticsPage.html":{}}}],["4px",{"_index":1847,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["5",{"_index":3006,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["5.12.2",{"_index":4181,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1822,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["500",{"_index":1840,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["5050db",{"_index":2409,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["50px",{"_index":3782,"title":{},"body":{"components/StatisticsPage.html":{}}}],["545",{"_index":3063,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["55",{"_index":3788,"title":{},"body":{"components/StatisticsPage.html":{}}}],["56px",{"_index":2446,"title":{},"body":{"components/LeaguesPage.html":{}}}],["589e5c",{"_index":2230,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["5fr",{"_index":3769,"title":{},"body":{"components/StatisticsPage.html":{}}}],["5px",{"_index":2426,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["6",{"_index":3077,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["6.0.0",{"_index":4170,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":4165,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":4169,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4166,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2928,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["600",{"_index":2443,"title":{},"body":{"components/LeaguesPage.html":{}}}],["600px",{"_index":2024,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["61",{"_index":3060,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["64px",{"_index":2454,"title":{},"body":{"components/LeaguesPage.html":{}}}],["6px",{"_index":1875,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["7",{"_index":2459,"title":{},"body":{"components/LeaguesPage.html":{}}}],["7.0.0",{"_index":4180,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":4183,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2441,"title":{},"body":{"components/LeaguesPage.html":{}}}],["700",{"_index":3757,"title":{},"body":{"components/StatisticsPage.html":{}}}],["8.0.0",{"_index":4173,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2729,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["82",{"_index":3067,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["88",{"_index":3066,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["8px",{"_index":1809,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["90",{"_index":2741,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["95",{"_index":2751,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["_",{"_index":3522,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["__param",{"_index":3337,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["_authenticated",{"_index":580,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_authenticated:behaviorsubject",{"_index":625,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["_items",{"_index":833,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["_items:t",{"_index":844,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["_league",{"_index":1945,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["_league.id",{"_index":1955,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["_leagues",{"_index":2102,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["_leagues:behaviorsubject",{"_index":2170,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["_match",{"_index":2663,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["_match.id",{"_index":2676,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["_matches",{"_index":2913,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["_picture",{"_index":3228,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_player",{"_index":3318,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["_player.id",{"_index":3341,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["_ready",{"_index":581,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_ready:behaviorsubject",{"_index":629,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["_stats",{"_index":3115,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["_team",{"_index":3884,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["_team.id",{"_index":3893,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["_teams",{"_index":3944,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["_teams:behaviorsubject",{"_index":3959,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["_token",{"_index":1257,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["_user",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_user:behaviorsubject",{"_index":627,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":847,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["about'},{'name",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["about.me",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page",{"_index":153,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["about.title",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["aboutpagemodule",{"_index":129,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules.html":{},"overview.html":{}}}],["aboutpageroutingmodule",{"_index":139,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["absolute",{"_index":1844,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["abstract",{"_index":587,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{}}}],["abstractcontrol",{"_index":4214,"title":{},"body":{"miscellaneous/functions.html":{}}}],["acceder",{"_index":3173,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["accent",{"_index":2410,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["acceso",{"_index":4246,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":1926,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["action",{"_index":2445,"title":{},"body":{"components/LeaguesPage.html":{}}}],["actionsheet",{"_index":2812,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["actionsheet.present",{"_index":2828,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["actionsheetcontroller",{"_index":2798,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["actionsheetctrl",{"_index":2800,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["activated",{"_index":1798,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["activatedroute",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams-1.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{}}}],["actual",{"_index":3239,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["actualiza",{"_index":2402,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["actualizado",{"_index":3012,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"components/StatisticsPage.html":{}}}],["actualizando",{"_index":3014,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["actualizar",{"_index":2327,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/UsersPage.html":{}}}],["add",{"_index":646,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["add(entity",{"_index":658,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["adddoc",{"_index":687,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["added",{"_index":909,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["additional",{"_index":2950,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["adelante",{"_index":1426,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/Users.html":{}}}],["adicional",{"_index":3488,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["adjust",{"_index":2031,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["admin",{"_index":196,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/MatchWithTeams.html":{},"components/UsersPage.html":{}}}],["adminguard",{"_index":165,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{}}}],["administrar",{"_index":4228,"title":{},"body":{"index.html":{}}}],["age",{"_index":4024,"title":{},"body":{"interfaces/UserRaw.html":{}}}],["age:number",{"_index":4028,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["agrega",{"_index":4232,"title":{},"body":{"index.html":{}}}],["agregar",{"_index":3467,"title":{},"body":{"components/PlayerModalComponent.html":{},"index.html":{}}}],["ahora",{"_index":4117,"title":{},"body":{"components/UsersPage.html":{}}}],["aizasyaypmzsz9vgg0dusgw1jlbzgus3uns86tg",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["ajusta",{"_index":1858,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["ajustes",{"_index":2750,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["al",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"directives/HighLightDirective.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["aleatorio",{"_index":3002,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["alert",{"_index":2380,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["alert(sharetext",{"_index":2878,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["alert.present",{"_index":2389,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["alertcontroller",{"_index":2266,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["alertctrl",{"_index":2265,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["algo",{"_index":1537,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["aliases",{"_index":4301,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1836,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["alineaciones",{"_index":2816,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["allstatsresult",{"_index":3120,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["allstatsresult.data",{"_index":3123,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["almacenamiento",{"_index":4272,"title":{},"body":{"index.html":{}}}],["alonso",{"_index":53,"title":{},"body":{"components/AboutPage.html":{}}}],["alrededor",{"_index":3469,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["alternativetext",{"_index":1438,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["altura",{"_index":1859,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["amarillas",{"_index":3071,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["ancho",{"_index":2731,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["angular",{"_index":3225,"title":{},"body":{"components/PictureSelectableComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":4160,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":147,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"directives/TimeDirectiveDirective.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{}}}],["angular/common';import",{"_index":3336,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["angular/common/http",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"modules/LoginPageModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["angular/compiler",{"_index":4162,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":149,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/MatchCreateComponent.html":{},"modules/MatchesPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"modules/PlayersPageModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":160,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{},"dependencies.html":{}}}],["animada",{"_index":4263,"title":{},"body":{"index.html":{}}}],["animationitem",{"_index":3706,"title":{},"body":{"components/SplashPage.html":{}}}],["animationoptions",{"_index":3708,"title":{},"body":{"components/SplashPage.html":{}}}],["anonymous",{"_index":1405,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["antes",{"_index":3171,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["any).data",{"_index":2516,"title":{},"body":{"components/LineupsPage.html":{}}}],["any):league",{"_index":2059,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{}}}],["any):player",{"_index":3431,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["any):team",{"_index":3926,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["ape1",{"_index":3403,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["ape1:data.firstsurname",{"_index":3410,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["ape2",{"_index":3404,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["ape2:data.secondsurname",{"_index":3411,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["apellidos",{"_index":4249,"title":{},"body":{"index.html":{}}}],["api",{"_index":808,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["api_url_token",{"_index":796,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["apile",{"_index":2430,"title":{},"body":{"components/LeaguesPage.html":{}}}],["apiurl",{"_index":787,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["aplicación",{"_index":4220,"title":{},"body":{"index.html":{}}}],["aplique",{"_index":3489,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"index.html":{}}}],["app.component",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":66,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["appdragdrop",{"_index":1130,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["appdragdrop]'},{'name",{"_index":118,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["appfilterbyteam",{"_index":1203,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["appfilterbyteam]'},{'name",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["appformatdate",{"_index":124,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{}}}],["apphighlight",{"_index":1491,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["apphighlight]'},{'name",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["appid",{"_index":522,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["applied",{"_index":746,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["appmodule",{"_index":389,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":4408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":394,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqu",{"_index":2335,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["arab",{"_index":1738,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["arguments",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{}}}],["arrastrando",{"_index":1536,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["array.isarray(allstatsresult",{"_index":3122,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["array.isarray(data",{"_index":4108,"title":{},"body":{"components/UsersPage.html":{}}}],["array.isarray(res",{"_index":4149,"title":{},"body":{"injectables/UsersService.html":{}}}],["asegura",{"_index":2429,"title":{},"body":{"components/LeaguesPage.html":{},"components/PlayerModalComponent.html":{}}}],["asegurar",{"_index":3093,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{}}}],["asigna",{"_index":3368,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["assets/i18n",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/img/campo",{"_index":2558,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["assets/img/imgcard2.jpg",{"_index":2292,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["assets/img/player1.jpg",{"_index":3456,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["assets/lotties/lottie.json",{"_index":3709,"title":{},"body":{"components/SplashPage.html":{}}}],["async",{"_index":650,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["async)?.email",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["atractiva",{"_index":3020,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["attributes",{"_index":917,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/StrapiMedia.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.birthdate",{"_index":1002,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["attributes.dorsal",{"_index":1004,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["attributes.firstsurname",{"_index":1000,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["attributes.league",{"_index":1075,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["attributes.league?.data?.id.tostring",{"_index":1076,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["attributes.name",{"_index":956,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.nationality",{"_index":1003,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["attributes.nmatches",{"_index":1074,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["attributes.numberofplayers",{"_index":1072,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["attributes.picture",{"_index":1114,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.picture?.data?.attributes?.formats?.large?.url",{"_index":1117,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.picture?.data?.attributes?.formats?.medium?.url",{"_index":1119,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.picture?.data?.attributes?.formats?.small?.url",{"_index":1121,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.picture?.data?.attributes?.formats?.thumbnail?.url",{"_index":1123,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.picture?.data?.attributes?.url",{"_index":1115,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.position",{"_index":1005,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["attributes.pts",{"_index":1073,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["attributes.role",{"_index":1125,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.secondsurname",{"_index":1001,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["attributes.surname",{"_index":1111,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.team",{"_index":1006,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["attributes.team?.data?.id.tostring",{"_index":1007,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["attributes.user",{"_index":1112,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes.user?.data?.id.tostring",{"_index":1113,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["attributes:strapimediadata",{"_index":1437,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["autenticación",{"_index":4244,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["autenticado",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseMediaService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":786,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/variables.html":{}}}],["auth:iauthentication",{"_index":4381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_mapping_token",{"_index":1278,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["auth_me_api_url_token",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["auth_sign_in_api_url_token",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["auth_sign_up_api_url_token",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["auth_token",{"_index":797,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"miscellaneous/variables.html":{}}}],["authdomain",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticated",{"_index":582,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authenticated$:observable",{"_index":626,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.interface",{"_index":802,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["authentication.interface.ts",{"_index":1673,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["authentication.interface.ts:5",{"_index":1674,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["authentication.service",{"_index":182,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UsersService.html":{}}}],["authentication.service.ts",{"_index":578,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:12",{"_index":607,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:13",{"_index":612,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:15",{"_index":610,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:16",{"_index":618,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:17",{"_index":608,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:18",{"_index":617,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:19",{"_index":613,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:20",{"_index":615,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:22",{"_index":596,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:24",{"_index":594,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:30",{"_index":597,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:31",{"_index":600,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:32",{"_index":604,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:33",{"_index":602,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:34",{"_index":598,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:45",{"_index":3825,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:82",{"_index":1261,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authenticationservicefactory",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["authmapping",{"_index":595,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authmapping:iauthmapping",{"_index":632,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authmappingfactory",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":4298,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1027,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["authpayload",{"_index":601,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authservice",{"_index":175,"title":{},"body":{"guards/AdminGuard.html":{},"miscellaneous/variables.html":{}}}],["authservice.authenticated",{"_index":4398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.ready$.pipe",{"_index":4391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authsvc",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/UsersService.html":{}}}],["authsvc.user",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["authsvc:baseauthenticationservice",{"_index":2567,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["authuser",{"_index":190,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/UsersService.html":{}}}],["authuser?.id",{"_index":4155,"title":{},"body":{"injectables/UsersService.html":{}}}],["auto",{"_index":1864,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["available",{"_index":4288,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":3479,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["await",{"_index":191,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["añadir",{"_index":743,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["b",{"_index":3180,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["backdrop",{"_index":2423,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["backend:string",{"_index":4364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend_token",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":1795,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["backgroundcolor",{"_index":1548,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["bar",{"_index":4172,"title":{},"body":{"dependencies.html":{}}}],["barra",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{}}}],["basados",{"_index":1997,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{}}}],["base",{"_index":807,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["base.model",{"_index":1913,"title":{},"body":{"interfaces/League.html":{},"interfaces/Match.html":{},"interfaces/MatchStatistics.html":{},"interfaces/Player.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/Users.html":{}}}],["base64response",{"_index":2360,"title":{},"body":{"components/LeaguesPage.html":{},"components/ProfilePage.html":{}}}],["base64response.blob",{"_index":2362,"title":{},"body":{"components/LeaguesPage.html":{},"components/ProfilePage.html":{}}}],["baseauthenticationservice",{"_index":222,"title":{"injectables/BaseAuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["baseauthenticationservice:12",{"_index":1268,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:13",{"_index":1271,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:15",{"_index":1270,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:16",{"_index":1275,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:17",{"_index":1269,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:18",{"_index":1274,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:19",{"_index":1272,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:20",{"_index":1273,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:22",{"_index":1267,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:42",{"_index":1260,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:46",{"_index":1263,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:49",{"_index":3824,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:54",{"_index":3827,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:55",{"_index":1266,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:64",{"_index":1264,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:66",{"_index":3829,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:72",{"_index":1262,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:77",{"_index":3828,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:85",{"_index":3826,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["basemediaservice",{"_index":463,"title":{"injectables/BaseMediaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LeaguesPage.html":{},"interfaces/Medium.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/variables.html":{}}}],["basemediaservice:116",{"_index":3863,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["basemediaservice:27",{"_index":1381,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["baserepositoryfirebaseservice",{"_index":640,"title":{"injectables/BaseRepositoryFirebaseService.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["baserepositoryhttpservice",{"_index":783,"title":{"injectables/BaseRepositoryHttpService.html":{}},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:35",{"_index":1699,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:39",{"_index":1696,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:47",{"_index":1698,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:59",{"_index":3867,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:62",{"_index":1695,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:69",{"_index":1697,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:81",{"_index":3865,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:89",{"_index":3869,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserepositoryhttpservice:97",{"_index":3866,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["baserespositorylocalstorageservice",{"_index":830,"title":{"injectables/BaseRespositoryLocalStorageService.html":{}},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["baseservice",{"_index":876,"title":{"injectables/BaseService.html":{}},"body":{"injectables/BaseService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["baseservice:18",{"_index":2238,"title":{},"body":{"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["baseservice:25",{"_index":2239,"title":{},"body":{"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["baseservice:29",{"_index":2236,"title":{},"body":{"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["baseservice:33",{"_index":2240,"title":{},"body":{"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["baseservice:37",{"_index":2237,"title":{},"body":{"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["basestats",{"_index":3109,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["basevalue",{"_index":3154,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["basevalue.includes",{"_index":3155,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["bearer",{"_index":1028,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["behavior",{"_index":4023,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["behaviorsubject",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/PictureSelectableComponent.html":{},"injectables/StrapiAuthenticationService.html":{},"components/TeamSelectableComponent.html":{}}}],["behaviorsubject(false",{"_index":606,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["behaviorsubject(undefined",{"_index":609,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["better",{"_index":2033,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["between",{"_index":2007,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["bg",{"_index":2415,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["birthdate",{"_index":973,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Data-4.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["birthdate:data.fechnacimiento",{"_index":3427,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["birthdate:string",{"_index":3690,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{}}}],["blob",{"_index":637,"title":{},"body":{"injectables/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LeaguesPage.html":{},"interfaces/Medium.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["blob.type",{"_index":1401,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["block",{"_index":1224,"title":{},"body":{"directives/FilterByTeamDirective.html":{},"components/PlayerModalComponent.html":{}}}],["blocked",{"_index":1089,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/GroupRaw.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["blur(10px",{"_index":2424,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["body",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{}}}],["body.classlist.add('dark",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["body.classlist.remove('dark",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["bold",{"_index":2009,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["boolean",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Data-4.html":{},"interfaces/GroupRaw.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["bootstrap",{"_index":133,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{},"overview.html":{}}}],["borde",{"_index":1545,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["border",{"_index":1549,"title":{},"body":{"directives/HighLightDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["bordes",{"_index":3472,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["bottom",{"_index":1992,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/UsersPage.html":{}}}],["botón",{"_index":2725,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["box",{"_index":1852,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["break",{"_index":938,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["brillante",{"_index":3791,"title":{},"body":{"components/StatisticsPage.html":{}}}],["browse",{"_index":4286,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browserlang",{"_index":1901,"title":{},"body":{"injectables/LanguageService.html":{}}}],["browsermodule",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["button:hover",{"_index":2013,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["button[type=\"submit",{"_index":2025,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["button[type=\"submit\"]:disabled",{"_index":2027,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["button[type=\"submit\"]:not(:disabled):hover",{"_index":2028,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["buttons",{"_index":2012,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["cada",{"_index":2924,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["cadena",{"_index":737,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["calendario",{"_index":2739,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["callback",{"_index":4210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cambia",{"_index":3238,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["cambiar",{"_index":2833,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["cambio",{"_index":3241,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["cambios",{"_index":3270,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["campo",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{}}}],["canactivate",{"_index":168,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":4388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":2384,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["capacitor",{"_index":2810,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"index.html":{}}}],["capacitor.config.ts",{"_index":4308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capacitor.isnativeplatform",{"_index":2873,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["capacitor/app",{"_index":4164,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":2811,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"dependencies.html":{}}}],["capacitor/haptics",{"_index":4167,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":4168,"title":{},"body":{"dependencies.html":{}}}],["capacitor/share",{"_index":2809,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"dependencies.html":{}}}],["capacitor/status",{"_index":4171,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":4406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caption",{"_index":1439,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["características",{"_index":4230,"title":{},"body":{"index.html":{}}}],["card",{"_index":2414,"title":{},"body":{"components/LeaguesPage.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{}}}],["card.cta",{"_index":1575,"title":{},"body":{"components/HomePage.html":{}}}],["card.description",{"_index":1574,"title":{},"body":{"components/HomePage.html":{}}}],["card.title",{"_index":1573,"title":{},"body":{"components/HomePage.html":{}}}],["cards",{"_index":1553,"title":{},"body":{"components/HomePage.html":{}}}],["carga",{"_index":3800,"title":{},"body":{"components/StatisticsPage.html":{},"index.html":{}}}],["cargados",{"_index":2330,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["cargando",{"_index":4111,"title":{},"body":{"components/UsersPage.html":{}}}],["cargar",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"index.html":{}}}],["case",{"_index":936,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"directives/TimeDirectiveDirective.html":{}}}],["catcherror",{"_index":2906,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["cause",{"_index":3135,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["ccc",{"_index":2019,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["center",{"_index":1837,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["centra",{"_index":2432,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{}}}],["centrarlo",{"_index":2732,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["centro",{"_index":2727,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{}}}],["ch",{"_index":1732,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["change.data",{"_index":2320,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["change.doc.data",{"_index":1337,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["change.doc.id",{"_index":1335,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["change.id",{"_index":2318,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["change.type",{"_index":1334,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["changedata",{"_index":1333,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["changedata.data",{"_index":1336,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["changedvalues",{"_index":3566,"title":{},"body":{"components/ProfilePage.html":{}}}],["changedvalues.picture",{"_index":3573,"title":{},"body":{"components/ProfilePage.html":{}}}],["changedvalues[key",{"_index":3570,"title":{},"body":{"components/ProfilePage.html":{}}}],["changelanguage",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["changelanguage(lang",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["changepicture",{"_index":3230,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":3236,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture:string",{"_index":3282,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["chart",{"_index":2821,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["check",{"_index":1884,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["chevron",{"_index":1831,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["chinese",{"_index":1733,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["chrome/safari/edge",{"_index":2228,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["cierra",{"_index":3242,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["claro",{"_index":3772,"title":{},"body":{"components/StatisticsPage.html":{}}}],["class",{"_index":47,"title":{"classes/StrapiMediaService.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["class=\"bg",{"_index":4124,"title":{},"body":{"components/UsersPage.html":{}}}],["classes",{"_index":3859,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["clear",{"_index":2747,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["clearsearch",{"_index":2106,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["clearsearch(input",{"_index":2117,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["clearsearch(input:ioninput",{"_index":2208,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["cli",{"_index":4278,"title":{},"body":{"index.html":{}}}],["clip",{"_index":3758,"title":{},"body":{"components/StatisticsPage.html":{}}}],["close",{"_index":3231,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["closemodal",{"_index":3453,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":136,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":137,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":138,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":1579,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1580,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":1581,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_leaguespagemodule",{"_index":2466,"title":{},"body":{"modules/LeaguesPageModule.html":{},"overview.html":{}}}],["cluster_leaguespagemodule_declarations",{"_index":2468,"title":{},"body":{"modules/LeaguesPageModule.html":{},"overview.html":{}}}],["cluster_leaguespagemodule_imports",{"_index":2467,"title":{},"body":{"modules/LeaguesPageModule.html":{},"overview.html":{}}}],["cluster_lineupspagemodule",{"_index":2536,"title":{},"body":{"modules/LineupsPageModule.html":{},"overview.html":{}}}],["cluster_lineupspagemodule_declarations",{"_index":2538,"title":{},"body":{"modules/LineupsPageModule.html":{},"overview.html":{}}}],["cluster_lineupspagemodule_imports",{"_index":2537,"title":{},"body":{"modules/LineupsPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule",{"_index":2601,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":2602,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_imports",{"_index":2603,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_matchespagemodule",{"_index":3195,"title":{},"body":{"modules/MatchesPageModule.html":{},"overview.html":{}}}],["cluster_matchespagemodule_declarations",{"_index":3196,"title":{},"body":{"modules/MatchesPageModule.html":{},"overview.html":{}}}],["cluster_matchespagemodule_imports",{"_index":3197,"title":{},"body":{"modules/MatchesPageModule.html":{},"overview.html":{}}}],["cluster_playerspagemodule",{"_index":3503,"title":{},"body":{"modules/PlayersPageModule.html":{},"overview.html":{}}}],["cluster_playerspagemodule_declarations",{"_index":3504,"title":{},"body":{"modules/PlayersPageModule.html":{},"overview.html":{}}}],["cluster_playerspagemodule_imports",{"_index":3505,"title":{},"body":{"modules/PlayersPageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule",{"_index":3585,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":3587,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_imports",{"_index":3586,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule",{"_index":3653,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":3654,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_imports",{"_index":3655,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":3662,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":3663,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":3664,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_splashpagemodule",{"_index":3719,"title":{},"body":{"modules/SplashPageModule.html":{},"overview.html":{}}}],["cluster_splashpagemodule_imports",{"_index":3720,"title":{},"body":{"modules/SplashPageModule.html":{},"overview.html":{}}}],["cluster_statisticspagemodule",{"_index":3806,"title":{},"body":{"modules/StatisticsPageModule.html":{},"overview.html":{}}}],["cluster_statisticspagemodule_declarations",{"_index":3808,"title":{},"body":{"modules/StatisticsPageModule.html":{},"overview.html":{}}}],["cluster_statisticspagemodule_imports",{"_index":3807,"title":{},"body":{"modules/StatisticsPageModule.html":{},"overview.html":{}}}],["cluster_teamspagemodule",{"_index":3987,"title":{},"body":{"modules/TeamsPageModule.html":{},"overview.html":{}}}],["cluster_teamspagemodule_declarations",{"_index":3989,"title":{},"body":{"modules/TeamsPageModule.html":{},"overview.html":{}}}],["cluster_teamspagemodule_imports",{"_index":3988,"title":{},"body":{"modules/TeamsPageModule.html":{},"overview.html":{}}}],["cluster_userspagemodule",{"_index":4132,"title":{},"body":{"modules/UsersPageModule.html":{},"overview.html":{}}}],["cluster_userspagemodule_declarations",{"_index":4134,"title":{},"body":{"modules/UsersPageModule.html":{},"overview.html":{}}}],["cluster_userspagemodule_imports",{"_index":4133,"title":{},"body":{"modules/UsersPageModule.html":{},"overview.html":{}}}],["cláusula",{"_index":744,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["cn",{"_index":1734,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["code",{"_index":848,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["coincidir",{"_index":4004,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["coja",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["col",{"_index":2422,"title":{},"body":{"components/LeaguesPage.html":{}}}],["collection",{"_index":683,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["collection(this.db",{"_index":715,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["collection_subscription_token",{"_index":4306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collectionchange",{"_index":904,"title":{"interfaces/CollectionChange.html":{}},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["collectionname",{"_index":654,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"miscellaneous/functions.html":{}}}],["collectionref",{"_index":644,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["collectionsubscriptiontoken",{"_index":4207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["color",{"_index":1513,"title":{},"body":{"directives/HighLightDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["column",{"_index":2016,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["columns",{"_index":3775,"title":{},"body":{"components/StatisticsPage.html":{}}}],["columns:5fr",{"_index":3768,"title":{},"body":{"components/StatisticsPage.html":{}}}],["combinelatest",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MatchWithTeams.html":{}}}],["comenzado",{"_index":3148,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["commonmodule",{"_index":146,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["como",{"_index":3096,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["compartir",{"_index":2823,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["compartirlos",{"_index":4257,"title":{},"body":{"index.html":{}}}],["compartirpartido",{"_index":2793,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["completamente",{"_index":1995,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{}}}],["completar",{"_index":3843,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["complete",{"_index":3842,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UsersPage.html":{},"modules/UsersPageRoutingModule.html":{}}}],["component:leaguecreatemodalcomponent",{"_index":2354,"title":{},"body":{"components/LeaguesPage.html":{}}}],["component:matchcreatecomponent",{"_index":2956,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["component_template",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["componente",{"_index":2835,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{}}}],["componentprops:(mode=='edit",{"_index":2355,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["components/language",{"_index":3676,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/league",{"_index":3671,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/match",{"_index":3675,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/picture",{"_index":3673,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/player",{"_index":3666,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/position",{"_index":3672,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/team",{"_index":3667,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":2375,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/StatisticsPage.html":{},"directives/TimeDirectiveDirective.html":{},"index.html":{}}}],["config",{"_index":4307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmar",{"_index":2849,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["confirmed",{"_index":1088,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/GroupRaw.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["confirmpassword",{"_index":3599,"title":{},"body":{"components/RegisterPage.html":{}}}],["considera",{"_index":3130,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["console.error('error",{"_index":2341,"title":{},"body":{"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{}}}],["console.error(`error",{"_index":1339,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["console.error(error",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["console.log('animación",{"_index":3714,"title":{},"body":{"components/SplashPage.html":{}}}],["console.log('auth",{"_index":4154,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('creando",{"_index":2373,"title":{},"body":{"components/LeaguesPage.html":{}}}],["console.log('db",{"_index":4157,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('favorite",{"_index":2338,"title":{},"body":{"components/LeaguesPage.html":{}}}],["console.log('formulario",{"_index":1981,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["console.log('input",{"_index":4012,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["console.log('query",{"_index":754,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["console.log('snapshot",{"_index":758,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["console.log(`filter",{"_index":745,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["console.log(`status",{"_index":3011,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["console.log(err",{"_index":2581,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["console.log(error",{"_index":3297,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["console.log(this.partidoid",{"_index":2839,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["console.log(this.user",{"_index":3551,"title":{},"body":{"components/ProfilePage.html":{}}}],["console.log(user.id",{"_index":3549,"title":{},"body":{"components/ProfilePage.html":{}}}],["const",{"_index":161,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"modules/HomePageRoutingModule.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/Small.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageRoutingModule.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"injectables/TeamService.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":720,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["constraints.push(startafter(lastdoc",{"_index":725,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["constraints.push(where(field",{"_index":749,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerMappingFirebase.html":{},"components/PlayerModalComponent.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamCreateModalComponent.html":{},"injectables/TeamMappingFirebase.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"injectables/UsersMappingFirebase.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(firebase_config_token",{"_index":2074,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["constructor(actionsheetctrl",{"_index":2797,"title":{},"body":{"components/MatchMenuComponent.html":{}}}],["constructor(authmapping",{"_index":592,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["constructor(authservice",{"_index":169,"title":{},"body":{"guards/AdminGuard.html":{}}}],["constructor(el",{"_index":1145,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"directives/TimeDirectiveDirective.html":{}}}],["constructor(fb",{"_index":1927,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["constructor(firebaseconfig",{"_index":653,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["constructor(http",{"_index":785,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["constructor(languageservice",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/LanguageSelectorComponent.html":{}}}],["constructor(leaguesvc",{"_index":2115,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["constructor(modalctrl",{"_index":3454,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["constructor(picturemodal",{"_index":3234,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":1175,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"injectables/LanguageService.html":{},"components/PlayerModalComponent.html":{},"directives/TimeDirectiveDirective.html":{}}}],["constructor(repository",{"_index":878,"title":{},"body":{"injectables/BaseService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["constructor(resource",{"_index":835,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["constructor(route",{"_index":2485,"title":{},"body":{"components/LineupsPage.html":{},"components/StatisticsPage.html":{}}}],["constructor(router",{"_index":3702,"title":{},"body":{"components/SplashPage.html":{}}}],["constructor(signinurl",{"_index":3820,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["constructor(teamsvc",{"_index":3950,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["constructor(translate",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"injectables/LanguageService.html":{}}}],["constructor(uploadurl",{"_index":3860,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["constructor(usersservice",{"_index":4098,"title":{},"body":{"components/UsersPage.html":{}}}],["constructor(usersvc",{"_index":2264,"title":{},"body":{"components/LeaguesPage.html":{}}}],["contactar",{"_index":4238,"title":{},"body":{"index.html":{}}}],["contacto",{"_index":4236,"title":{},"body":{"index.html":{}}}],["container",{"_index":1790,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["contenido",{"_index":1869,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{}}}],["content",{"_index":1834,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["contenttype",{"_index":1400,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["contraseña",{"_index":4250,"title":{},"body":{"index.html":{}}}],["contrast",{"_index":2744,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["control",{"_index":1971,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"miscellaneous/functions.html":{}}}],["control.value",{"_index":1975,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["control?.dirty",{"_index":1973,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["controlvalueaccessor",{"_index":1718,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{}}}],["convertir",{"_index":730,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["convierte",{"_index":3357,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["core/guards/admin.guard",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/models/teams.model",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["core/models/users.model",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["core/repositories/impl/league",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["core/repositories/impl/player",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["core/repositories/impl/team",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["core/repositories/impl/users",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["core/repositories/repository.factory",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["core/repositories/repository.tokens",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/base",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/impl/league.service",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/impl/match.service",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/matchstats.service",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/player.service",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/impl/team.service",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/impl/users.service",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/language.service",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["corner",{"_index":2035,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["cover",{"_index":1824,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{}}}],["creada",{"_index":3715,"title":{},"body":{"components/SplashPage.html":{}}}],["creador",{"_index":4239,"title":{},"body":{"index.html":{}}}],["crear",{"_index":750,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/MatchWithTeams.html":{}}}],["create",{"_index":75,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{}}}],["create'},{'name",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["create.component",{"_index":2909,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"modules/SharedModule.html":{}}}],["create.component.html",{"_index":2614,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.scss",{"_index":2613,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts",{"_index":2612,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:101",{"_index":2649,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:105",{"_index":2640,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:107",{"_index":2664,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:111",{"_index":2665,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:115",{"_index":2667,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:119",{"_index":2669,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:12",{"_index":2654,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:123",{"_index":2671,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:127",{"_index":2673,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:13",{"_index":2655,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:132",{"_index":2639,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:14",{"_index":2652,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:145",{"_index":2645,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:15",{"_index":2661,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:158",{"_index":2633,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:16",{"_index":2658,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:17",{"_index":2656,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:18",{"_index":2659,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:19",{"_index":2657,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:20",{"_index":2660,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:23",{"_index":2632,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:34",{"_index":2631,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:55",{"_index":2650,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:59",{"_index":2651,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:62",{"_index":2635,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:71",{"_index":2637,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:75",{"_index":2642,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:81",{"_index":2647,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:87",{"_index":2643,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:92",{"_index":2644,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create.component.ts:96",{"_index":2648,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["create/match",{"_index":2611,"title":{},"body":{"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"modules/SharedModule.html":{}}}],["createbaseauthmappingfactory",{"_index":4189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbaseauthmappingfactory(auth_mapping_token",{"_index":4375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaseauthmappingfactory(token",{"_index":4199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbasemappingfactory",{"_index":4191,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbasemappingfactory(token",{"_index":4202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbaserepositoryfactory",{"_index":4192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbaserepositoryfactory(league_repository_token",{"_index":4376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(match_repository_token",{"_index":4377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(match_stats_repository_token",{"_index":4379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(player_repository_token",{"_index":4384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(team_repository_token",{"_index":4385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(token",{"_index":4204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbaserepositoryfactory(user_repository_token",{"_index":4386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createcollectionsubscriptionfactory",{"_index":4193,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createcollectionsubscriptionfactory(collectionname",{"_index":4205,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":926,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["createdat?:string",{"_index":3204,"title":{},"body":{"interfaces/Model.html":{}}}],["createtranslateloader",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1281,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["cta",{"_index":1560,"title":{},"body":{"components/HomePage.html":{}}}],["cualquier",{"_index":3487,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["cuando",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/StatisticsPage.html":{}}}],["currentlang",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams-1.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{}}}],["currentlang:string",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams.html":{},"components/RegisterPage.html":{}}}],["currentleague",{"_index":2312,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["currentleague.findindex(p",{"_index":2316,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["currentleague.splice(removedindex",{"_index":2322,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["currentleague[index",{"_index":2319,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["currentuser",{"_index":2250,"title":{},"body":{"components/LeaguesPage.html":{}}}],["currentuserid",{"_index":2251,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["cursor",{"_index":1811,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["custom",{"_index":1793,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["custommetadata",{"_index":1402,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["customvalueaccessor",{"_index":4265,"title":{},"body":{"index.html":{}}}],["cómo",{"_index":2830,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["d",{"_index":2687,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["d.tolocaledatestring('es",{"_index":2689,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["d1d5db",{"_index":3797,"title":{},"body":{"components/StatisticsPage.html":{}}}],["danger",{"_index":4121,"title":{},"body":{"components/UsersPage.html":{}}}],["dark",{"_index":2412,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["dashed",{"_index":1188,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["data",{"_index":908,"title":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{}},"body":{"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"interfaces/IBaseMapping.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"components/StatisticsPage.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{}}}],["data.attributes",{"_index":952,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["data.birthdate",{"_index":981,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["data.data.attributes",{"_index":951,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["data.data.id",{"_index":953,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["data.day",{"_index":2766,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["data.dorsal",{"_index":983,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["data.email",{"_index":4066,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["data.firstsurname",{"_index":979,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["data.hour",{"_index":2767,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["data.id",{"_index":954,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["data.league",{"_index":3932,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["data.league?.id",{"_index":3928,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["data.league?number(data.league",{"_index":1065,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["data.leaguefav",{"_index":4080,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["data.leaguefav?.id",{"_index":4070,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["data.localteamid",{"_index":2776,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["data.localteamid?.id",{"_index":2771,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["data.map(item",{"_index":2077,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["data.matchid",{"_index":2896,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["data.matchid?.id",{"_index":2894,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["data.name",{"_index":978,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingFirebase.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"injectables/UsersMappingFirebase.html":{}}}],["data.nationality",{"_index":982,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["data.nmatches",{"_index":1064,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{}}}],["data.numberofplayers",{"_index":1062,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["data.picture",{"_index":2079,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["data.picture?.url",{"_index":2083,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["data.place",{"_index":2769,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["data.playerfav",{"_index":4074,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["data.playerfav?.id",{"_index":4068,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["data.position",{"_index":984,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["data.pts",{"_index":1063,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{}}}],["data.result",{"_index":2768,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["data.role",{"_index":4067,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["data.secondsurname",{"_index":3434,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["data.stats",{"_index":2895,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["data.status",{"_index":2770,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["data.surname",{"_index":4065,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["data.team",{"_index":3439,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["data.team?.id",{"_index":3435,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["data.team?number(data.team):null",{"_index":985,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["data.teamfav",{"_index":4077,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["data.teamfav?.id",{"_index":4069,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["data.userid",{"_index":2084,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["data.userid?.id",{"_index":2080,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["data.visitorteamid",{"_index":2779,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["data.visitorteamid?.id",{"_index":2772,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["data:any):paginated",{"_index":1622,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["data:data",{"_index":942,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["data:data.map((d:data",{"_index":946,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{}}}],["data:data.map((d:data|personraw",{"_index":1108,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["data:data.map((d:leagueraw",{"_index":2057,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{}}}],["data:data.map((d:playerraw",{"_index":3424,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["data:data.map((d:teamraw",{"_index":3923,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["data:data.map((d:userraw",{"_index":4035,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["data:leagueraw",{"_index":2056,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{}}}],["data:playerraw",{"_index":3423,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["data:t",{"_index":3207,"title":{},"body":{"interfaces/Paginated.html":{}}}],["data:teamraw",{"_index":3922,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["data?.data",{"_index":4110,"title":{},"body":{"components/UsersPage.html":{}}}],["data[key",{"_index":1102,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["datamapping",{"_index":2086,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["datamapping.league",{"_index":3931,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["datamapping.leaguefav",{"_index":4079,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["datamapping.localteamid",{"_index":2775,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["datamapping.matchid",{"_index":2897,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["datamapping.playerfav",{"_index":4073,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["datamapping.team",{"_index":3438,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["datamapping.teamfav",{"_index":4076,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["datamapping.userid",{"_index":2085,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["datamapping.visitorteamid",{"_index":2778,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["datamapping:firebaseleague",{"_index":2082,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{}}}],["datamapping:firebasematch",{"_index":2773,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["datamapping:firebaseplayer",{"_index":3436,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["datamapping:firebaseteam",{"_index":3929,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["datamapping:firebaseuser",{"_index":4071,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["dataurl",{"_index":4211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":4195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":4209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":974,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/Task.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{},"directives/TimeDirectiveDirective.html":{}}}],["date()).toisostring",{"_index":861,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["date(`2000",{"_index":2852,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["date(date",{"_index":2688,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["date(event.detail.value",{"_index":3356,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["date(match.day).tolocaledatestring(this.currentlang",{"_index":3023,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["date(matchdate.gettime",{"_index":2995,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["date(this.match.day).tolocaledatestring",{"_index":2848,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["date(year",{"_index":2993,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["date.now()}_${math.random().tostring(36).substring(2",{"_index":1396,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["date:'dd",{"_index":2713,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["date:\\'dd",{"_index":2752,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["date:date",{"_index":3876,"title":{},"body":{"interfaces/Task.html":{}}}],["datepipe",{"_index":3335,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["datetime",{"_index":2743,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["datetime::part(active",{"_index":2745,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["datetime::part(button",{"_index":2746,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["datevalue",{"_index":4015,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["datos",{"_index":3105,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"index.html":{}}}],["day",{"_index":1364,"title":{},"body":{"interfaces/FirebaseMatch.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{}}}],["dayparts",{"_index":2983,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["dayparts.length",{"_index":2987,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["dayparts.map(number",{"_index":2989,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["db",{"_index":645,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["dd",{"_index":3361,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["de",{"_index":56,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":4003,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["debugging",{"_index":4011,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["declarations",{"_index":132,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{},"overview.html":{}}}],["decorators",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"directives/HighLightDirective.html":{},"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["default",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"components/PositionSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["defaultbackgroundcolor",{"_index":1492,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["defaultboxshadow",{"_index":1493,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["defaultlang",{"_index":1886,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defecto",{"_index":1253,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"components/PlayerModalComponent.html":{},"directives/TimeDirectiveDirective.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"pipes/PasswordTogglePipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamCreateModalComponent.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"directives/TimeDirectiveDirective.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{}}}],["defines",{"_index":2829,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["del",{"_index":813,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"directives/DragDropDirective.html":{},"injectables/JsonServerRepositoryService.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"injectables/StrapiRepositoryService.html":{}}}],["delete",{"_index":647,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams-1.html":{},"injectables/PlayerService.html":{},"components/StatisticsPage.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["delete(id",{"_index":662,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["deletedoc",{"_index":689,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["deletedoc(docref",{"_index":781,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["demostración",{"_index":4283,"title":{},"body":{"index.html":{}}}],["dentro",{"_index":3471,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["dependencies",{"_index":131,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["deps",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["desarrollado",{"_index":4268,"title":{},"body":{"index.html":{}}}],["description",{"_index":1557,"title":{},"body":{"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"properties.html":{}}}],["desde",{"_index":3146,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/StatisticsPage.html":{}}}],["deselect",{"_index":2107,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["deselect(popover",{"_index":2120,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["deselect(popover:ionpopover|null=null",{"_index":2210,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["deshabilitado",{"_index":3264,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["desplazamiento",{"_index":1999,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{}}}],["destruir",{"_index":1353,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/PictureSelectableComponent.html":{}}}],["dialogtitle",{"_index":2875,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["digit",{"_index":2690,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["direction",{"_index":2015,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["directive",{"_index":62,"title":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"directives/TimeDirectiveDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{}}}],["directive.directive",{"_index":3680,"title":{},"body":{"modules/SharedModule.html":{}}}],["directive.directive.ts",{"_index":3995,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["directive.directive.ts:10",{"_index":3999,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["directive.directive.ts:11",{"_index":3998,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["directive.directive.ts:15",{"_index":4001,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["directive/high",{"_index":1489,"title":{},"body":{"directives/HighLightDirective.html":{},"modules/SharedModule.html":{}}}],["directive/time",{"_index":3679,"title":{},"body":{"modules/SharedModule.html":{},"directives/TimeDirectiveDirective.html":{}}}],["directives",{"_index":116,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["directives/drag",{"_index":3685,"title":{},"body":{"modules/SharedModule.html":{}}}],["directives/filterbyteams/filter",{"_index":3681,"title":{},"body":{"modules/SharedModule.html":{}}}],["directives/high",{"_index":3683,"title":{},"body":{"modules/SharedModule.html":{}}}],["directives/time",{"_index":3678,"title":{},"body":{"modules/SharedModule.html":{}}}],["dirtyvalues",{"_index":1969,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["dirtyvalues[key",{"_index":1974,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["disabled",{"_index":1743,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["disabled:boolean",{"_index":2169,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["dismiss",{"_index":1923,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["display",{"_index":1223,"title":{},"body":{"directives/FilterByTeamDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"directives/TimeDirectiveDirective.html":{}}}],["display:flex",{"_index":3783,"title":{},"body":{"components/StatisticsPage.html":{}}}],["disponible",{"_index":3030,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["dispositivo",{"_index":3026,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["div.user",{"_index":3303,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["doc",{"_index":684,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["doc(this.db",{"_index":741,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["doc.data",{"_index":764,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["doc.exists",{"_index":769,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["doc.id",{"_index":763,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["docref",{"_index":766,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["docref.id",{"_index":776,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["document.body",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["document:click",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["document:click(event",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["documentdata",{"_index":1324,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["documentreference",{"_index":731,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{}}}],["doesn't",{"_index":2233,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["donde",{"_index":1192,"title":{},"body":{"directives/DragDropDirective.html":{},"index.html":{}}}],["done",{"_index":2749,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["done),.time",{"_index":2748,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["dorefresh",{"_index":3725,"title":{},"body":{"components/StatisticsPage.html":{}}}],["dorefresh(event",{"_index":3191,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["dorsal",{"_index":976,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["dorsal:data.dorsal",{"_index":3414,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["dragdata",{"_index":1137,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragdropdirective",{"_index":117,"title":{"directives/DragDropDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["dragend",{"_index":1140,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragevent",{"_index":1159,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["draggable",{"_index":1177,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragleave",{"_index":1141,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragover",{"_index":1142,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragstart",{"_index":1143,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop",{"_index":1144,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/HighLightDirective.html":{}}}],["drop.directive",{"_index":3686,"title":{},"body":{"modules/SharedModule.html":{}}}],["drop.directive.ts",{"_index":1129,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:16",{"_index":1156,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:22",{"_index":1153,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:27",{"_index":1155,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:33",{"_index":1154,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:38",{"_index":1157,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:7",{"_index":1150,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:8",{"_index":1151,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:9",{"_index":1149,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop/drag",{"_index":1128,"title":{},"body":{"directives/DragDropDirective.html":{},"modules/SharedModule.html":{}}}],["dropdown",{"_index":1843,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["dropped",{"_index":1139,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["duration",{"_index":3561,"title":{},"body":{"components/ProfilePage.html":{},"components/UsersPage.html":{}}}],["dynamic",{"_index":4163,"title":{},"body":{"dependencies.html":{}}}],["d{1,2}:\\d{1,2}(:\\d{1,2})?$/.test(this.date",{"_index":4016,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["ease",{"_index":1815,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{}}}],["edit",{"_index":1942,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["edita",{"_index":4233,"title":{},"body":{"index.html":{}}}],["editar",{"_index":4253,"title":{},"body":{"index.html":{}}}],["editmatch",{"_index":2966,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["editmatch).subscribe",{"_index":2971,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["efectiva",{"_index":4225,"title":{},"body":{"index.html":{}}}],["effect",{"_index":2428,"title":{},"body":{"components/LeaguesPage.html":{}}}],["ejemplo",{"_index":2832,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["el",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"directives/HighLightDirective.html":{},"interfaces/IBaseRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"interfaces/SearchParams.html":{},"components/StatisticsPage.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamCreateModalComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"directives/FilterByTeamDirective.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["elemento",{"_index":1172,"title":{},"body":{"directives/DragDropDirective.html":{},"components/PictureSelectableComponent.html":{}}}],["elementos",{"_index":2433,"title":{},"body":{"components/LeaguesPage.html":{}}}],["elementref",{"_index":1146,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"directives/TimeDirectiveDirective.html":{}}}],["elimina",{"_index":3252,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PlayerModalComponent.html":{},"index.html":{}}}],["eliminamos",{"_index":1544,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["elimínalo",{"_index":3134,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["email",{"_index":1086,"title":{},"body":{"interfaces/Data-4.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseUser.html":{},"interfaces/GroupRaw.html":{},"components/LoginPage.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"index.html":{}}}],["email:payload.email",{"_index":1478,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["email:response.email",{"_index":1486,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["email:response.user.email",{"_index":1483,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["email:string",{"_index":1471,"title":{},"body":{"interfaces/GroupRaw.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["email:user.email",{"_index":3553,"title":{},"body":{"components/ProfilePage.html":{}}}],["email?:string",{"_index":1421,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/Users.html":{}}}],["emitloginsuccess",{"_index":586,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["en",{"_index":1173,"title":{},"body":{"directives/DragDropDirective.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"directives/TimeDirectiveDirective.html":{},"index.html":{}}}],["end",{"_index":1804,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["enddate",{"_index":2994,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["english",{"_index":1726,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["enlace",{"_index":4280,"title":{},"body":{"index.html":{}}}],["enlaces",{"_index":4279,"title":{},"body":{"index.html":{}}}],["entity",{"_index":661,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["entity).pipe(map(res=>this.mapping.getadded(res",{"_index":826,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["entity).pipe(map(res=>this.mapping.getupdated(res",{"_index":828,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["entity.createdat",{"_index":860,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["entity.id",{"_index":858,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["entre",{"_index":3480,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["environment",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/api",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/auth/local",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/auth/local/register",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/upload",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/users/me",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["equipo",{"_index":1210,"title":{},"body":{"directives/FilterByTeamDirective.html":{},"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"index.html":{}}}],["equipos",{"_index":3106,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"index.html":{}}}],["err",{"_index":2340,"title":{},"body":{"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"components/UsersPage.html":{}}}],["error",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{}}}],["error(\"backend",{"_index":4372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(\"id",{"_index":871,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["error(\"method",{"_index":2060,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["error('no",{"_index":1309,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["error('usuario",{"_index":1394,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["error:err",{"_index":2182,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/TeamSelectableComponent.html":{}}}],["errormessage",{"_index":3053,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["es",{"_index":733,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{},"index.html":{}}}],["espaciado",{"_index":3470,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["espacio",{"_index":3468,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["español",{"_index":2599,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["específicos",{"_index":1689,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"components/StatisticsPage.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["esperar",{"_index":4394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esquina",{"_index":3076,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["est",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"index.html":{}}}],["establece",{"_index":3257,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["establecer",{"_index":3259,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["estado",{"_index":2922,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["estadísticas",{"_index":2820,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["estamos",{"_index":1535,"title":{},"body":{"directives/HighLightDirective.html":{},"interfaces/MatchWithTeams.html":{}}}],["este",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["estilo",{"_index":2724,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["estilos",{"_index":1870,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/StatisticsPage.html":{}}}],["etc",{"_index":2837,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["ev",{"_index":2144,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["event",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{}}}],["event.datatransfer?.getdata('text",{"_index":1196,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["event.datatransfer?.setdata('text",{"_index":1178,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["event.detail.value",{"_index":2698,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["event.fromindex",{"_index":2391,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["event.preventdefault",{"_index":1185,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["event.stoppropagation",{"_index":3287,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["event.target",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target.complete",{"_index":3193,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{}}}],["event.toindex",{"_index":2392,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["eventemitter",{"_index":1152,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["evento",{"_index":3250,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["evita",{"_index":1998,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{}}}],["evitar",{"_index":1866,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/PlayerModalComponent.html":{}}}],["evt",{"_index":2136,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["existe",{"_index":1525,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["existen",{"_index":3118,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["existingstats",{"_index":3124,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["export",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"overview.html":{}}}],["exports:[playermodalcomponent",{"_index":3688,"title":{},"body":{"modules/SharedModule.html":{}}}],["ext",{"_index":1443,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["extends",{"_index":1019,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"injectables/LeagueService.html":{},"interfaces/Match.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Player.html":{},"injectables/PlayerService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"interfaces/Users.html":{},"injectables/UsersService.html":{}}}],["f0f0f0",{"_index":3484,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["f5afd",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["f5afd.firebaseapp.com",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["f5afd.firebasestorage.app",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["f97316",{"_index":3763,"title":{},"body":{"components/StatisticsPage.html":{}}}],["factoryprovider",{"_index":4201,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fallback",{"_index":3028,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"directives/TimeDirectiveDirective.html":{}}}],["false",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["faltas",{"_index":3068,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["favorite",{"_index":2343,"title":{},"body":{"components/LeaguesPage.html":{}}}],["favoritenames",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["favoritenames.league",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["favoritenames.player",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["favoritenames.team",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["favoritos",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["fb",{"_index":1933,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["fb:formbuilder",{"_index":1959,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["fecha",{"_index":2726,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PlayerCreateModalComponent.html":{},"directives/TimeDirectiveDirective.html":{}}}],["fechnacimiento",{"_index":3405,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["fechnacimiento:data.birthdate",{"_index":3412,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["fetch(changedvalues.picture",{"_index":3574,"title":{},"body":{"components/ProfilePage.html":{}}}],["fetch(response.data.picture",{"_index":2361,"title":{},"body":{"components/LeaguesPage.html":{}}}],["fetching",{"_index":2947,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["ff3366",{"_index":2411,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["ff3b30",{"_index":2021,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["ffc107",{"_index":2464,"title":{},"body":{"components/LeaguesPage.html":{}}}],["fff",{"_index":1805,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/StatisticsPage.html":{}}}],["ffffff",{"_index":2738,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["field",{"_index":739,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["field=${field",{"_index":747,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{}}}],["fileloader",{"_index":3247,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":3299,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files?.length>0",{"_index":3290,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":3291,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":3288,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader:htmlinputelement",{"_index":3286,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":1395,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["filereader",{"_index":3293,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fill",{"_index":3759,"title":{},"body":{"components/StatisticsPage.html":{}}}],["filter",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["filter(([isauthenticated",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(filtering",{"_index":2123,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["filter(filtering:string",{"_index":2200,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["filter(isready",{"_index":4392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterbyteamdirective",{"_index":119,"title":{"directives/FilterByTeamDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"directives/FilterByTeamDirective.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["filtering",{"_index":2125,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["filters",{"_index":668,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/PlayerService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{}}}],["filters:searchparams",{"_index":820,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filters[${k}]=${v",{"_index":1033,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filtervalue",{"_index":729,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["filtros",{"_index":727,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["finalizado",{"_index":3000,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["finalizar",{"_index":3003,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["finalize",{"_index":2907,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["finally",{"_index":3564,"title":{},"body":{"components/ProfilePage.html":{}}}],["firebase",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthMappingService.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firebase.service",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["firebase.service.ts",{"_index":643,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["firebase.service.ts:104",{"_index":673,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:116",{"_index":660,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:122",{"_index":678,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:129",{"_index":663,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:15",{"_index":2758,"title":{},"body":{"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["firebase.service.ts:16",{"_index":2062,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{}}}],["firebase.service.ts:17",{"_index":4057,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["firebase.service.ts:20",{"_index":2762,"title":{},"body":{"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["firebase.service.ts:21",{"_index":2066,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{}}}],["firebase.service.ts:22",{"_index":4060,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["firebase.service.ts:28",{"_index":2761,"title":{},"body":{"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["firebase.service.ts:29",{"_index":2065,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{}}}],["firebase.service.ts:30",{"_index":4059,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["firebase.service.ts:31",{"_index":679,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:32",{"_index":656,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:36",{"_index":2888,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["firebase.service.ts:39",{"_index":2890,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["firebase.service.ts:41",{"_index":2759,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["firebase.service.ts:42",{"_index":2889,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["firebase.service.ts:43",{"_index":2063,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{}}}],["firebase.service.ts:44",{"_index":675,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/MatchMappingFirebase.html":{}}}],["firebase.service.ts:45",{"_index":2891,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["firebase.service.ts:46",{"_index":2067,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["firebase.service.ts:47",{"_index":2760,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["firebase.service.ts:49",{"_index":2064,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["firebase.service.ts:50",{"_index":2763,"title":{},"body":{"injectables/MatchMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["firebase.service.ts:52",{"_index":2068,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["firebase.service.ts:53",{"_index":4061,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["firebase.service.ts:55",{"_index":670,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["firebase.service.ts:56",{"_index":4058,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["firebase.service.ts:58",{"_index":3432,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["firebase.service.ts:59",{"_index":4062,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["firebase.service.ts:60",{"_index":2892,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["firebase.service.ts:62",{"_index":2069,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{}}}],["firebase.service.ts:71",{"_index":2764,"title":{},"body":{"injectables/MatchMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["firebase.service.ts:77",{"_index":3433,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["firebase.service.ts:81",{"_index":4063,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["firebase/app",{"_index":681,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["firebase/auth",{"_index":1245,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["firebase/firestore",{"_index":696,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["firebase/storage",{"_index":1387,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["firebase_collection_token",{"_index":701,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"miscellaneous/variables.html":{}}}],["firebase_config_token",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{},"miscellaneous/variables.html":{}}}],["firebaseauthenticationservice",{"_index":170,"title":{"injectables/FirebaseAuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["firebaseauthenticationservice(firebaseconfig",{"_index":4374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseauthmappingservice",{"_index":1225,"title":{"injectables/FirebaseAuthMappingService.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["firebasecollectionsubscriptionservice",{"_index":1310,"title":{"injectables/FirebaseCollectionSubscriptionService.html":{}},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["firebaseconfig",{"_index":657,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["firebaseconfig:any",{"_index":4365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseleague",{"_index":1359,"title":{"interfaces/FirebaseLeague.html":{}},"body":{"interfaces/FirebaseLeague.html":{},"injectables/LeagueMappingFirebase.html":{}}}],["firebasematch",{"_index":1362,"title":{"interfaces/FirebaseMatch.html":{}},"body":{"interfaces/FirebaseMatch.html":{},"injectables/MatchMappingFirebase.html":{}}}],["firebasematchstatistics",{"_index":1372,"title":{"interfaces/FirebaseMatchStatistics.html":{}},"body":{"interfaces/FirebaseMatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{}}}],["firebasemediaservice",{"_index":1378,"title":{"injectables/FirebaseMediaService.html":{}},"body":{"injectables/FirebaseMediaService.html":{}}}],["firebasemediaservice(firebaseconfig",{"_index":4382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseplayer",{"_index":1411,"title":{"interfaces/FirebasePlayer.html":{}},"body":{"interfaces/FirebasePlayer.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["firebasesignout",{"_index":1282,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["firebaseteam",{"_index":1413,"title":{"interfaces/FirebaseTeam.html":{}},"body":{"interfaces/FirebaseTeam.html":{},"injectables/TeamMappingFirebase.html":{}}}],["firebaseuser",{"_index":1231,"title":{"interfaces/FirebaseUser.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/FirebaseUser.html":{},"injectables/UsersMappingFirebase.html":{}}}],["firefox",{"_index":2227,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["firestore",{"_index":2070,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["first",{"_index":1700,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["first:string",{"_index":4026,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["firstsurname",{"_index":971,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["firstsurname:data.ape1",{"_index":3425,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["firstvaluefrom",{"_index":1277,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this._ready.pipe(filter(ready",{"_index":1296,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this._user",{"_index":1297,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this.teamsvc.getbyid(match!.localteamid",{"_index":3089,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["firstvaluefrom(this.teamsvc.getbyid(match!.visitorteamid",{"_index":3092,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["firstvaluefrom(this.teamsvc.getbyid(match.localteamid",{"_index":2942,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["firstvaluefrom(this.teamsvc.getbyid(match.visitorteamid",{"_index":2945,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["firstvaluefrom(this.usersvc.getcurrentuser",{"_index":2357,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["firstvaluefrom(this.usersvc.update(this.currentuser!!.id",{"_index":2337,"title":{},"body":{"components/LeaguesPage.html":{}}}],["fit",{"_index":1823,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{}}}],["fixed",{"_index":2222,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["flag",{"_index":1820,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["flex",{"_index":1835,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["flexbox",{"_index":2737,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["fn",{"_index":1762,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["focused",{"_index":1799,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["fondo",{"_index":1520,"title":{},"body":{"directives/HighLightDirective.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{}}}],["font",{"_index":1829,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["footballadminapp",{"_index":4409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["footballcomps",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["for(let",{"_index":850,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["form",{"_index":2014,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["forma",{"_index":4237,"title":{},"body":{"index.html":{}}}],["format",{"_index":3996,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["formatdate",{"_index":2621,"title":{},"body":{"components/MatchCreateComponent.html":{},"directives/TimeDirectiveDirective.html":{}}}],["formatdate(date",{"_index":2634,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["formatdate(datevalue",{"_index":4020,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["formateado",{"_index":3369,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["formateamos",{"_index":3017,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["formato",{"_index":4008,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["formats",{"_index":1431,"title":{"interfaces/Formats.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["formatteddate",{"_index":3362,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["formattime",{"_index":2622,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["formattime(time",{"_index":2636,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["formatting",{"_index":4022,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["formbuilder",{"_index":1928,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["formcontrol",{"_index":2653,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["formdata",{"_index":1454,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["formdata.append('files",{"_index":1455,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["formgroup",{"_index":1920,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["formgroup.get(key",{"_index":1972,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["formgroup:formgroup",{"_index":1950,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["formsmodule",{"_index":148,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["formulario",{"_index":3258,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["formularios",{"_index":3223,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["forwardref",{"_index":1717,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":872,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["fr",{"_index":1728,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["fr5s50j8lc",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":4299,"title":{},"body":{"properties.html":{}}}],["french",{"_index":1729,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["from(adddoc(this.collectionref",{"_index":772,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["from(createuserwithemailandpassword(this.auth",{"_index":1304,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(firebasesignout(this.auth)).pipe",{"_index":1306,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(getdoc(docref)).pipe",{"_index":767,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":1299,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(this.auth.getcurrentuser()).pipe",{"_index":1392,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["from(this.getlastdocumentofpreviouspage(page",{"_index":717,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["from(updatedoc(docref",{"_index":777,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["from(uploadbytes(storageref",{"_index":1406,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["fromindex",{"_index":1181,"title":{},"body":{"directives/DragDropDirective.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["fueras",{"_index":3073,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["full",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/TimeDirectiveDirective.html":{}}}],["fulldate",{"_index":4000,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["funcionalidades",{"_index":4227,"title":{},"body":{"index.html":{}}}],["función",{"_index":3269,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["function",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"components/PositionSelectableComponent.html":{}}}],["functions",{"_index":4188,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["futbol2.jpg",{"_index":2559,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["futmanager",{"_index":4219,"title":{},"body":{"index.html":{}}}],["fácil",{"_index":4224,"title":{},"body":{"index.html":{}}}],["fútbol",{"_index":4223,"title":{},"body":{"index.html":{}}}],["g",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["gap",{"_index":1838,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["garantizar",{"_index":4245,"title":{},"body":{"index.html":{}}}],["gb",{"_index":1727,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["gender",{"_index":3694,"title":{},"body":{"interfaces/SignUpPayload.html":{}}}],["gender:string",{"_index":3691,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{}}}],["generadas",{"_index":3151,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["generado",{"_index":1641,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["generar",{"_index":3001,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["generatedstats",{"_index":3051,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["generatestatsbasedonstatus",{"_index":3107,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["generatevalue",{"_index":3726,"title":{},"body":{"components/StatisticsPage.html":{}}}],["generatevalue(basevalue",{"_index":3153,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["german",{"_index":1731,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["gestionar",{"_index":3220,"title":{},"body":{"components/PictureSelectableComponent.html":{},"index.html":{}}}],["gestión",{"_index":4231,"title":{},"body":{"index.html":{}}}],["getadded",{"_index":1609,"title":{},"body":{"interfaces/IBaseMapping.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getadded(data",{"_index":957,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/IBaseMapping.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getadded(data:any):t",{"_index":1624,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getall",{"_index":648,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["getall():observable",{"_index":1651,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["getall(page",{"_index":665,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["getall(page:number",{"_index":818,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["getauth",{"_index":1279,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getauth(app",{"_index":1287,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getbirthdate",{"_index":3307,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["getbirthdate.value",{"_index":3387,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["getbyid",{"_index":649,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["getbyid(id",{"_index":672,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["getbyuserid",{"_index":1686,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UsersService.html":{}}}],["getbyuserid(userid",{"_index":1687,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/UsersService.html":{}}}],["getconfirmpassword",{"_index":3614,"title":{},"body":{"components/RegisterPage.html":{}}}],["getcurrentlang",{"_index":1889,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrentlanguage",{"_index":1756,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["getcurrentlanguage()!!.name",{"_index":1784,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["getcurrentlanguage()?.shortcode",{"_index":1785,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["getcurrentuser",{"_index":588,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UsersService.html":{}}}],["getcurrentuser():promise",{"_index":1607,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["getday",{"_index":2615,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["getday.value",{"_index":2712,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["getdeleted",{"_index":1610,"title":{},"body":{"interfaces/IBaseMapping.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getdeleted(data",{"_index":961,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/IBaseMapping.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getdeleted(data:any):t",{"_index":1626,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getdirtyvalues",{"_index":1924,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["getdirtyvalues(formgroup",{"_index":1936,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["getdoc",{"_index":685,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["getdocs",{"_index":686,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["getdocs(q",{"_index":756,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["getdorsal",{"_index":3326,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["getdownloadurl",{"_index":1385,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getdownloadurl(snapshot.ref",{"_index":1409,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getemail",{"_index":2562,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["getfirestore",{"_index":682,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["getfirestore(app",{"_index":713,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["getfirestore(initializeapp(firebaseconfig",{"_index":2075,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["getfirstsurname",{"_index":3320,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["getheaders",{"_index":1023,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["gethour",{"_index":2616,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["gethour.value",{"_index":2718,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["getlastdocumentofpreviouspage",{"_index":651,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["getlastdocumentofpreviouspage(page",{"_index":674,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["getleague",{"_index":3888,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["getleagues",{"_index":2255,"title":{},"body":{"components/LeaguesPage.html":{}}}],["getlocalteamid",{"_index":2670,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["getmatches",{"_index":2934,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["getmoreleagues",{"_index":2256,"title":{},"body":{"components/LeaguesPage.html":{}}}],["getmoreleagues(notify",{"_index":2271,"title":{},"body":{"components/LeaguesPage.html":{}}}],["getmorematches(notify",{"_index":2948,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["getname",{"_index":1946,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["getnationality",{"_index":3324,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["getnumberofplayers",{"_index":3886,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["getone",{"_index":1611,"title":{},"body":{"interfaces/IBaseMapping.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getone(data",{"_index":948,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/IBaseMapping.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getone(data:any):t",{"_index":1623,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getpaginated",{"_index":1612,"title":{},"body":{"interfaces/IBaseMapping.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getpaginated(page",{"_index":1617,"title":{},"body":{"interfaces/IBaseMapping.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getpaginated(page:number",{"_index":940,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/IBaseMapping.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getpassword",{"_index":2564,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["getpicture",{"_index":3333,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["getplace",{"_index":2668,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["getplayersbyteam",{"_index":3492,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getplayersbyteam(team",{"_index":3494,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getposition",{"_index":3329,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["getresult",{"_index":2666,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["getsecondsurname",{"_index":3322,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["getstorage",{"_index":1382,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getstorage(app",{"_index":1391,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getstoredlanguage",{"_index":1890,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getsurname",{"_index":3542,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["getteam",{"_index":3331,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["getteambyleague",{"_index":1680,"title":{},"body":{"interfaces/ITeamService.html":{},"injectables/TeamService.html":{}}}],["getteambyleague(league",{"_index":1681,"title":{},"body":{"interfaces/ITeamService.html":{},"injectables/TeamService.html":{}}}],["getting",{"_index":4217,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1258,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["gettoken():string",{"_index":1675,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["getupdated",{"_index":1613,"title":{},"body":{"interfaces/IBaseMapping.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getupdated(data",{"_index":960,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/IBaseMapping.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["getupdated(data:any):t",{"_index":1625,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getvisitorteamid",{"_index":2672,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["global",{"_index":2000,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{}}}],["glow",{"_index":2427,"title":{},"body":{"components/LeaguesPage.html":{}}}],["goals",{"_index":3803,"title":{},"body":{"components/StatisticsPage.html":{}}}],["gradient(45deg",{"_index":2417,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["gradient(circle",{"_index":2439,"title":{},"body":{"components/LeaguesPage.html":{}}}],["grandes",{"_index":2451,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["graph",{"_index":4287,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":2419,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["gris",{"_index":3796,"title":{},"body":{"components/StatisticsPage.html":{}}}],["group",{"_index":2138,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"interfaces/SignUpPayload.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["group:league",{"_index":2205,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["group:string",{"_index":3692,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{}}}],["group:team",{"_index":3972,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["groupraw",{"_index":1461,"title":{"interfaces/GroupRaw.html":{}},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["guard",{"_index":164,"title":{"guards/AdminGuard.html":{}},"body":{"overview.html":{}}}],["guardamos",{"_index":1523,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["guardar",{"_index":3145,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["guards",{"_index":166,"title":{},"body":{"guards/AdminGuard.html":{}}}],["h2",{"_index":3478,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["ha",{"_index":3147,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["handle",{"_index":2221,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["handleclick",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["handleclick(event",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["handler",{"_index":2387,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["hash",{"_index":1442,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["hasta",{"_index":3160,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["hasvalue",{"_index":3229,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["hasvalue:boolean",{"_index":3274,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["hay",{"_index":1690,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["haya",{"_index":3139,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["header",{"_index":2382,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["headers",{"_index":1026,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["height",{"_index":1441,"title":{},"body":{"interfaces/Formats.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/Large.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/Medium.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"interfaces/Thumbnail.html":{}}}],["here",{"_index":2219,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["hidden",{"_index":1851,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["highlight",{"_index":3789,"title":{},"body":{"components/StatisticsPage.html":{}}}],["highlightcolor",{"_index":1519,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["highlightdirective",{"_index":121,"title":{"directives/HighLightDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["home",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["home'},{'name",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["home.contact",{"_index":1576,"title":{},"body":{"components/HomePage.html":{}}}],["home.leagues",{"_index":1558,"title":{},"body":{"components/HomePage.html":{}}}],["home.matches",{"_index":1569,"title":{},"body":{"components/HomePage.html":{}}}],["home.page",{"_index":1584,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":1552,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1551,"title":{},"body":{"components/HomePage.html":{}}}],["home.players",{"_index":1566,"title":{},"body":{"components/HomePage.html":{}}}],["home.see_contact",{"_index":1577,"title":{},"body":{"components/HomePage.html":{}}}],["home.see_leagues",{"_index":1561,"title":{},"body":{"components/HomePage.html":{}}}],["home.see_matches",{"_index":1570,"title":{},"body":{"components/HomePage.html":{}}}],["home.see_players",{"_index":1567,"title":{},"body":{"components/HomePage.html":{}}}],["home.see_teams",{"_index":1564,"title":{},"body":{"components/HomePage.html":{}}}],["home.teams",{"_index":1563,"title":{},"body":{"components/HomePage.html":{}}}],["home.title",{"_index":1572,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":68,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{},"properties.html":{}}}],["homepagemodule",{"_index":1578,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":1582,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["hora",{"_index":2856,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["horas",{"_index":2996,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["horizontal",{"_index":2728,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["horizontalmente",{"_index":2434,"title":{},"body":{"components/LeaguesPage.html":{}}}],["host",{"_index":1788,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["hostlistener",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"directives/HighLightDirective.html":{}}}],["hostlistener('document:click",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('dragend",{"_index":1160,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["hostlistener('dragleave",{"_index":1162,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["hostlistener('dragover",{"_index":1164,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["hostlistener('dragstart",{"_index":1166,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["hostlistener('drop",{"_index":1168,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/HighLightDirective.html":{}}}],["hostlistener('mouseenter",{"_index":1509,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["hostlistener('mouseleave",{"_index":1510,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["hostlisteners",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"directives/HighLightDirective.html":{}}}],["hour",{"_index":1365,"title":{},"body":{"interfaces/FirebaseMatch.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["hourparts",{"_index":2985,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["hourparts.length",{"_index":2988,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["hourparts.map(number",{"_index":2990,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["hover",{"_index":1797,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["html",{"_index":60,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{}}}],["htmlelement",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["htmlinputelement",{"_index":3248,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["htmlioninfinitescrollelement",{"_index":2129,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/TeamSelectableComponent.html":{}}}],["http",{"_index":790,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["http.service",{"_index":1013,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["http.service.ts",{"_index":784,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:18",{"_index":789,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:31",{"_index":793,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:35",{"_index":794,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:39",{"_index":791,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:43",{"_index":795,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:47",{"_index":792,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http://localhost:1337",{"_index":4416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http:httpclient",{"_index":4370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"modules/LoginPageModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpclient:httpclient",{"_index":1453,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["https://footballcompsstrapiv2.onrender.com",{"_index":4414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ionicframework.com",{"_index":4297,"title":{},"body":{"properties.html":{}}}],["hubo",{"_index":4120,"title":{},"body":{"components/UsersPage.html":{}}}],["iauthentication",{"_index":620,"title":{"interfaces/IAuthentication.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthentication.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["iauthmapping",{"_index":593,"title":{"interfaces/IAuthMapping.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["ibasemapping",{"_index":655,"title":{"interfaces/IBaseMapping.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["ibaserepository",{"_index":698,"title":{"interfaces/IBaseRepository.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/ITeamRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["ibaseservice",{"_index":889,"title":{"interfaces/IBaseService.html":{}},"body":{"injectables/BaseService.html":{},"interfaces/IBaseService.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerService.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{}}}],["icollectionsubscription",{"_index":912,"title":{"interfaces/ICollectionSubscription.html":{}},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["icon",{"_index":1827,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["id",{"_index":664,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LineupsPage.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{}}}],["id.tostring",{"_index":955,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["id:data.id",{"_index":2051,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["id:number",{"_index":1436,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["id:response.id.tostring",{"_index":1484,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["id:response.user.id.tostring",{"_index":1481,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["id:string",{"_index":3203,"title":{},"body":{"interfaces/Model.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["id=\"${player.id",{"_index":1220,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["identifier",{"_index":3870,"title":{},"body":{"interfaces/StrapiSignIn.html":{}}}],["identifier:payload.email",{"_index":1475,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["identifier:string",{"_index":1468,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["idequipo",{"_index":3408,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["idliga",{"_index":3914,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["idliga:data.league",{"_index":3917,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["ids",{"_index":2329,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["if(_league",{"_index":1954,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["if(_match",{"_index":2675,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["if(_player",{"_index":3340,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["if(_team",{"_index":3892,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["if(data.league",{"_index":3930,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["if(data.leaguefav",{"_index":4078,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["if(data.localteamid",{"_index":2774,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["if(data.playerfav",{"_index":4072,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["if(data.team",{"_index":3437,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["if(data.teamfav",{"_index":4075,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["if(data.userid",{"_index":2780,"title":{},"body":{"injectables/MatchMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["if(data.visitorteamid",{"_index":2777,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["if(field",{"_index":742,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["if(fileloader.files",{"_index":3289,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["if(id",{"_index":2192,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["if(index>=0",{"_index":867,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["if(obj",{"_index":3278,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["if(page",{"_index":1036,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["if(popover",{"_index":2212,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["if(propagate",{"_index":2195,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["if(this.page",{"_index":2184,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["if(user",{"_index":3548,"title":{},"body":{"components/ProfilePage.html":{}}}],["ileaguerepository",{"_index":1654,"title":{"interfaces/ILeagueRepository.html":{}},"body":{"interfaces/ILeagueRepository.html":{},"injectables/LeagueService.html":{}}}],["ileagueservice",{"_index":1656,"title":{"interfaces/ILeagueService.html":{}},"body":{"interfaces/ILeagueService.html":{},"injectables/LeagueService.html":{}}}],["image",{"_index":2435,"title":{},"body":{"components/LeaguesPage.html":{}}}],["imagen",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/LeaguesPage.html":{},"components/PictureSelectableComponent.html":{}}}],["imatchrepository",{"_index":1658,"title":{"interfaces/IMatchRepository.html":{}},"body":{"interfaces/IMatchRepository.html":{},"injectables/MatchService.html":{}}}],["imatchservice",{"_index":1661,"title":{"interfaces/IMatchService.html":{}},"body":{"interfaces/IMatchService.html":{},"injectables/MatchService.html":{}}}],["imatchstatsrepository",{"_index":1663,"title":{"interfaces/IMatchStatsRepository.html":{}},"body":{"interfaces/IMatchStatsRepository.html":{}}}],["imatchstatsservice",{"_index":1666,"title":{"interfaces/IMatchStatsService.html":{}},"body":{"interfaces/IMatchStatsService.html":{},"injectables/MatchStatsService.html":{}}}],["img",{"_index":2252,"title":{},"body":{"components/LeaguesPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams.html":{},"components/PlayerModalComponent.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{}}}],["implementa",{"_index":2246,"title":{},"body":{"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["implemented",{"_index":2061,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/GroupRaw.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{}}}],["import('./pages/about/about.module').then",{"_index":559,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/leagues/leagues.module').then",{"_index":543,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/lineups/lineups.module').then",{"_index":569,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/login/login.module').then",{"_index":552,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/matches/matches.module').then",{"_index":564,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/players/players.module').then",{"_index":549,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/profile/profile.module').then",{"_index":562,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/register/register.module').then",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/splash/splash.module').then",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/statistics/statistics.module').then",{"_index":572,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/teams/teams.module').then",{"_index":546,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/users/users.module').then",{"_index":566,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":2448,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["imports",{"_index":144,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["imports:[ionicmodule",{"_index":3713,"title":{},"body":{"components/SplashPage.html":{}}}],["imágenes",{"_index":3221,"title":{},"body":{"components/PictureSelectableComponent.html":{},"index.html":{}}}],["incluir",{"_index":722,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["incluirlo",{"_index":3131,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":3660,"title":{},"body":{"interfaces/SearchParams.html":{}}}],["indica",{"_index":3261,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["infinitescrollcustomevent",{"_index":2142,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{}}}],["información",{"_index":3018,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"components/PlayerModalComponent.html":{},"index.html":{}}}],["inherited",{"_index":1259,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["inicial",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["inicialización",{"_index":3844,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["iniciar",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["inicio",{"_index":4240,"title":{},"body":{"index.html":{}}}],["initializeapp",{"_index":680,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["initializeapp(firebaseconfig",{"_index":711,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["inject",{"_index":619,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersService.html":{}}}],["inject(api_url_token",{"_index":805,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(auth_mapping_token",{"_index":1284,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_me_api_url_token",{"_index":3836,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_sign_in_api_url_token",{"_index":3834,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_sign_up_api_url_token",{"_index":3835,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_token",{"_index":804,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["inject(baseauthenticationservice",{"_index":4389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(firebase_collection_token",{"_index":709,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["inject(firebase_config_token",{"_index":708,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["inject(league_collection_subscription_token",{"_index":2305,"title":{},"body":{"components/LeaguesPage.html":{}}}],["inject(league_repository_token",{"_index":2244,"title":{},"body":{"injectables/LeagueService.html":{}}}],["inject(locale_id",{"_index":4009,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["inject(match_repository_token",{"_index":2884,"title":{},"body":{"injectables/MatchService.html":{}}}],["inject(match_stats_repository_token",{"_index":2904,"title":{},"body":{"injectables/MatchStatsService.html":{}}}],["inject(player_collection_subscription_token",{"_index":2916,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["inject(player_repository_token",{"_index":3499,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(repository_mapping_token",{"_index":710,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(repository_token",{"_index":895,"title":{},"body":{"injectables/BaseService.html":{}}}],["inject(resource_name_token",{"_index":810,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(router",{"_index":4390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(strapi_auth_token",{"_index":1020,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["inject(team_repository_token",{"_index":3984,"title":{},"body":{"injectables/TeamService.html":{}}}],["inject(upload_api_url_token",{"_index":1451,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["inject(user_repository_token",{"_index":4145,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectable",{"_index":178,"title":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/LeagueService.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/PlayerService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/TeamService.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/GroupRaw.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/LeagueService.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"injectables/TeamService.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{}}}],["injectables",{"_index":576,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/LeagueService.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/PlayerService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/TeamService.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":4200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectiontoken('apiurl",{"_index":4319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authmeapiurl",{"_index":4321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authsigninapiurl",{"_index":4322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authsignupapiurl",{"_index":4323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('backend",{"_index":4325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('firebasecollectiontoken",{"_index":4327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('firebaseconfigtoken",{"_index":4328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iauthentication",{"_index":4324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('ileaguerepository",{"_index":4332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('imatchrepository",{"_index":4337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('imatchstatsrepository",{"_index":4342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iplayerrepository",{"_index":4347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('istrapiauthentication",{"_index":4352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iteamrepository",{"_index":4356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iuserrepository",{"_index":4361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('leagueapiurl",{"_index":4329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('leagueresourcename",{"_index":4333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('matchapiurl",{"_index":4334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('matchresourcename",{"_index":4338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('matchstatisticapiurl",{"_index":4339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('matchstatisticresourcename",{"_index":4343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('playerapiurl",{"_index":4344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('playerresourcename",{"_index":4348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('resourcename",{"_index":4351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('teamapiurl",{"_index":4353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('teamresourcename",{"_index":4357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('uploadapiurl",{"_index":4358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('userapiurl",{"_index":4359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('userresourcename",{"_index":4362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('collectionsubscriptiontoken",{"_index":4326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iauthmapping",{"_index":4320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('ibaserepositorymapping",{"_index":4349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('ileaguesrepositorymapping",{"_index":4331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('imatchrepositorymapping",{"_index":4336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('imatchstatsrepositorymapping",{"_index":4341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iplayerrepositorymapping",{"_index":4346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iteamrepositorymapping",{"_index":4355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iuserrepositorymapping",{"_index":4360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('leaguecollectionsubscriptiontoken",{"_index":4330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('matchcollectionsubscriptiontoken",{"_index":4335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('matchstatisticscollectionsubscriptiontoken",{"_index":4340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('playercollectionsubscriptiontoken",{"_index":4345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('repository_token",{"_index":4350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('teamcollectionsubscriptiontoken",{"_index":4354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('userscollectionsubscriptiontoken",{"_index":4363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inner",{"_index":1800,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["input",{"_index":1169,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{}}}],["input('appformatdate",{"_index":4006,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["input('apphighlight",{"_index":1518,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["input.value",{"_index":2209,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["input[type=\"file",{"_index":2037,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["inputs",{"_index":1136,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamCreateModalComponent.html":{},"directives/TimeDirectiveDirective.html":{}}}],["inserta",{"_index":2399,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["instalación",{"_index":4275,"title":{},"body":{"index.html":{}}}],["intefaces/base",{"_index":699,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["integración",{"_index":4264,"title":{},"body":{"index.html":{}}}],["integrarse",{"_index":3222,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["intentar",{"_index":3172,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["interface",{"_index":903,"title":{"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"interfaces/Language.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/Match.html":{},"interfaces/MatchStatistics.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{}},"body":{"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/Match.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchStatistics.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["interfaces",{"_index":905,"title":{},"body":{"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"interfaces/Language.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/Match.html":{},"interfaces/MatchStatistics.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"overview.html":{}}}],["interfaces/auth",{"_index":622,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["interfaces/authentication.interface",{"_index":621,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{}}}],["interfaces/base",{"_index":890,"title":{},"body":{"injectables/BaseService.html":{}}}],["interfaces/collection",{"_index":1326,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["interfaces/league",{"_index":2241,"title":{},"body":{"injectables/LeagueService.html":{}}}],["interfaces/match",{"_index":2883,"title":{},"body":{"injectables/MatchService.html":{}}}],["interfaces/matchstatistics",{"_index":2903,"title":{},"body":{"injectables/MatchStatsService.html":{}}}],["interfaces/player",{"_index":3497,"title":{},"body":{"injectables/PlayerService.html":{}}}],["interfaces/strapi",{"_index":1433,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["interfaces/team",{"_index":3982,"title":{},"body":{"injectables/TeamService.html":{}}}],["interfaces/users",{"_index":4143,"title":{},"body":{"injectables/UsersService.html":{}}}],["interrogación",{"_index":1424,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/Users.html":{}}}],["inválido",{"_index":1982,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["io.ionic.starter",{"_index":4407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":1990,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["ionic",{"_index":1792,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"index.html":{},"properties.html":{}}}],["ionic/angular",{"_index":151,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"modules/PlayersPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"modules/TeamsPageModule.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":150,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["ionicmodule.forroot",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":4179,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["ioninput",{"_index":2118,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["ionmenu",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["ionpopover",{"_index":2121,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["iplayerrepository",{"_index":1668,"title":{"interfaces/IPlayerRepository.html":{}},"body":{"interfaces/IPlayerRepository.html":{},"injectables/PlayerService.html":{}}}],["iplayerservice",{"_index":1670,"title":{"interfaces/IPlayerService.html":{}},"body":{"interfaces/IPlayerService.html":{},"injectables/PlayerService.html":{}}}],["isadmin",{"_index":2915,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["isauthenticated",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["isconfirmpasswordvisible",{"_index":3595,"title":{},"body":{"components/RegisterPage.html":{}}}],["isdarktheme",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["isdatepickeropen",{"_index":2617,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["isdisabled",{"_index":1765,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["isdisabled:boolean",{"_index":3273,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["isfavorite",{"_index":2344,"title":{},"body":{"components/LeaguesPage.html":{}}}],["isgreater",{"_index":3727,"title":{},"body":{"components/StatisticsPage.html":{}}}],["isgreater(a",{"_index":3179,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["isleagueraw",{"_index":949,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{}}}],["isleagueraw(data",{"_index":950,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{}}}],["isloading",{"_index":2912,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["islocalteammodalopen",{"_index":2618,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["isloggedin",{"_index":4401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ismobile",{"_index":1921,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["isnan(base",{"_index":3158,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["isopen",{"_index":1741,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["ispasswordvisible",{"_index":2546,"title":{},"body":{"components/LoginPage.html":{},"pipes/PasswordTogglePipe.html":{},"components/RegisterPage.html":{}}}],["ispersonraw",{"_index":1109,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["ispersonraw(data",{"_index":1110,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["isplayerraw",{"_index":998,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["isplayerraw(data",{"_index":999,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["isready",{"_index":4393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isteamraw",{"_index":1070,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["isteamraw(data",{"_index":1071,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["istimepickeropen",{"_index":2619,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["istrapiauthentication",{"_index":800,"title":{"interfaces/IStrapiAuthentication.html":{}},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/variables.html":{}}}],["isvisitorteammodalopen",{"_index":2620,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["it's",{"_index":4014,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["italian",{"_index":1730,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["iteamrepository",{"_index":1676,"title":{"interfaces/ITeamRepository.html":{}},"body":{"interfaces/ITeamRepository.html":{},"injectables/TeamService.html":{}}}],["iteamservice",{"_index":1678,"title":{"interfaces/ITeamService.html":{}},"body":{"interfaces/ITeamService.html":{},"injectables/TeamService.html":{}}}],["item",{"_index":1794,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["items",{"_index":761,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/PaginatedRaw.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["iuserrepository",{"_index":1682,"title":{"interfaces/IUserRepository.html":{}},"body":{"interfaces/IUserRepository.html":{},"injectables/UsersService.html":{}}}],["iuserservice",{"_index":1684,"title":{"interfaces/IUserService.html":{}},"body":{"interfaces/IUserService.html":{},"injectables/UsersService.html":{}}}],["json",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{},"miscellaneous/variables.html":{}}}],["json.parse(data",{"_index":1197,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["json.stringify",{"_index":1179,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["json.stringify(this._items",{"_index":864,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["jsonserverrepositoryservice",{"_index":1691,"title":{"injectables/JsonServerRepositoryService.html":{}},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["juego",{"_index":3074,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["jugador",{"_index":3457,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["jugadores",{"_index":1212,"title":{},"body":{"directives/FilterByTeamDirective.html":{},"index.html":{}}}],["jugadoresenplantilla",{"_index":3913,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["jugadoresenplantilla:data.numberofplayers",{"_index":3916,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["jugando",{"_index":3149,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["jugar",{"_index":2962,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["justify",{"_index":2005,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["jwt",{"_index":1464,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["jwt_token",{"_index":3819,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["jwt_token:string|null",{"_index":3833,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["key",{"_index":1635,"title":{},"body":{"interfaces/IBaseRepository.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"interfaces/SearchParams.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["keyof",{"_index":3571,"title":{},"body":{"components/ProfilePage.html":{}}}],["k}_like=${v",{"_index":1705,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["la",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"directives/DragDropDirective.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/StatisticsPage.html":{},"injectables/StrapiRepositoryService.html":{},"directives/TimeDirectiveDirective.html":{},"index.html":{}}}],["label",{"_index":1833,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["labels",{"_index":2032,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["lang",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["lang.code",{"_index":1758,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["lang.name",{"_index":1786,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["lang?.shortcode",{"_index":1787,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["lang_key",{"_index":1888,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language",{"_index":71,"title":{"interfaces/Language.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["languages",{"_index":1724,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["languageselectorcomponent",{"_index":70,"title":{"components/LanguageSelectorComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["languageservice",{"_index":28,"title":{"injectables/LanguageService.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{}}}],["large",{"_index":1116,"title":{"interfaces/Large.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LeaguesPage.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"injectables/PlayerMappingFirebase.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Team.html":{},"injectables/TeamMappingFirebase.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["large:data.picture.large",{"_index":4040,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["large:string",{"_index":4030,"title":{},"body":{"interfaces/UserRaw.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["las",{"_index":1351,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"index.html":{}}}],["last",{"_index":1704,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["last:string",{"_index":4027,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["lastdoc",{"_index":724,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["lastvaluefrom",{"_index":179,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/ProfilePage.html":{},"components/TeamSelectableComponent.html":{}}}],["lastvaluefrom(this.leaguesvc.getbyid(id",{"_index":2194,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["lastvaluefrom(this.mediasvc.upload(blob",{"_index":2364,"title":{},"body":{"components/LeaguesPage.html":{},"components/ProfilePage.html":{}}}],["lastvaluefrom(this.teamsvc.getbyid(id",{"_index":3969,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["lastvaluefrom(this.translatesvc.get('common.error.load",{"_index":3560,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.userservice.getbyuserid(authuser.id",{"_index":194,"title":{},"body":{"guards/AdminGuard.html":{}}}],["lastvaluefrom(this.usersvc.getbyuserid(authuser.id",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["lastvaluefrom(this.usersvc.getbyuserid(user.id",{"_index":3550,"title":{},"body":{"components/ProfilePage.html":{}}}],["lastvaluefrom(this.usersvc.update(this.user.id",{"_index":3576,"title":{},"body":{"components/ProfilePage.html":{}}}],["layout",{"_index":2420,"title":{},"body":{"components/LeaguesPage.html":{}}}],["league",{"_index":74,"title":{"interfaces/League.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/FirebaseTeam.html":{},"components/HomePage.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/ITeamService.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw-1.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["league(_league:league",{"_index":1953,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["league):leaguedata",{"_index":930,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{}}}],["league):leagueraw",{"_index":2050,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{}}}],["league.id",{"_index":2346,"title":{},"body":{"components/LeaguesPage.html":{}}}],["league.model",{"_index":2072,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{}}}],["league.model.ts",{"_index":1361,"title":{},"body":{"interfaces/FirebaseLeague.html":{}}}],["league.name",{"_index":2216,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["league.split('/').pop",{"_index":3985,"title":{},"body":{"injectables/TeamService.html":{}}}],["league:data.idliga",{"_index":3925,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["league:league|undefined=undefined",{"_index":2352,"title":{},"body":{"components/LeaguesPage.html":{}}}],["league?.name",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["league?.picture?.url",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["league_api_url_token",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["league_collection_subscription_token",{"_index":2300,"title":{},"body":{"components/LeaguesPage.html":{},"miscellaneous/variables.html":{}}}],["league_repository_mapping_token",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["league_repository_token",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"injectables/LeagueService.html":{},"miscellaneous/variables.html":{}}}],["league_resource_name_token",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["league_selectable.none",{"_index":2214,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["league_selectable.select_league",{"_index":2213,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["leagueattributes",{"_index":918,"title":{"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["leaguecollectionsubscriptionfactory",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["leaguecreatemodalcomponent",{"_index":73,"title":{"components/LeagueCreateModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["leaguedata",{"_index":925,"title":{"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["leaguefav",{"_index":1416,"title":{},"body":{"interfaces/FirebaseUser.html":{},"components/LeaguesPage.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{}}}],["leaguefav?:documentreference",{"_index":1430,"title":{},"body":{"interfaces/FirebaseUser.html":{}}}],["leaguefav?:string",{"_index":4048,"title":{},"body":{"interfaces/Users.html":{}}}],["leagueid",{"_index":2285,"title":{},"body":{"components/LeaguesPage.html":{},"injectables/TeamService.html":{}}}],["leagueimg",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["leaguejsonserverstoragemapping",{"_index":2041,"title":{"injectables/LeagueJsonServerStorageMapping.html":{}},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{}}}],["leaguemappingfirebase",{"_index":475,"title":{"injectables/LeagueMappingFirebase.html":{}},"body":{"modules/AppModule.html":{},"injectables/LeagueMappingFirebase.html":{}}}],["leaguemappingstrapi",{"_index":453,"title":{"injectables/LeagueMappingStrapi.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Data.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{}}}],["leagueraw",{"_index":923,"title":{"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{}}}],["leagueraw):league",{"_index":958,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{}}}],["leagues",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/HomePage.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["leagues'},{'name",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["leagues.create",{"_index":2405,"title":{},"body":{"components/LeaguesPage.html":{}}}],["leagues.edit",{"_index":1984,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["leagues.errors.name_min_length",{"_index":1987,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["leagues.errors.name_required",{"_index":1986,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["leagues.errors.pattern",{"_index":3902,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["leagues.new",{"_index":1985,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["leagues.page",{"_index":2471,"title":{},"body":{"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{}}}],["leagues.page.html",{"_index":2249,"title":{},"body":{"components/LeaguesPage.html":{}}}],["leagues.page.scss",{"_index":2248,"title":{},"body":{"components/LeaguesPage.html":{}}}],["leagues.submit",{"_index":1989,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["leagues.title",{"_index":1556,"title":{},"body":{"components/HomePage.html":{},"components/LeaguesPage.html":{}}}],["leagues.update",{"_index":1988,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["leaguesarray",{"_index":2390,"title":{},"body":{"components/LeaguesPage.html":{}}}],["leaguesarray.splice(event.fromindex",{"_index":2397,"title":{},"body":{"components/LeaguesPage.html":{}}}],["leaguesarray.splice(event.toindex",{"_index":2401,"title":{},"body":{"components/LeaguesPage.html":{}}}],["leagueselectablecomponent",{"_index":77,"title":{"components/LeagueSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["leagueselected",{"_index":2103,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["leagueselected.name",{"_index":2215,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["leagueselected:league",{"_index":2168,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["leagueservice",{"_index":224,"title":{"injectables/LeagueService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{}}}],["leaguesmappingfactory",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["leaguespage",{"_index":79,"title":{"components/LeaguesPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["leaguespagemodule",{"_index":2465,"title":{"modules/LeaguesPageModule.html":{}},"body":{"modules/LeaguesPageModule.html":{},"modules.html":{},"overview.html":{}}}],["leaguespageroutingmodule",{"_index":2469,"title":{"modules/LeaguesPageRoutingModule.html":{}},"body":{"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["leaguesrepositoryfactory",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["leaguesubs",{"_index":2268,"title":{},"body":{"components/LeaguesPage.html":{}}}],["leaguesvc",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["leaguesvc:leagueservice",{"_index":2172,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["left",{"_index":2038,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["legend",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"modules/MatchesPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"modules/PlayersPageModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"modules/TeamsPageModule.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"overview.html":{}}}],["liga",{"_index":2374,"title":{},"body":{"components/LeaguesPage.html":{}}}],["ligas",{"_index":4229,"title":{},"body":{"index.html":{}}}],["ligeramente",{"_index":3394,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["light",{"_index":1488,"title":{},"body":{"directives/HighLightDirective.html":{},"modules/SharedModule.html":{}}}],["light.directive",{"_index":3684,"title":{},"body":{"modules/SharedModule.html":{}}}],["light.directive.ts",{"_index":1490,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["light.directive.ts:17",{"_index":1507,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["light.directive.ts:24",{"_index":1508,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["light.directive.ts:28",{"_index":1506,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["light.directive.ts:33",{"_index":1512,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["light.directive.ts:37",{"_index":1515,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["light.directive.ts:7",{"_index":1505,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["light.directive.ts:8",{"_index":1517,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["light.directive.ts:9",{"_index":1500,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["limit",{"_index":691,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["limit(pagesize",{"_index":721,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["limpia",{"_index":3244,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["limpiar",{"_index":1349,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["linear",{"_index":2416,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["lineups",{"_index":2475,"title":{},"body":{"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{}}}],["lineups'},{'name",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["lineups.local",{"_index":2528,"title":{},"body":{"components/LineupsPage.html":{}}}],["lineups.page",{"_index":2541,"title":{},"body":{"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{}}}],["lineups.page.html",{"_index":2477,"title":{},"body":{"components/LineupsPage.html":{}}}],["lineups.page.scss",{"_index":2476,"title":{},"body":{"components/LineupsPage.html":{}}}],["lineups.title",{"_index":2522,"title":{},"body":{"components/LineupsPage.html":{}}}],["lineups.visitor",{"_index":2534,"title":{},"body":{"components/LineupsPage.html":{}}}],["lineups/:id",{"_index":568,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lineupspage",{"_index":81,"title":{"components/LineupsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["lineupspagemodule",{"_index":2535,"title":{"modules/LineupsPageModule.html":{}},"body":{"modules/LineupsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["lineupspageroutingmodule",{"_index":2539,"title":{"modules/LineupsPageRoutingModule.html":{}},"body":{"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["link",{"_index":1559,"title":{},"body":{"components/HomePage.html":{}}}],["list",{"_index":1848,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["lista",{"_index":1174,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["literal",{"_index":1239,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/League.html":{},"components/LeaguesPage.html":{},"interfaces/MatchStatistics.html":{},"interfaces/Player.html":{},"interfaces/Team.html":{},"interfaces/UserRaw.html":{},"interfaces/Users.html":{}}}],["lo",{"_index":1250,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"directives/TimeDirectiveDirective.html":{}}}],["loadchildren",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadedids",{"_index":2253,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["loader",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginPageModule.html":{},"dependencies.html":{}}}],["loadfavoritenames",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["loadfavoritenames(user",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["loading",{"_index":2510,"title":{},"body":{"components/LineupsPage.html":{},"interfaces/MatchWithTeams-1.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["loading.dismiss",{"_index":3565,"title":{},"body":{"components/ProfilePage.html":{}}}],["loading.present",{"_index":3547,"title":{},"body":{"components/ProfilePage.html":{}}}],["loadingcontroller",{"_index":3532,"title":{},"body":{"components/ProfilePage.html":{}}}],["loadingctrl",{"_index":3531,"title":{},"body":{"components/ProfilePage.html":{}}}],["loadingstats",{"_index":3052,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["loadleagues",{"_index":2108,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["loadleagues(filter",{"_index":2126,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["loadmatch",{"_index":2483,"title":{},"body":{"components/LineupsPage.html":{}}}],["loadmatchdata",{"_index":3082,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["loadmoreleagues",{"_index":2109,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["loadmoreleagues(notify",{"_index":2128,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["loadmoreleagues(notify:htmlioninfinitescrollelement",{"_index":2183,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["loadmoreteams",{"_index":3946,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["loadmoreteams(notify",{"_index":3953,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["loadmoreteams(notify:htmlioninfinitescrollelement",{"_index":3963,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["loadteams",{"_index":3169,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"components/TeamSelectableComponent.html":{}}}],["loadteamsandplayers",{"_index":2484,"title":{},"body":{"components/LineupsPage.html":{}}}],["loadusers",{"_index":4096,"title":{},"body":{"components/UsersPage.html":{}}}],["loadusers(event",{"_index":4100,"title":{},"body":{"components/UsersPage.html":{}}}],["local",{"_index":831,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{},"miscellaneous/variables.html":{}}}],["local?.trim",{"_index":3100,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["locale",{"_index":3997,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["locale_id",{"_index":4002,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["localgoals",{"_index":3049,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["localplayers",{"_index":2478,"title":{},"body":{"components/LineupsPage.html":{}}}],["localscore",{"_index":3004,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["localstorage.getitem('people",{"_index":3838,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.getitem(this.lang_key",{"_index":1909,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.removeitem('people",{"_index":3856,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.setitem(\"people",{"_index":3847,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.setitem(this.lang_key",{"_index":1911,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem(this.resource",{"_index":863,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["localteam",{"_index":2479,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["localteam.name",{"_index":2523,"title":{},"body":{"components/LineupsPage.html":{}}}],["localteam?.name",{"_index":3751,"title":{},"body":{"components/StatisticsPage.html":{}}}],["localteamid",{"_index":1366,"title":{},"body":{"interfaces/FirebaseMatch.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{}}}],["localteamname",{"_index":2841,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["localteamraw",{"_index":3086,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["localvalue",{"_index":1376,"title":{},"body":{"interfaces/FirebaseMatchStatistics.html":{},"interfaces/MatchStatistics.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["logica",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["login",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["login.button_login",{"_index":2596,"title":{},"body":{"components/LoginPage.html":{}}}],["login.button_register",{"_index":2598,"title":{},"body":{"components/LoginPage.html":{}}}],["login.email",{"_index":2591,"title":{},"body":{"components/LoginPage.html":{}}}],["login.errors.incorrect_email",{"_index":2594,"title":{},"body":{"components/LoginPage.html":{}}}],["login.errors.incorrect_password",{"_index":2595,"title":{},"body":{"components/LoginPage.html":{}}}],["login.errors.required",{"_index":2593,"title":{},"body":{"components/LoginPage.html":{}}}],["login.not_account",{"_index":2597,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page",{"_index":2607,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":2545,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":2544,"title":{},"body":{"components/LoginPage.html":{}}}],["login.password",{"_index":2592,"title":{},"body":{"components/LoginPage.html":{}}}],["login.title",{"_index":2590,"title":{},"body":{"components/LoginPage.html":{}}}],["loginform",{"_index":2547,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":83,"title":{"components/LoginPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["loginpagemodule",{"_index":2600,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules.html":{},"overview.html":{}}}],["loginpageroutingmodule",{"_index":2604,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["loginsuccess",{"_index":583,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["loginsuccessobs",{"_index":584,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["logo",{"_index":3777,"title":{},"body":{"components/StatisticsPage.html":{}}}],["logos",{"_index":3774,"title":{},"body":{"components/StatisticsPage.html":{}}}],["logout",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["logueado",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["los",{"_index":1638,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/IUserService.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerModalComponent.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"components/StatisticsPage.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["lottie",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"dependencies.html":{}}}],["lottiecomponent",{"_index":3697,"title":{},"body":{"components/SplashPage.html":{}}}],["lottiefiles/dotlottie",{"_index":4174,"title":{},"body":{"dependencies.html":{}}}],["lugar",{"_index":2859,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"index.html":{}}}],["lógica",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["m",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.aboutpagemodule",{"_index":560,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.leaguespagemodule",{"_index":544,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.lineupspagemodule",{"_index":570,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.matchespagemodule",{"_index":565,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.playerspagemodule",{"_index":550,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":563,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.registerpagemodule",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.splashpagemodule",{"_index":558,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.statisticspagemodule",{"_index":573,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.teamspagemodule",{"_index":547,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.userspagemodule",{"_index":567,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["make",{"_index":2231,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["maneja",{"_index":1251,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"components/PictureSelectableComponent.html":{}}}],["manera",{"_index":3019,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"index.html":{}}}],["mantiene",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["map",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"injectables/UsersService.html":{}}}],["map(([isauthenticated",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["map(([k",{"_index":1031,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["map(doc",{"_index":768,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(docref",{"_index":774,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(entity",{"_index":780,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(isloggedin",{"_index":4400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(lastdoc",{"_index":719,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(res",{"_index":4148,"title":{},"body":{"injectables/UsersService.html":{}}}],["map(snapshot",{"_index":757,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(url",{"_index":1410,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["map(user",{"_index":1308,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/UsersService.html":{}}}],["map(usercredential",{"_index":1301,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["mappeddata",{"_index":986,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["mappeddata.birthdate=data[key",{"_index":992,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["mappeddata.dorsal=data[key",{"_index":994,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["mappeddata.firstsurname=data[key",{"_index":989,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["mappeddata.league=data[key",{"_index":1069,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["mappeddata.name",{"_index":1101,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["mappeddata.name=data[key",{"_index":988,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{}}}],["mappeddata.nationality=data[key",{"_index":993,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["mappeddata.nmatches=data[key",{"_index":1068,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["mappeddata.numberofplayers=data[key",{"_index":1066,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["mappeddata.picture",{"_index":1106,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["mappeddata.position=data[key",{"_index":995,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["mappeddata.pts=data[key",{"_index":1067,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["mappeddata.secondsurname=data[key",{"_index":990,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["mappeddata.surname",{"_index":1103,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["mappeddata.team=data[key",{"_index":996,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["mappeddata.user",{"_index":1105,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["mapping",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"miscellaneous/variables.html":{}}}],["mapping.interface",{"_index":623,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/GroupRaw.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["mapping.interface.ts",{"_index":1587,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:10",{"_index":1619,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:11",{"_index":1616,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:12",{"_index":1620,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:13",{"_index":1621,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:5",{"_index":1590,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["mapping.interface.ts:6",{"_index":1592,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["mapping.interface.ts:7",{"_index":1589,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:8",{"_index":1591,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:9",{"_index":1588,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{}}}],["mapping.service",{"_index":3832,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["mapping.service.ts",{"_index":1227,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["mapping.service.ts:15",{"_index":1243,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:22",{"_index":1235,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:29",{"_index":1241,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:36",{"_index":1232,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping.service.ts:59",{"_index":3815,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:65",{"_index":3817,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:72",{"_index":3814,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:79",{"_index":3816,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:87",{"_index":3813,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:9",{"_index":1237,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["mapping:iauthmapping",{"_index":4369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapping:ibasemapping",{"_index":816,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["mappingtoken",{"_index":4206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["margin",{"_index":1810,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["match",{"_index":86,"title":{"interfaces/Match.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/HomePage.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["match!.localteamid",{"_index":3088,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["match!.visitorteamid",{"_index":3091,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["match(_match:match",{"_index":2674,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["match.day",{"_index":2526,"title":{},"body":{"components/LineupsPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["match.day.tostring().split",{"_index":2984,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match.hour",{"_index":2527,"title":{},"body":{"components/LineupsPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["match.hour.tostring().split",{"_index":2986,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match.id",{"_index":2982,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match.localteam?.name",{"_index":3021,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match.localteamid",{"_index":2941,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match.place",{"_index":3008,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match.result",{"_index":2999,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match.status",{"_index":2981,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"components/StatisticsPage.html":{}}}],["match.visitorteam?.name",{"_index":3022,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match.visitorteamid",{"_index":2944,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match:match|undefined=undefined",{"_index":2955,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["match_api_url_token",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["match_collection_subscription_token",{"_index":4311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match_repository_mapping_token",{"_index":4312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match_repository_token",{"_index":2882,"title":{},"body":{"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"miscellaneous/variables.html":{}}}],["match_resource_name_token",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["match_stats_api_url_token",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["match_stats_collection_subscription_token",{"_index":4313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match_stats_repository_mapping_token",{"_index":4314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match_stats_repository_token",{"_index":2902,"title":{},"body":{"injectables/MatchStatsService.html":{},"miscellaneous/variables.html":{}}}],["match_stats_resource_name_token",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matchcollectionsubscriptionfactory",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matchcreatecomponent",{"_index":85,"title":{"components/MatchCreateComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["matchdate",{"_index":2992,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["matchday",{"_index":2846,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["matchday}\\n",{"_index":2867,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["matches",{"_index":503,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/HomePage.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{}}}],["matches'},{'name",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["matches.edit",{"_index":2710,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matches.model",{"_index":2765,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["matches.model.ts",{"_index":1363,"title":{},"body":{"interfaces/FirebaseMatch.html":{}}}],["matches.new",{"_index":2711,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matches.page",{"_index":3200,"title":{},"body":{"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{}}}],["matches.page.html",{"_index":2910,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["matches.page.scss",{"_index":2911,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["matches.select_date'|translate",{"_index":2717,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matches.select_date\\'|translate",{"_index":2754,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matches.select_time'|translate",{"_index":2719,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matches.select_time\\'|translate",{"_index":2755,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matches.submit",{"_index":2723,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matches.team_local",{"_index":2720,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matches.team_visitor",{"_index":2721,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matches.title",{"_index":1568,"title":{},"body":{"components/HomePage.html":{}}}],["matches.update",{"_index":2722,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["matchesarray",{"_index":3039,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["matchesarray.splice(event.fromindex",{"_index":3040,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["matchesarray.splice(event.toindex",{"_index":3041,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["matchespage",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["matchespagemodule",{"_index":3194,"title":{"modules/MatchesPageModule.html":{}},"body":{"modules/MatchesPageModule.html":{},"modules.html":{},"overview.html":{}}}],["matchespageroutingmodule",{"_index":3198,"title":{"modules/MatchesPageRoutingModule.html":{}},"body":{"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matcheswithteams",{"_index":2938,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["matchhour",{"_index":2850,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["matchhour}\\n",{"_index":2869,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["matchid",{"_index":1374,"title":{},"body":{"interfaces/FirebaseMatchStatistics.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["matching",{"_index":127,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchmappingfactory",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matchmappingfirebase",{"_index":2756,"title":{"injectables/MatchMappingFirebase.html":{}},"body":{"injectables/MatchMappingFirebase.html":{}}}],["matchmenucomponent",{"_index":90,"title":{"components/MatchMenuComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["matchplace",{"_index":2857,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["matchplace}\\n",{"_index":2871,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["matchrepositoryfactory",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matchresult",{"_index":2860,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["matchservice",{"_index":479,"title":{"injectables/MatchService.html":{}},"body":{"modules/AppModule.html":{},"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["matchstatistic",{"_index":4378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matchstatistics",{"_index":504,"title":{"interfaces/MatchStatistics.html":{}},"body":{"modules/AppModule.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["matchstatistics.model",{"_index":2893,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["matchstatistics.model.ts",{"_index":1373,"title":{},"body":{"interfaces/FirebaseMatchStatistics.html":{}}}],["matchstatisticsmappingfirebase",{"_index":2886,"title":{"injectables/MatchStatisticsMappingFirebase.html":{}},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["matchstatscollectionsubscriptionfactory",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matchstatsmappingfactory",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matchstatsrepositoryfactory",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matchstatsservice",{"_index":481,"title":{"injectables/MatchStatsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["matchsubs",{"_index":2917,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["matchsvc",{"_index":2486,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["matchwithteams",{"_index":2801,"title":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{}},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["math.ceil(this._items.length",{"_index":851,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["math.ceil(total/pagesize",{"_index":2076,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["math.floor(math.random",{"_index":3005,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["math.max(0",{"_index":3165,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["math.min",{"_index":854,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["math.min(100",{"_index":3166,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["math.random",{"_index":3164,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["math.round(randomvalue",{"_index":3168,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["max",{"_index":1856,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["mayor",{"_index":3792,"title":{},"body":{"components/StatisticsPage.html":{}}}],["mb",{"_index":4126,"title":{},"body":{"components/UsersPage.html":{}}}],["me():observable",{"_index":633,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["me(response",{"_index":1230,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["me(response:any):user",{"_index":1597,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["measurementid",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":2023,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["media.service",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeaguesPage.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["media.service.ts",{"_index":634,"title":{},"body":{"injectables/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/typealiases.html":{}}}],["media.service.ts:109",{"_index":3862,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["media.service.ts:18",{"_index":1380,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["media.service.ts:8",{"_index":638,"title":{},"body":{"injectables/BaseMediaService.html":{}}}],["media.service.ts:99",{"_index":3861,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["medianas",{"_index":2450,"title":{},"body":{"components/LeaguesPage.html":{}}}],["mediante",{"_index":4258,"title":{},"body":{"index.html":{}}}],["mediaraw",{"_index":922,"title":{"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["mediaservicefactory",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mediasvc",{"_index":2267,"title":{},"body":{"components/LeaguesPage.html":{},"components/ProfilePage.html":{}}}],["mediasvc:basemediaservice",{"_index":3545,"title":{},"body":{"components/ProfilePage.html":{}}}],["medium",{"_index":1118,"title":{"interfaces/Medium.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LeaguesPage.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"injectables/PlayerMappingFirebase.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Team.html":{},"injectables/TeamMappingFirebase.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["medium:data.picture.medium",{"_index":4041,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["medium:string",{"_index":4031,"title":{},"body":{"interfaces/UserRaw.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["mejor",{"_index":2733,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["mejoramos",{"_index":2452,"title":{},"body":{"components/LeaguesPage.html":{}}}],["mensaje",{"_index":3037,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"components/StatisticsPage.html":{}}}],["menu",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["menu'},{'name",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["menu.about",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.component",{"_index":3687,"title":{},"body":{"modules/SharedModule.html":{}}}],["menu.component.html",{"_index":2792,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["menu.component.scss",{"_index":2791,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["menu.component.ts",{"_index":2790,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["menu.component.ts:24",{"_index":2802,"title":{},"body":{"components/MatchMenuComponent.html":{}}}],["menu.component.ts:25",{"_index":2799,"title":{},"body":{"components/MatchMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":2804,"title":{},"body":{"components/MatchMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":2805,"title":{},"body":{"components/MatchMenuComponent.html":{}}}],["menu.component.ts:68",{"_index":2806,"title":{},"body":{"components/MatchMenuComponent.html":{}}}],["menu.component.ts:74",{"_index":2807,"title":{},"body":{"components/MatchMenuComponent.html":{}}}],["menu.component.ts:79",{"_index":2803,"title":{},"body":{"components/MatchMenuComponent.html":{}}}],["menu.home",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.leagues",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.logout",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["menu.matches",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.users",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["menu/match",{"_index":2789,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/SharedModule.html":{}}}],["mergemap",{"_index":697,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["mergemap(q",{"_index":755,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["message",{"_index":3034,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{}}}],["messagingsenderid",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":924,"title":{"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseMediaService.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"pipes/PasswordTogglePipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{}}}],["metadata)).pipe",{"_index":1407,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"directives/HighLightDirective.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"pipes/PasswordTogglePipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamCreateModalComponent.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"directives/TimeDirectiveDirective.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{}}}],["meurl",{"_index":3822,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["meurl:string",{"_index":4368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mime",{"_index":1444,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["min",{"_index":1993,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["minute",{"_index":2855,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["minute].some(isnan",{"_index":2991,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["minuto",{"_index":2925,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["miscellaneous",{"_index":4187,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":2714,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["mockuplist:any",{"_index":849,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["modal",{"_index":1917,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modal'},{'name",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["modal.component",{"_index":2303,"title":{},"body":{"components/LeaguesPage.html":{},"modules/SharedModule.html":{}}}],["modal.component.html",{"_index":1919,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modal.component.scss",{"_index":1918,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts",{"_index":1916,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:102",{"_index":3332,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:106",{"_index":3334,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:11",{"_index":3455,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["modal.component.ts:110",{"_index":3311,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:12",{"_index":3882,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:123",{"_index":3313,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:13",{"_index":1940,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:136",{"_index":3310,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:14",{"_index":1943,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:15",{"_index":1941,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:16",{"_index":3316,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{}}}],["modal.component.ts:17",{"_index":3315,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:18",{"_index":1934,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{}}}],["modal.component.ts:22",{"_index":3309,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:24",{"_index":1932,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["modal.component.ts:25",{"_index":3879,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:35",{"_index":3308,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:40",{"_index":1938,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["modal.component.ts:42",{"_index":1947,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:44",{"_index":3885,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:46",{"_index":1937,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["modal.component.ts:48",{"_index":3887,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:52",{"_index":3889,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:56",{"_index":3890,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:58",{"_index":3314,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:59",{"_index":1939,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["modal.component.ts:61",{"_index":3881,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:62",{"_index":3312,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:72",{"_index":1935,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:74",{"_index":3319,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:78",{"_index":3321,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:82",{"_index":3323,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:86",{"_index":3325,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:87",{"_index":3880,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["modal.component.ts:90",{"_index":3327,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:94",{"_index":3328,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.component.ts:98",{"_index":3330,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["modal.ondiddismiss().then(async",{"_index":2356,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["modal.present",{"_index":2378,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["modal/league",{"_index":1915,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"modules/SharedModule.html":{}}}],["modal/player",{"_index":3306,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"modules/SharedModule.html":{}}}],["modal/team",{"_index":3668,"title":{},"body":{"modules/SharedModule.html":{},"components/TeamCreateModalComponent.html":{}}}],["modalcontroller",{"_index":1930,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modalctrl",{"_index":1929,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["modalctrl:modalcontroller",{"_index":1960,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["mode",{"_index":1922,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["mode:'new'|'edit",{"_index":1951,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["mode=='edit",{"_index":1983,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["mode==\\'edit",{"_index":2040,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["model",{"_index":704,"title":{"interfaces/Model.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/League.html":{},"interfaces/Match.html":{},"interfaces/MatchStatistics.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Player.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/Users.html":{}}}],["modelo",{"_index":809,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["models/auth.model",{"_index":624,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["models/base.model",{"_index":705,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["models/firebase",{"_index":2071,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["models/leagues.model",{"_index":919,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"injectables/LeagueService.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{}}}],["models/matches.model",{"_index":1660,"title":{},"body":{"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchService.html":{}}}],["models/matchstatistics.model",{"_index":1665,"title":{},"body":{"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{}}}],["models/paginated.model",{"_index":707,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/GroupRaw.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ITeamService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"injectables/TeamService.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["models/players.model",{"_index":964,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{},"injectables/UsersMappingFirebase.html":{}}}],["models/teams.model",{"_index":1058,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"injectables/TeamService.html":{}}}],["models/users.model",{"_index":1081,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{}}}],["modeltype",{"_index":4203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modified",{"_index":910,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["module",{"_index":128,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{},"overview.html":{}}}],["modules",{"_index":130,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":2691,"title":{},"body":{"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{}}}],["moreno",{"_index":55,"title":{},"body":{"components/AboutPage.html":{}}}],["mostramos",{"_index":3031,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["mostrar",{"_index":2836,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["mostrarlo",{"_index":2831,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["mouse",{"_index":1541,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["mouseenter",{"_index":1498,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["mouseevent",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["mouseleave",{"_index":1499,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["moveditem",{"_index":2396,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["multi",{"_index":1723,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["más",{"_index":1425,"title":{},"body":{"interfaces/FirebaseUser.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/Users.html":{}}}],["máxima",{"_index":1860,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["máximo",{"_index":2734,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["método",{"_index":3189,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["métodos",{"_index":1688,"title":{},"body":{"interfaces/IUserService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["móvil",{"_index":4221,"title":{},"body":{"index.html":{}}}],["nacionalidad",{"_index":3406,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["nacionalidad:data.nationality",{"_index":3413,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name:data.name",{"_index":931,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["name:data.name.first",{"_index":4037,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["name:data.nombre",{"_index":2058,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["name:string",{"_index":1419,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{},"interfaces/Users.html":{}}}],["naranja",{"_index":3764,"title":{},"body":{"components/StatisticsPage.html":{}}}],["nationality",{"_index":975,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["nationality:data.nacionalidad",{"_index":3428,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["nativo",{"_index":3027,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["navegación",{"_index":4242,"title":{},"body":{"index.html":{}}}],["navegadores",{"_index":1996,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{}}}],["navigator.share",{"_index":2877,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["ndice",{"_index":1171,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["necesidades",{"_index":1863,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["necesitamos",{"_index":1249,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["necesites",{"_index":1637,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["netlify",{"_index":4281,"title":{},"body":{"index.html":{}}}],["new",{"_index":187,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"directives/DragDropDirective.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/Large.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"components/TeamCreateModalComponent.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{},"components/TeamSelectableComponent.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":834,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["newid():string",{"_index":845,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["newleague",{"_index":2358,"title":{},"body":{"components/LeaguesPage.html":{}}}],["newleague).subscribe",{"_index":2377,"title":{},"body":{"components/LeaguesPage.html":{}}}],["newleaguefav",{"_index":2347,"title":{},"body":{"components/LeaguesPage.html":{}}}],["newmatch",{"_index":2957,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["newresult",{"_index":2998,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["newstats",{"_index":3128,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["newstats.userid",{"_index":3137,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["newstats[key",{"_index":3142,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["newstatus",{"_index":2997,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["next",{"_index":1703,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/PaginatedRaw.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{}}}],["next:(resp",{"_index":3840,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["next:(response",{"_index":2333,"title":{},"body":{"components/LeaguesPage.html":{}}}],["next:(response:paginated",{"_index":2326,"title":{},"body":{"components/LeaguesPage.html":{}}}],["next:res",{"_index":2372,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["next:response",{"_index":2178,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["ng_value_accessor",{"_index":1719,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":145,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["ngonchanges",{"_index":1204,"title":{},"body":{"directives/FilterByTeamDirective.html":{},"directives/TimeDirectiveDirective.html":{}}}],["ngondestroy",{"_index":1313,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["ngoninit",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["ngx",{"_index":43,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LanguageService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"directives/TimeDirectiveDirective.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{}}}],["nmatches",{"_index":1060,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{}}}],["node.js",{"_index":4276,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":812,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/GroupRaw.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{},"index.html":{}}}],["nombre:data.name",{"_index":2052,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["nombres",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/StatisticsPage.html":{}}}],["none",{"_index":1195,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["note",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["notify",{"_index":2131,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/TeamSelectableComponent.html":{}}}],["notify?.complete",{"_index":2187,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/TeamSelectableComponent.html":{}}}],["nousers",{"_index":4123,"title":{},"body":{"components/UsersPage.html":{}}}],["now",{"_index":2978,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["nueva",{"_index":2400,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/PictureSelectableComponent.html":{}}}],["null",{"_index":771,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":666,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ITeamService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"injectables/MatchMappingFirebase.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["number(basevalue",{"_index":3157,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["number(data[key",{"_index":997,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["number(randomvalue.tofixed(0",{"_index":3167,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["numberofplayers",{"_index":968,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{}}}],["numberofplayers:data.jugadoresenplantilla",{"_index":3924,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["number|null",{"_index":1702,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["numeric",{"_index":2693,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["o",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{},"components/StatisticsPage.html":{}}}],["obj",{"_index":2153,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["object",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeaguesPage.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"components/ProfilePage.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{},"miscellaneous/variables.html":{}}}],["object.entries(filters",{"_index":1030,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["object.entries(filters).foreach(([field",{"_index":728,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["object.keys(data).foreach(key",{"_index":934,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["object.keys(formgroup.controls).foreach(key",{"_index":1970,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["object.keys(newstats).foreach(key",{"_index":3141,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":3568,"title":{},"body":{"components/ProfilePage.html":{}}}],["objeto",{"_index":3359,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["observable",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlayerService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SearchParams.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"injectables/UsersService.html":{}}}],["obtener",{"_index":4399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oculta",{"_index":1994,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{}}}],["of(null",{"_index":4158,"title":{},"body":{"injectables/UsersService.html":{}}}],["of(this.auth.currentuser).pipe",{"_index":1307,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["of(this.mapping.getadded(entity",{"_index":865,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(this.mapping.getdeleted(entity",{"_index":875,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(this.mapping.getone(this._items.find(item=>item.id",{"_index":857,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(this.mapping.getupdated(this._items[index",{"_index":869,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["of(true).pipe(tap(_",{"_index":3855,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["ofrece",{"_index":4226,"title":{},"body":{"index.html":{}}}],["ok",{"_index":2385,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["onaddleague",{"_index":2257,"title":{},"body":{"components/LeaguesPage.html":{}}}],["onaddmatch",{"_index":2972,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["onanimationcreated",{"_index":3701,"title":{},"body":{"components/SplashPage.html":{}}}],["onanimationcreated(animationitem",{"_index":3705,"title":{},"body":{"components/SplashPage.html":{}}}],["onauthstatechanged",{"_index":1283,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["onauthstatechanged(this.auth",{"_index":1288,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["onchange",{"_index":1746,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/PositionSelectableComponent.html":{}}}],["onchange(event",{"_index":3521,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["onchangecallback",{"_index":3516,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["onchangepicture",{"_index":3232,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":3246,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event:event",{"_index":3285,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchanges",{"_index":1202,"title":{},"body":{"directives/FilterByTeamDirective.html":{},"directives/TimeDirectiveDirective.html":{}}}],["ondatechange",{"_index":2623,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["ondatechange(event",{"_index":2641,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["ondeleteleague",{"_index":2258,"title":{},"body":{"components/LeaguesPage.html":{}}}],["ondeleteleague(league",{"_index":2275,"title":{},"body":{"components/LeaguesPage.html":{}}}],["ondeletematch(match",{"_index":2974,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["ondeletepicture",{"_index":3233,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":3251,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event:event",{"_index":3300,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondestroy",{"_index":3226,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondragend",{"_index":1131,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragend(event",{"_index":1158,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragleave",{"_index":1132,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragleave(event",{"_index":1161,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragover",{"_index":1133,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragover(event",{"_index":1163,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragstart",{"_index":1134,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragstart(event",{"_index":1165,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondrop",{"_index":1135,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/HighLightDirective.html":{}}}],["ondrop(event",{"_index":1167,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["onfilter",{"_index":2110,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["onfilter(evt",{"_index":2134,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["onfilter(evt:any",{"_index":2202,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["onforgotpassword",{"_index":2548,"title":{},"body":{"components/LoginPage.html":{}}}],["ongroupclicked",{"_index":2111,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["ongroupclicked(popover",{"_index":2137,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["ongroupclicked(popover:ionpopover",{"_index":2204,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["onleaguedropped",{"_index":2259,"title":{},"body":{"components/LeaguesPage.html":{}}}],["onleaguedropped(event",{"_index":2277,"title":{},"body":{"components/LeaguesPage.html":{}}}],["onloadleagues",{"_index":2112,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["onloadteams",{"_index":3947,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["onlocalteammouseenter",{"_index":2624,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["onlocalteammouseleave",{"_index":2625,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["onlogin",{"_index":3597,"title":{},"body":{"components/RegisterPage.html":{}}}],["onmatchdropped(event",{"_index":3038,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["onmoreleagues",{"_index":2113,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["onmoreleagues(ev",{"_index":2141,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["onmoreleagues(ev:infinitescrollcustomevent",{"_index":2188,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["onmoreteams",{"_index":3948,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["onmoreteams(ev",{"_index":3955,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["onmoreteams(ev:infinitescrollcustomevent",{"_index":3965,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["onmouseenter",{"_index":1494,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["onmouseleave",{"_index":1495,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["onregister",{"_index":2549,"title":{},"body":{"components/LoginPage.html":{}}}],["onsnapshot",{"_index":1322,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["onsubmit",{"_index":1925,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["ontimechange",{"_index":2626,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["ontimechange(event",{"_index":2646,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["ontouch",{"_index":1747,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["ontouchedcallback",{"_index":3517,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["onvisitorteammouseenter",{"_index":2627,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["onvisitorteammouseleave",{"_index":2628,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["opacity",{"_index":2039,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["opcionalmente",{"_index":3036,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["opciones",{"_index":2814,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["opendatepicker",{"_index":2629,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["openleague",{"_index":2260,"title":{},"body":{"components/LeaguesPage.html":{}}}],["openleague(league",{"_index":2279,"title":{},"body":{"components/LeaguesPage.html":{}}}],["openmatch(match",{"_index":2951,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["opentimepicker",{"_index":2630,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["option",{"_index":1880,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["option.selected",{"_index":1883,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["option:hover",{"_index":1882,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/Model.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":3700,"title":{},"body":{"components/SplashPage.html":{}}}],["ordenada",{"_index":2403,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["orderby",{"_index":695,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["original",{"_index":1524,"title":{},"body":{"directives/HighLightDirective.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"directives/TimeDirectiveDirective.html":{}}}],["oscuro",{"_index":3477,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["otro",{"_index":2834,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["out",{"_index":142,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{},"overview.html":{}}}],["outline",{"_index":2818,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["output",{"_index":1170,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["outputs",{"_index":1138,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["overflow",{"_index":1850,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["override",{"_index":1021,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["overview",{"_index":4289,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":3873,"title":{},"body":{"interfaces/Task.html":{}}}],["owner:users",{"_index":3875,"title":{},"body":{"interfaces/Task.html":{}}}],["p",{"_index":3481,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["p.id",{"_index":2317,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["package",{"_index":4159,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1801,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["padre",{"_index":3271,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["page",{"_index":671,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ITeamService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/Meta-2.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/PlayerService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["page*pagesize",{"_index":853,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["page+1)*pagesize",{"_index":855,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["page:number",{"_index":2171,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"interfaces/Paginated.html":{},"components/TeamSelectableComponent.html":{}}}],["page:page",{"_index":943,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["pagecount",{"_index":1016,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["pages",{"_index":1618,"title":{},"body":{"interfaces/IBaseMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"components/TeamSelectableComponent.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["pages:number",{"_index":941,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/IBaseMapping.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Paginated.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["pages:pages",{"_index":945,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["pagesize",{"_index":667,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ITeamService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["pagesize)).pipe",{"_index":718,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["pagesize:number",{"_index":819,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/Meta-2.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamSelectableComponent.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["pagesize:number):observable",{"_index":896,"title":{},"body":{"injectables/BaseService.html":{}}}],["pagesize:number=25",{"_index":897,"title":{},"body":{"injectables/BaseService.html":{}}}],["pagesize:pagesize",{"_index":944,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["paginación",{"_index":723,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["paginated",{"_index":706,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/GroupRaw.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ITeamService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["paginatedraw",{"_index":1014,"title":{"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{}},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["pagination",{"_index":1015,"title":{"interfaces/Pagination.html":{}},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["pantalla",{"_index":4262,"title":{},"body":{"index.html":{}}}],["pantallas",{"_index":2449,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["para",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"interfaces/SearchParams.html":{},"components/StatisticsPage.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{}}}],["param",{"_index":3277,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"pipes/PasswordTogglePipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamCreateModalComponent.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"directives/TimeDirectiveDirective.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params.get('id",{"_index":2504,"title":{},"body":{"components/LineupsPage.html":{}}}],["parsefloat(basevalue.replace",{"_index":3156,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["parsefloat(value",{"_index":3188,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["parsefloat(value.replace",{"_index":3187,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["parsestatvalue",{"_index":3728,"title":{},"body":{"components/StatisticsPage.html":{}}}],["parsestatvalue(value",{"_index":3185,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["partial",{"_index":987,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingFirebase.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{}}}],["partido",{"_index":2824,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["partidoid",{"_index":2480,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["partidos",{"_index":2923,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"index.html":{}}}],["pasar",{"_index":1540,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["pases",{"_index":3062,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["password",{"_index":1246,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"pipes/PasswordTogglePipe.html":{},"components/RegisterPage.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignUp.html":{}}}],["password)).pipe",{"_index":1300,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["password:payload.password",{"_index":1476,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["password:string",{"_index":1469,"title":{},"body":{"interfaces/GroupRaw.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["passwordsmatchvalidator",{"_index":3618,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["passwordsmatchvalidator(group",{"_index":4213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordtoggle",{"_index":3213,"title":{},"body":{"pipes/PasswordTogglePipe.html":{}}}],["passwordtogglepipe",{"_index":3208,"title":{"pipes/PasswordTogglePipe.html":{}},"body":{"pipes/PasswordTogglePipe.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["passwordvalidator",{"_index":3617,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/functions.html":{}}}],["passwordvalidator(control",{"_index":4216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":162,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Formats.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/Large.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/Medium.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"modules/UsersPageRoutingModule.html":{}}}],["pathmatch",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patrón",{"_index":4273,"title":{},"body":{"index.html":{}}}],["payload",{"_index":1238,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{}}}],["payload.email",{"_index":1247,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["payload.password",{"_index":1248,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["payload.surname",{"_index":1480,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["pendiente",{"_index":2863,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["people",{"_index":2817,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["perfil",{"_index":4254,"title":{},"body":{"index.html":{}}}],["permite",{"_index":4222,"title":{},"body":{"index.html":{}}}],["permitir",{"_index":4402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["personalizados",{"_index":1871,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["personattributes",{"_index":1080,"title":{"interfaces/PersonAttributes.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["persondata",{"_index":1091,"title":{"interfaces/PersonData.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["personraw",{"_index":1090,"title":{"interfaces/PersonRaw.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["personraw):users",{"_index":1126,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["picker",{"_index":2740,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["picture",{"_index":93,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Data-4.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/League.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerMappingFirebase.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"interfaces/Team.html":{},"components/TeamCreateModalComponent.html":{},"injectables/TeamMappingFirebase.html":{},"components/TeamSelectableComponent.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{}}}],["picture:data.picture?number(data.picture):null",{"_index":1099,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["picture:mediaraw",{"_index":1094,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["picture?:string",{"_index":1427,"title":{},"body":{"interfaces/FirebaseUser.html":{}}}],["picture_selectable_value_accessor",{"_index":3227,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":3235,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["picturemodal:modalcontroller",{"_index":3275,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":92,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pictureurl",{"_index":2365,"title":{},"body":{"components/LeaguesPage.html":{}}}],["pictureurl[0",{"_index":2369,"title":{},"body":{"components/LeaguesPage.html":{}}}],["pipe",{"_index":333,"title":{"pipes/PasswordTogglePipe.html":{}},"body":{"components/AppComponent.html":{},"pipes/PasswordTogglePipe.html":{},"overview.html":{}}}],["pipe(map((response:strapiuploadresponse",{"_index":1459,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["pipe(map(res",{"_index":1707,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["pipes",{"_index":3209,"title":{},"body":{"pipes/PasswordTogglePipe.html":{}}}],["pipes/password",{"_index":3674,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":3216,"title":{},"body":{"pipes/PasswordTogglePipe.html":{}}}],["place",{"_index":1367,"title":{},"body":{"interfaces/FirebaseMatch.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{}}}],["placeholder",{"_index":3519,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["platform",{"_index":1931,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["player",{"_index":95,"title":{"interfaces/Player.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Data-1.html":{},"directives/FilterByTeamDirective.html":{},"components/HomePage.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"components/StatisticsPage.html":{},"interfaces/TeamAttributes.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{},"components/TeamSelectableComponent.html":{},"injectables/UsersMappingFirebase.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["player(_player:player",{"_index":3339,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["player):playerdata",{"_index":977,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["player):playerraw",{"_index":3409,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["player.birthdate",{"_index":3463,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["player.dorsal",{"_index":2529,"title":{},"body":{"components/LineupsPage.html":{},"components/PlayerModalComponent.html":{}}}],["player.firstsurname",{"_index":2531,"title":{},"body":{"components/LineupsPage.html":{},"components/PlayerModalComponent.html":{}}}],["player.model",{"_index":2073,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["player.model.ts",{"_index":1412,"title":{},"body":{"interfaces/FirebasePlayer.html":{}}}],["player.name",{"_index":2530,"title":{},"body":{"components/LineupsPage.html":{},"components/PlayerModalComponent.html":{}}}],["player.nationality",{"_index":2533,"title":{},"body":{"components/LineupsPage.html":{},"components/PlayerModalComponent.html":{}}}],["player.position",{"_index":2532,"title":{},"body":{"components/LineupsPage.html":{},"components/PlayerModalComponent.html":{}}}],["player.secondsurname",{"_index":3461,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["player.team.id",{"_index":1221,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["player?.firstsurname",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["player?.name",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["player?.picture?.url",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["player_api_url_token",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["player_collection_subscription_token",{"_index":2908,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"miscellaneous/variables.html":{}}}],["player_repository_mapping_token",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["player_repository_token",{"_index":3496,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["player_repository_token,player_resource_name_token",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["player_resource_name_token",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["playerattributes",{"_index":963,"title":{"interfaces/PlayerAttributes.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["playercollectionsubscriptionfactory",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["playercreatemodalcomponent",{"_index":94,"title":{"components/PlayerCreateModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["playerdata",{"_index":970,"title":{"interfaces/PlayerData.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["playerfav",{"_index":1417,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{}}}],["playerfav?:documentreference",{"_index":1428,"title":{},"body":{"interfaces/FirebaseUser.html":{}}}],["playerfav?:string",{"_index":4046,"title":{},"body":{"interfaces/Users.html":{}}}],["playerimg",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["playerjsonserverstoragemapping",{"_index":3395,"title":{"injectables/PlayerJsonServerStorageMapping.html":{}},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["playermappingfirebase",{"_index":478,"title":{"injectables/PlayerMappingFirebase.html":{}},"body":{"modules/AppModule.html":{},"injectables/PlayerMappingFirebase.html":{}}}],["playermappingstrapi",{"_index":459,"title":{"injectables/PlayerMappingStrapi.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["playermodalcomponent",{"_index":96,"title":{"components/PlayerModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["playerraw",{"_index":969,"title":{"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["playerraw):player",{"_index":1008,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["players",{"_index":502,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"directives/FilterByTeamDirective.html":{},"components/HomePage.html":{},"components/LineupsPage.html":{},"modules/PlayersPageModule.html":{},"injectables/UsersMappingFirebase.html":{}}}],["players'},{'name",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["players.birthdate",{"_index":3462,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["players.dorsal",{"_index":3464,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["players.edit",{"_index":3378,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.errors.birthdate_required",{"_index":3388,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.errors.name_min_length",{"_index":3381,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.errors.name_required",{"_index":3380,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.errors.nationality_invalid",{"_index":3385,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.errors.nationality_required",{"_index":3384,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.errors.pattern",{"_index":3386,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.errors.surname_min_length",{"_index":3383,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.errors.surname_required",{"_index":3382,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.name",{"_index":3458,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["players.nationality",{"_index":3465,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["players.new",{"_index":3379,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.page",{"_index":3508,"title":{},"body":{"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{}}}],["players.position",{"_index":3389,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{}}}],["players.position_defender",{"_index":3513,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["players.position_forward",{"_index":3515,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["players.position_goalkeeper",{"_index":3512,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["players.position_midfielder",{"_index":3514,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["players.select_date'|translate",{"_index":2716,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["players.select_date\\'|translate",{"_index":2753,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["players.submit",{"_index":3392,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.surname1",{"_index":3459,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["players.surname2",{"_index":3460,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["players.team",{"_index":3390,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players.title",{"_index":1565,"title":{},"body":{"components/HomePage.html":{}}}],["players.update",{"_index":3391,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["players/:id",{"_index":548,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["playerservice",{"_index":226,"title":{"injectables/PlayerService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LineupsPage.html":{},"injectables/PlayerService.html":{}}}],["playersmappingfactory",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["playerspage",{"_index":97,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["playerspagemodule",{"_index":3502,"title":{"modules/PlayersPageModule.html":{}},"body":{"modules/PlayersPageModule.html":{},"modules.html":{},"overview.html":{}}}],["playerspageroutingmodule",{"_index":3506,"title":{"modules/PlayersPageRoutingModule.html":{}},"body":{"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["playersrepositoryfactory",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["playersvc",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/LineupsPage.html":{}}}],["plugin",{"_index":4259,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1812,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["popover",{"_index":2104,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["popover.dismiss",{"_index":2207,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["por",{"_index":1252,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"directives/TimeDirectiveDirective.html":{}}}],["portuguese",{"_index":1740,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["posesión",{"_index":3059,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["posibilidad",{"_index":4256,"title":{},"body":{"index.html":{}}}],["posicion",{"_index":3490,"title":{},"body":{"interfaces/PlayerRaw.html":{}}}],["posicion:data.position",{"_index":3415,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["posicion:string",{"_index":3407,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["posición",{"_index":2395,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["position",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Data-1.html":{},"interfaces/FirebasePlayer.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"interfaces/TeamAttributes.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["position:data.posicion",{"_index":3429,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["positionselectablecomponent",{"_index":99,"title":{"components/PositionSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["precisión",{"_index":3065,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["prefieres",{"_index":3360,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["preloadallmodules",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":575,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presentactionsheet",{"_index":2794,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["presentmodalleague",{"_index":2261,"title":{},"body":{"components/LeaguesPage.html":{}}}],["presentmodalleague(mode",{"_index":2281,"title":{},"body":{"components/LeaguesPage.html":{}}}],["presentmodalleague(mode:'new'|'edit",{"_index":2351,"title":{},"body":{"components/LeaguesPage.html":{}}}],["presentmodalmatch(mode:'new'|'edit",{"_index":2954,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["prev",{"_index":1701,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["previewurl",{"_index":1445,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["primary",{"_index":2406,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{}}}],["primer",{"_index":4397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["principal",{"_index":4241,"title":{},"body":{"index.html":{}}}],["private",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerMappingFirebase.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamCreateModalComponent.html":{},"injectables/TeamMappingFirebase.html":{},"components/TeamSelectableComponent.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"injectables/UsersMappingFirebase.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{}}}],["problemas",{"_index":3136,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["procesar",{"_index":726,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["production",{"_index":4413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":561,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{}}}],["profile'},{'name",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["profile.page",{"_index":3590,"title":{},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":3530,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":3529,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.picture",{"_index":3582,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.title",{"_index":3581,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.update",{"_index":3583,"title":{},"body":{"components/ProfilePage.html":{}}}],["profilepage",{"_index":101,"title":{"components/ProfilePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["profilepagemodule",{"_index":3584,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepageroutingmodule",{"_index":3588,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["progresivamente",{"_index":2453,"title":{},"body":{"components/LeaguesPage.html":{}}}],["project",{"_index":4296,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["promise",{"_index":177,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{},"components/UsersPage.html":{}}}],["promise(async",{"_index":188,"title":{},"body":{"guards/AdminGuard.html":{}}}],["promise.all",{"_index":2939,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["promise.resolve(null",{"_index":2943,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["promise.resolve(undefined",{"_index":3090,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["propaga",{"_index":3240,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["propagate",{"_index":2148,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["propagate:boolean=false",{"_index":2191,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["propagatechange",{"_index":2105,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingFirebase.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingFirebase.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{},"components/UsersPage.html":{},"properties.html":{}}}],["propiedades",{"_index":3140,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["protected",{"_index":579,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["provide",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":184,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/GroupRaw.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/LeagueService.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"injectables/TeamService.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{}}}],["providehttpclient",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["providelottieoptions",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":1087,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"interfaces/Large.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["provider_metadata",{"_index":1446,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["providermetadata",{"_index":1447,"title":{"interfaces/ProviderMetadata.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["providers",{"_index":134,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/PlayersPageModule.html":{},"components/PositionSelectableComponent.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"components/TeamSelectableComponent.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{},"overview.html":{}}}],["providers:[picture_selectable_value_accessor",{"_index":3272,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["proyecto",{"_index":4267,"title":{},"body":{"index.html":{}}}],["pt",{"_index":1739,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["pts",{"_index":1059,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{}}}],["public",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LeagueSelectableComponent.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"components/TeamSelectableComponent.html":{},"interfaces/Thumbnail.html":{}}}],["public_id",{"_index":1448,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["publishedat",{"_index":928,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["puede",{"_index":1193,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["pueden",{"_index":4252,"title":{},"body":{"index.html":{}}}],["puerta",{"_index":3057,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["p}${v",{"_index":1035,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["página",{"_index":2579,"title":{},"body":{"components/LoginPage.html":{},"index.html":{}}}],["párrafos",{"_index":3482,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["público",{"_index":3267,"title":{},"body":{"components/PictureSelectableComponent.html":{},"index.html":{}}}],["q",{"_index":752,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["que",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseAuthMappingService.html":{},"interfaces/IBaseRepository.html":{},"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerModalComponent.html":{},"interfaces/SearchParams.html":{},"components/StatisticsPage.html":{},"directives/TimeDirectiveDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":690,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["query(this.collectionref",{"_index":753,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["queryconstraint",{"_index":694,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["queryparams",{"_index":2585,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["querysnapshot",{"_index":1323,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["quitar",{"_index":1423,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/Users.html":{}}}],["radial",{"_index":2438,"title":{},"body":{"components/LeaguesPage.html":{}}}],["radius",{"_index":1808,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["randomvalue",{"_index":3163,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["rawdate",{"_index":3355,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["rawdate.getdate().tostring().padstart(2",{"_index":3363,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["rawdate.getfullyear",{"_index":3366,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["rawdate.getmonth",{"_index":3364,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["rea",{"_index":1191,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["reactiveformsmodule",{"_index":2606,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{}}}],["reactivos",{"_index":3224,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["read",{"_index":2163,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["reader",{"_index":3292,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onerror",{"_index":3296,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":3294,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.readasdataurl(file",{"_index":3298,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["readonly",{"_index":1887,"title":{},"body":{"injectables/LanguageService.html":{}}}],["ready",{"_index":585,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["ready$:observable",{"_index":630,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["real",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["recibe",{"_index":4007,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["recibido",{"_index":3358,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["recomendación",{"_index":2825,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["record",{"_index":3567,"title":{},"body":{"components/ProfilePage.html":{}}}],["recurso",{"_index":814,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["recursos",{"_index":3245,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["redirectto",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirige",{"_index":2578,"title":{},"body":{"components/LoginPage.html":{}}}],["redirigir",{"_index":4403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redondeados",{"_index":3473,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["reduce",{"_index":2730,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["reduce((p",{"_index":1034,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["reducir",{"_index":3393,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["ref",{"_index":1383,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["ref(this.storage",{"_index":1398,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["refrescar",{"_index":3190,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["register",{"_index":554,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{}}}],["register'},{'name",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["register.button_login",{"_index":3651,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.button_register",{"_index":3649,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.email",{"_index":3639,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.errors.email_required",{"_index":3644,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.errors.incorrect_email",{"_index":3645,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.errors.incorrect_password_requirements",{"_index":3647,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.errors.mismatch_password",{"_index":3648,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.errors.name_required",{"_index":3642,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.errors.password_required",{"_index":3646,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.errors.surname_required",{"_index":3643,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.have_account",{"_index":3650,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.name",{"_index":3637,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page",{"_index":3658,"title":{},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{}}}],["register.page.html",{"_index":3594,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":3593,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.password",{"_index":3640,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.repeat_password",{"_index":3641,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.surnames",{"_index":3638,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.title",{"_index":3636,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerform",{"_index":3596,"title":{},"body":{"components/RegisterPage.html":{}}}],["registeronchange",{"_index":1766,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["registeronchange(fn",{"_index":1760,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["registerontouched",{"_index":1767,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["registerontouched(fn",{"_index":1763,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["registerpage",{"_index":103,"title":{"components/RegisterPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["registerpagemodule",{"_index":3652,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpageroutingmodule",{"_index":3656,"title":{"modules/RegisterPageRoutingModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpayload",{"_index":605,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{}}}],["registrarse",{"_index":4248,"title":{},"body":{"index.html":{}}}],["registro",{"_index":2328,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"index.html":{}}}],["relative",{"_index":1791,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"components/PictureSelectableComponent.html":{}}}],["remove",{"_index":2218,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["removed",{"_index":911,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["removedindex",{"_index":2321,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["remueve",{"_index":2393,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["renderer",{"_index":1147,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{}}}],["renderer2",{"_index":1148,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{}}}],["replace(/\\//g",{"_index":2694,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["replaceurl:true",{"_index":2587,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["repositories/intefaces/base",{"_index":892,"title":{},"body":{"injectables/BaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseService.html":{},"injectables/PlayerService.html":{}}}],["repositories/intefaces/league",{"_index":2243,"title":{},"body":{"injectables/LeagueService.html":{}}}],["repositories/intefaces/match",{"_index":2881,"title":{},"body":{"injectables/MatchService.html":{}}}],["repositories/intefaces/player",{"_index":3498,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repositories/intefaces/team",{"_index":3983,"title":{},"body":{"injectables/TeamService.html":{}}}],["repositories/intefaces/users",{"_index":4144,"title":{},"body":{"injectables/UsersService.html":{}}}],["repositories/repository.tokens",{"_index":894,"title":{},"body":{"injectables/BaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/Medium.html":{},"injectables/PlayerService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"injectables/UsersService.html":{}}}],["repositorio",{"_index":815,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"index.html":{}}}],["repository",{"_index":642,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["repository.interface",{"_index":700,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseService.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/ITeamRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["repository.interface.ts",{"_index":1629,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/ITeamRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/SearchParams.html":{}}}],["repository.interface.ts:10",{"_index":1633,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:11",{"_index":1630,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:12",{"_index":1634,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:13",{"_index":1631,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:5",{"_index":3661,"title":{},"body":{"interfaces/SearchParams.html":{}}}],["repository.interface.ts:9",{"_index":1632,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.service.ts",{"_index":1011,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:27",{"_index":1694,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["repository.service.ts:40",{"_index":3864,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:52",{"_index":3868,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.tokens",{"_index":703,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["repository_mapping_token",{"_index":702,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["repository_token",{"_index":893,"title":{},"body":{"injectables/BaseService.html":{},"miscellaneous/variables.html":{}}}],["requisitos",{"_index":4274,"title":{},"body":{"index.html":{}}}],["res",{"_index":823,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["res.data",{"_index":1041,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.data.map((elem:data",{"_index":1044,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.data[0",{"_index":4151,"title":{},"body":{"injectables/UsersService.html":{}}}],["res.map((elem:any",{"_index":1709,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["res.meta.pagination.total",{"_index":1040,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.pages",{"_index":1708,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["res[0",{"_index":4150,"title":{},"body":{"injectables/UsersService.html":{}}}],["resalta",{"_index":1190,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["resaltar",{"_index":1534,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["reset",{"_index":141,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/LanguageSelectorComponent.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{},"overview.html":{}}}],["resolve",{"_index":189,"title":{},"body":{"guards/AdminGuard.html":{}}}],["resolve(false",{"_index":199,"title":{},"body":{"guards/AdminGuard.html":{}}}],["resolve(true",{"_index":197,"title":{},"body":{"guards/AdminGuard.html":{}}}],["resource",{"_index":788,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["resource:string",{"_index":811,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["resource_name_token",{"_index":798,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["resource_type",{"_index":1449,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["resp",{"_index":2573,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["resp.id.tostring",{"_index":3628,"title":{},"body":{"components/RegisterPage.html":{}}}],["resp.jwt",{"_index":3849,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["resp:user",{"_index":3626,"title":{},"body":{"components/RegisterPage.html":{}}}],["response",{"_index":1233,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/IAuthMapping.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"injectables/StrapiAuthMappingService.html":{}}}],["response.data",{"_index":2186,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/TeamSelectableComponent.html":{}}}],["response.data.day",{"_index":2958,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.data.foreach(league",{"_index":2331,"title":{},"body":{"components/LeaguesPage.html":{}}}],["response.data.foreach(match",{"_index":2936,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.data.hour",{"_index":2959,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.data.localteamid",{"_index":2963,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.data.map(async",{"_index":2940,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.data.name",{"_index":2368,"title":{},"body":{"components/LeaguesPage.html":{}}}],["response.data.picture",{"_index":2359,"title":{},"body":{"components/LeaguesPage.html":{}}}],["response.data.place",{"_index":2961,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.data.result",{"_index":2960,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.data.status",{"_index":2967,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.data.userid",{"_index":2968,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.data.visitorteamid",{"_index":2964,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["response.displayname",{"_index":1255,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.email",{"_index":1256,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["response.map(media=>media.id",{"_index":1460,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["response.pages",{"_index":2181,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/TeamSelectableComponent.html":{}}}],["response.role",{"_index":2370,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["response.uid",{"_index":1254,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["responsive",{"_index":2022,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["restaurar",{"_index":1542,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["result",{"_index":1368,"title":{},"body":{"interfaces/FirebaseMatch.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LineupsPage.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"injectables/PlayerMappingFirebase.html":{},"components/StatisticsPage.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["result.birthdate",{"_index":3442,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["result.day",{"_index":2781,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["result.dorsal",{"_index":3444,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["result.email",{"_index":4082,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["result.firstsurname",{"_index":3440,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["result.hour",{"_index":2782,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["result.league",{"_index":3936,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["result.leaguefav",{"_index":4086,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["result.localteamid",{"_index":2786,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["result.matchid",{"_index":2899,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["result.name",{"_index":2087,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["result.nationality",{"_index":3443,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["result.nmatches",{"_index":3935,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["result.numberofplayers",{"_index":3933,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["result.picture",{"_index":2088,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["result.place",{"_index":2784,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["result.playerfav",{"_index":4084,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["result.position",{"_index":3445,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["result.pts",{"_index":3934,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["result.result",{"_index":2783,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["result.role",{"_index":4083,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["result.secondsurname",{"_index":3441,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["result.stats",{"_index":2898,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["result.status",{"_index":2785,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["result.surname",{"_index":4081,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["result.team",{"_index":3446,"title":{},"body":{"injectables/PlayerMappingFirebase.html":{}}}],["result.teamfav",{"_index":4085,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["result.user",{"_index":2788,"title":{},"body":{"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{}}}],["result.userid",{"_index":2089,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{}}}],["result.visitorteamid",{"_index":2787,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["resultado",{"_index":2862,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["results",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":1640,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["retornar",{"_index":751,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["return",{"_index":186,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeaguesPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":38,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"directives/HighLightDirective.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LeagueCreateModalComponent.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"pipes/PasswordTogglePipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamCreateModalComponent.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"directives/TimeDirectiveDirective.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":2574,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["returnurl:returnurl",{"_index":2586,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["revisa",{"_index":2921,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["rgb(0",{"_index":1828,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["rgba(0",{"_index":1806,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["rgba(0,0,0,0.05",{"_index":2226,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["rgba(114",{"_index":2461,"title":{},"body":{"components/LeaguesPage.html":{}}}],["rgba(150",{"_index":3794,"title":{},"body":{"components/StatisticsPage.html":{}}}],["rgba(173",{"_index":1501,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["rgba(255",{"_index":1528,"title":{},"body":{"directives/HighLightDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["rgba(57",{"_index":2458,"title":{},"body":{"components/LeaguesPage.html":{}}}],["rgba(85",{"_index":3786,"title":{},"body":{"components/StatisticsPage.html":{}}}],["rgba(var",{"_index":2440,"title":{},"body":{"components/LeaguesPage.html":{}}}],["right",{"_index":1865,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{}}}],["rojas",{"_index":3072,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["rol",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/UsersPage.html":{}}}],["role",{"_index":1124,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/FirebaseUser.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/RegisterPage.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{}}}],["role':mappeddata.role",{"_index":1107,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["role:data.role",{"_index":1100,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["role:string",{"_index":1095,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/FirebaseUser.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["root",{"_index":185,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/GroupRaw.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/LeagueService.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchService.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"injectables/TeamService.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":67,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["roundness",{"_index":2036,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["route",{"_index":2488,"title":{},"body":{"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams-1.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"miscellaneous/variables.html":{}}}],["route:activatedroute",{"_index":2566,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["router",{"_index":173,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":4404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router:router",{"_index":3716,"title":{},"body":{"components/SplashPage.html":{}}}],["routereusestrategy",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":159,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":163,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":574,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":158,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":152,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["routing.module.ts",{"_index":157,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"modules/LineupsPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MatchesPageRoutingModule.html":{},"modules/PlayersPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["row",{"_index":2421,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["ru",{"_index":1735,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["russian",{"_index":1736,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["rxjs",{"_index":180,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlayerService.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"modules/RegisterPageModule.html":{},"interfaces/SearchParams.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["s.matchid",{"_index":3126,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["sa",{"_index":1737,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["saques",{"_index":3075,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["saving",{"_index":3144,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["scale(1.1",{"_index":2457,"title":{},"body":{"components/LeaguesPage.html":{}}}],["score",{"_index":3802,"title":{},"body":{"components/StatisticsPage.html":{}}}],["scroll",{"_index":1867,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["scrollable",{"_index":1855,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["scrollbar",{"_index":1872,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["se",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"components/LeaguesPage.html":{},"components/PlayerModalComponent.html":{}}}],["sea",{"_index":3474,"title":{},"body":{"components/PlayerModalComponent.html":{},"miscellaneous/variables.html":{}}}],["sean",{"_index":3094,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{}}}],["search",{"_index":1029,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LeagueSelectableComponent.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamSelectableComponent.html":{}}}],["searchparams",{"_index":669,"title":{"interfaces/SearchParams.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["secciones",{"_index":4243,"title":{},"body":{"index.html":{}}}],["sección",{"_index":4251,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":2408,"title":{},"body":{"components/LeaguesPage.html":{},"components/StatisticsPage.html":{}}}],["secondsurname",{"_index":972,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["secondsurname:data.ape2",{"_index":3426,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["secondsurname?string(data.secondsurname",{"_index":980,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["seguro",{"_index":4247,"title":{},"body":{"index.html":{}}}],["según",{"_index":1861,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["seleccionada",{"_index":3262,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["seleccionado",{"_index":1211,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["seleccionar",{"_index":3219,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selección",{"_index":3243,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable",{"_index":2099,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable'},{'name",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["selectable.component",{"_index":3670,"title":{},"body":{"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":2101,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":2100,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":2098,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:102",{"_index":2150,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:106",{"_index":2133,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:108",{"_index":2124,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["selectable.component.ts:109",{"_index":3954,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:112",{"_index":2135,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:114",{"_index":3951,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:117",{"_index":2139,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["selectable.component.ts:118",{"_index":3952,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:122",{"_index":2119,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["selectable.component.ts:126",{"_index":2122,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["selectable.component.ts:21",{"_index":2158,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:22",{"_index":2155,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:23",{"_index":2154,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:24",{"_index":2157,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:25",{"_index":3260,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:26",{"_index":2165,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:27",{"_index":3266,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:28",{"_index":2164,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:29",{"_index":3263,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{}}}],["selectable.component.ts:30",{"_index":2160,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:31",{"_index":2161,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:32",{"_index":2116,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:34",{"_index":2159,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":3520,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["selectable.component.ts:37",{"_index":2132,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:41",{"_index":2140,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:43",{"_index":3523,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["selectable.component.ts:44",{"_index":3268,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:47",{"_index":2127,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:51",{"_index":3256,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{}}}],["selectable.component.ts:58",{"_index":3253,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:60",{"_index":2130,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:62",{"_index":3254,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:65",{"_index":3255,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:73",{"_index":3237,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:75",{"_index":2143,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:79",{"_index":2149,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:84",{"_index":3249,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:89",{"_index":2152,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:94",{"_index":2145,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable.component.ts:98",{"_index":2146,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["selectable/league",{"_index":2097,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"modules/SharedModule.html":{}}}],["selectable/picture",{"_index":3218,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["selectable/position",{"_index":3511,"title":{},"body":{"components/PositionSelectableComponent.html":{},"modules/SharedModule.html":{}}}],["selectable/team",{"_index":3669,"title":{},"body":{"modules/SharedModule.html":{},"components/TeamSelectableComponent.html":{}}}],["selecteddate",{"_index":2697,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["selectedlanguage",{"_index":1742,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{}}}],["selectedleague",{"_index":2254,"title":{},"body":{"components/LeaguesPage.html":{}}}],["selectedmatch",{"_index":2933,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["selectedposition",{"_index":3518,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["selectedteam",{"_index":1205,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["selectedteamid",{"_index":1215,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["selectedtime",{"_index":2700,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["selectlanguage",{"_index":1768,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selectlanguage(code",{"_index":1751,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["selectleague",{"_index":2114,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["selectleague(id",{"_index":2147,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["selectleague(id:string|undefined",{"_index":2190,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{}}}],["selector'},{'name",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["selector.active",{"_index":1818,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component",{"_index":3677,"title":{},"body":{"modules/SharedModule.html":{}}}],["selector.component.html",{"_index":1720,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["selector.component.scss",{"_index":1721,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts",{"_index":1715,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:24",{"_index":1780,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:36",{"_index":1779,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:37",{"_index":1783,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:38",{"_index":1771,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:46",{"_index":1781,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:47",{"_index":1782,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:49",{"_index":1777,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:55",{"_index":1775,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:64",{"_index":1772,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:68",{"_index":1778,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:74",{"_index":1773,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:78",{"_index":1774,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector.component.ts:82",{"_index":1776,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selector/language",{"_index":1714,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"modules/SharedModule.html":{}}}],["selector:hover",{"_index":1816,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selectteam",{"_index":3949,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["selectteam(id",{"_index":3956,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["selectteam(id:string|undefined",{"_index":3967,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["self",{"_index":3785,"title":{},"body":{"components/StatisticsPage.html":{}}}],["separate",{"_index":2225,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["server",{"_index":1693,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"miscellaneous/variables.html":{}}}],["server.service.ts",{"_index":2042,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["server.service.ts:15",{"_index":2048,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{}}}],["server.service.ts:19",{"_index":3911,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{}}}],["server.service.ts:21",{"_index":2049,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{}}}],["server.service.ts:23",{"_index":3401,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{}}}],["server.service.ts:29",{"_index":3912,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{}}}],["server.service.ts:33",{"_index":2046,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{}}}],["server.service.ts:35",{"_index":3402,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{}}}],["server.service.ts:38",{"_index":2045,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{}}}],["server.service.ts:44",{"_index":2043,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{}}}],["server.service.ts:47",{"_index":2047,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{}}}],["server.service.ts:49",{"_index":3910,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{}}}],["server.service.ts:50",{"_index":2044,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{}}}],["server.service.ts:54",{"_index":3909,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{}}}],["server.service.ts:62",{"_index":3399,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{}}}],["server.service.ts:64",{"_index":3907,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{}}}],["server.service.ts:67",{"_index":3398,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/TeamJsonServerStorageMapping.html":{}}}],["server.service.ts:70",{"_index":3908,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{}}}],["server.service.ts:80",{"_index":3396,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{}}}],["server.service.ts:83",{"_index":3400,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{}}}],["server.service.ts:86",{"_index":3397,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{}}}],["service.interface",{"_index":891,"title":{},"body":{"injectables/BaseService.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerService.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["service.interface.ts",{"_index":1643,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerService.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{}}}],["service.interface.ts:10",{"_index":1649,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:11",{"_index":1644,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:12",{"_index":1650,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:13",{"_index":1645,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:7",{"_index":1646,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.interface.ts:8",{"_index":1647,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{}}}],["service.interface.ts:9",{"_index":1648,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["service.service",{"_index":2242,"title":{},"body":{"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["service.service.ts",{"_index":877,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:13",{"_index":879,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:18",{"_index":882,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:19",{"_index":883,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:20",{"_index":884,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:21",{"_index":885,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:25",{"_index":887,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:29",{"_index":880,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:33",{"_index":888,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:37",{"_index":881,"title":{},"body":{"injectables/BaseService.html":{}}}],["services/impl/base",{"_index":799,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["services/impl/firebase",{"_index":181,"title":{},"body":{"guards/AdminGuard.html":{}}}],["services/impl/strapi",{"_index":921,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["services/impl/users.service",{"_index":183,"title":{},"body":{"guards/AdminGuard.html":{}}}],["services/interfaces/authentication.interface",{"_index":803,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["services/interfaces/strapi",{"_index":801,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["servicio",{"_index":1354,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["sesion",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":1952,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["setadd",{"_index":1614,"title":{},"body":{"interfaces/IBaseMapping.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["setadd(data",{"_index":929,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/IBaseMapping.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["setadd(data:t):any",{"_index":1627,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["setbackgroundcolor",{"_index":1496,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["setbackgroundcolor(color",{"_index":1511,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["setbordercolor",{"_index":1497,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["setbordercolor(style",{"_index":1514,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["setdisabledstate",{"_index":1769,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1764,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2199,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["setfavoriteleague",{"_index":2262,"title":{},"body":{"components/LeaguesPage.html":{}}}],["setfavoriteleague(leagueid",{"_index":2283,"title":{},"body":{"components/LeaguesPage.html":{}}}],["setid",{"_index":734,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["setinterval",{"_index":2926,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["setleague(_league",{"_index":1944,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["setmatch(_match",{"_index":2662,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["setplayer(_player",{"_index":3317,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["setteam(_team",{"_index":3883,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["settimeout",{"_index":3192,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["setting",{"_index":2342,"title":{},"body":{"components/LeaguesPage.html":{}}}],["setupdate",{"_index":1615,"title":{},"body":{"interfaces/IBaseMapping.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["setupdate(data",{"_index":932,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/IBaseMapping.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["setupdate(data:any):any",{"_index":1628,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["shadow",{"_index":1853,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["share",{"_index":2808,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/RegisterPageModule.html":{}}}],["share.share",{"_index":2874,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["shared/shared.module",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":395,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharematch(match",{"_index":3016,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["sharetext",{"_index":2864,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["sharing",{"_index":3035,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["shortcode",{"_index":1716,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["showmenu",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["si",{"_index":732,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"directives/HighLightDirective.html":{},"interfaces/IUserService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"injectables/PlayerService.html":{},"components/StatisticsPage.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["signin",{"_index":589,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signin(authpayload",{"_index":599,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signin(authpayload:any):observable",{"_index":1604,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signin(response",{"_index":1234,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signin(response:any):user",{"_index":1595,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signin:string",{"_index":4366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signinpayload",{"_index":1228,"title":{"interfaces/SignInPayload.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["signinpayload(payload",{"_index":1236,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signinpayload(payload:signinpayload):any",{"_index":1593,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signinpayload):strapisignin",{"_index":1474,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signinurl",{"_index":3823,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["signinwithemailandpassword",{"_index":1280,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signout",{"_index":590,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signout():observable",{"_index":1606,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signup",{"_index":591,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["signup(registerpayload",{"_index":603,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{}}}],["signup(registerpayload:any):observable",{"_index":1605,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signup(response",{"_index":1240,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signup(response:any):user",{"_index":1596,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signup(signuppayload",{"_index":1265,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signup:string",{"_index":4367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signuppayload",{"_index":1229,"title":{"interfaces/SignUpPayload.html":{}},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["signuppayload(payload",{"_index":1242,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signuppayload(payload:signuppayload):any",{"_index":1594,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signuppayload):strapisignup",{"_index":1477,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["signupurl",{"_index":3821,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["siguientes",{"_index":4270,"title":{},"body":{"index.html":{}}}],["simple",{"_index":3032,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["sistema",{"_index":4235,"title":{},"body":{"index.html":{}}}],["size",{"_index":759,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Formats.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/Large.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/Medium.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/Thumbnail.html":{}}}],["small",{"_index":1120,"title":{"interfaces/Small.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LeaguesPage.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"injectables/PlayerMappingFirebase.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Team.html":{},"injectables/TeamMappingFirebase.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["small:data.picture.small",{"_index":4042,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["small:string",{"_index":4032,"title":{},"body":{"interfaces/UserRaw.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["snapshot",{"_index":1331,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["snapshot.docchanges().foreach(change",{"_index":1332,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["snapshot.docs.map(doc",{"_index":762,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["snapshot.size",{"_index":760,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["sobre",{"_index":3476,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["social",{"_index":2826,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["solicitada",{"_index":2580,"title":{},"body":{"components/LoginPage.html":{}}}],["solid",{"_index":1826,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["solo",{"_index":1533,"title":{},"body":{"directives/HighLightDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["soltar",{"_index":1194,"title":{},"body":{"directives/DragDropDirective.html":{},"directives/HighLightDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ILeagueRepository.html":{},"interfaces/ILeagueService.html":{},"interfaces/IMatchRepository.html":{},"interfaces/IMatchService.html":{},"interfaces/IMatchStatsRepository.html":{},"interfaces/IMatchStatsService.html":{},"interfaces/IPlayerRepository.html":{},"interfaces/IPlayerService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LeaguesPageRoutingModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"modules/LineupsPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/MatchesPageRoutingModule.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"modules/PlayersPageModule.html":{},"modules/PlayersPageRoutingModule.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchParams.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"injectables/UsersService.html":{}}}],["space",{"_index":2006,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["spacing",{"_index":2034,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["spanish",{"_index":1725,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["spinner",{"_index":3799,"title":{},"body":{"components/StatisticsPage.html":{}}}],["splash",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{}}}],["splash'},{'name",{"_index":106,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["splash.page",{"_index":3723,"title":{},"body":{"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["splash.page.html",{"_index":3699,"title":{},"body":{"components/SplashPage.html":{}}}],["splash.page.scss",{"_index":3698,"title":{},"body":{"components/SplashPage.html":{}}}],["splash/lottie",{"_index":4261,"title":{},"body":{"index.html":{}}}],["splashpage",{"_index":105,"title":{"components/SplashPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["splashpagemodule",{"_index":3718,"title":{"modules/SplashPageModule.html":{}},"body":{"modules/SplashPageModule.html":{},"modules.html":{},"overview.html":{}}}],["splashpageroutingmodule",{"_index":3721,"title":{"modules/SplashPageRoutingModule.html":{}},"body":{"modules/SplashPageModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["src/.../app.module.ts",{"_index":4194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.guard.ts",{"_index":4305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../blob.ts",{"_index":4196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":4309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../picture",{"_index":4315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../repository.factory.ts",{"_index":4190,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../repository.tokens.ts",{"_index":4304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../strapi",{"_index":4302,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validators.ts",{"_index":4197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:101",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:136",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:142",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:92",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":167,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:10",{"_index":174,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:18",{"_index":176,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":4387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/core/models/auth.model",{"_index":3616,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/core/models/auth.model.ts",{"_index":3689,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{}}}],["src/app/core/models/base.model.ts",{"_index":3202,"title":{},"body":{"interfaces/Model.html":{}}}],["src/app/core/models/firebase",{"_index":1360,"title":{},"body":{"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{}}}],["src/app/core/models/leagues.model",{"_index":1949,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["src/app/core/models/leagues.model.ts",{"_index":1912,"title":{},"body":{"interfaces/League.html":{}}}],["src/app/core/models/matches.model",{"_index":2498,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["src/app/core/models/matches.model.ts",{"_index":2609,"title":{},"body":{"interfaces/Match.html":{}}}],["src/app/core/models/matchstatistics.model",{"_index":3044,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["src/app/core/models/matchstatistics.model.ts",{"_index":2885,"title":{},"body":{"interfaces/MatchStatistics.html":{}}}],["src/app/core/models/paginated.model",{"_index":2166,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"components/TeamSelectableComponent.html":{}}}],["src/app/core/models/paginated.model.ts",{"_index":3206,"title":{},"body":{"interfaces/Paginated.html":{}}}],["src/app/core/models/players.model",{"_index":1209,"title":{},"body":{"directives/FilterByTeamDirective.html":{},"components/LineupsPage.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{}}}],["src/app/core/models/players.model.ts",{"_index":3304,"title":{},"body":{"interfaces/Player.html":{}}}],["src/app/core/models/task.model.ts",{"_index":3872,"title":{},"body":{"interfaces/Task.html":{}}}],["src/app/core/models/teams.model",{"_index":2499,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["src/app/core/models/teams.model.ts",{"_index":3877,"title":{},"body":{"interfaces/Team.html":{}}}],["src/app/core/models/users.model",{"_index":2299,"title":{},"body":{"components/LeaguesPage.html":{},"components/ProfilePage.html":{},"components/UsersPage.html":{}}}],["src/app/core/models/users.model.ts",{"_index":4044,"title":{},"body":{"interfaces/Users.html":{}}}],["src/app/core/repositories/impl/base",{"_index":641,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{}}}],["src/app/core/repositories/impl/json",{"_index":1692,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["src/app/core/repositories/impl/league",{"_index":915,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{}}}],["src/app/core/repositories/impl/match",{"_index":2757,"title":{},"body":{"injectables/MatchMappingFirebase.html":{}}}],["src/app/core/repositories/impl/matchstatistics",{"_index":2887,"title":{},"body":{"injectables/MatchStatisticsMappingFirebase.html":{}}}],["src/app/core/repositories/impl/player",{"_index":962,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["src/app/core/repositories/impl/strapi",{"_index":1010,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["src/app/core/repositories/impl/team",{"_index":1057,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{}}}],["src/app/core/repositories/impl/users",{"_index":1079,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["src/app/core/repositories/intefaces/base",{"_index":1608,"title":{},"body":{"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["src/app/core/repositories/intefaces/league",{"_index":1655,"title":{},"body":{"interfaces/ILeagueRepository.html":{}}}],["src/app/core/repositories/intefaces/match",{"_index":1659,"title":{},"body":{"interfaces/IMatchRepository.html":{}}}],["src/app/core/repositories/intefaces/matchstatistics",{"_index":1664,"title":{},"body":{"interfaces/IMatchStatsRepository.html":{}}}],["src/app/core/repositories/intefaces/player",{"_index":1669,"title":{},"body":{"interfaces/IPlayerRepository.html":{}}}],["src/app/core/repositories/intefaces/team",{"_index":1677,"title":{},"body":{"interfaces/ITeamRepository.html":{}}}],["src/app/core/repositories/intefaces/users",{"_index":1683,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["src/app/core/repositories/repository.factory.ts",{"_index":4198,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/repositories/repository.tokens",{"_index":2301,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["src/app/core/repositories/repository.tokens.ts",{"_index":4318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/core/services/impl/base",{"_index":577,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseService.html":{},"components/LeaguesPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["src/app/core/services/impl/firebase",{"_index":1226,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["src/app/core/services/impl/league.service",{"_index":2167,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["src/app/core/services/impl/league.service.ts",{"_index":2234,"title":{},"body":{"injectables/LeagueService.html":{}}}],["src/app/core/services/impl/league.service.ts:11",{"_index":2235,"title":{},"body":{"injectables/LeagueService.html":{}}}],["src/app/core/services/impl/match.service",{"_index":2500,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["src/app/core/services/impl/match.service.ts",{"_index":2879,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/core/services/impl/match.service.ts:11",{"_index":2880,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/core/services/impl/matchstats.service",{"_index":3045,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["src/app/core/services/impl/matchstats.service.ts",{"_index":2900,"title":{},"body":{"injectables/MatchStatsService.html":{}}}],["src/app/core/services/impl/matchstats.service.ts:10",{"_index":2901,"title":{},"body":{"injectables/MatchStatsService.html":{}}}],["src/app/core/services/impl/player.service",{"_index":2501,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/core/services/impl/player.service.ts",{"_index":3491,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/core/services/impl/player.service.ts:14",{"_index":3493,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/core/services/impl/player.service.ts:21",{"_index":3495,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/core/services/impl/strapi",{"_index":1432,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/impl/team.service",{"_index":2502,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{},"components/TeamSelectableComponent.html":{}}}],["src/app/core/services/impl/team.service.ts",{"_index":3979,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/impl/team.service.ts:13",{"_index":3980,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/impl/team.service.ts:19",{"_index":3981,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/impl/users.service",{"_index":2302,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UsersPage.html":{}}}],["src/app/core/services/impl/users.service.ts",{"_index":4139,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/impl/users.service.ts:14",{"_index":4140,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/impl/users.service.ts:23",{"_index":4141,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/impl/users.service.ts:29",{"_index":4142,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/interfaces/auth",{"_index":1586,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts",{"_index":1598,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:4",{"_index":1601,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:5",{"_index":1603,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:6",{"_index":1602,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:7",{"_index":1600,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:8",{"_index":1599,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/base",{"_index":1642,"title":{},"body":{"interfaces/IBaseService.html":{}}}],["src/app/core/services/interfaces/collection",{"_index":906,"title":{},"body":{"interfaces/CollectionChange.html":{},"interfaces/ICollectionSubscription.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["src/app/core/services/interfaces/league",{"_index":1657,"title":{},"body":{"interfaces/ILeagueService.html":{}}}],["src/app/core/services/interfaces/match",{"_index":1662,"title":{},"body":{"interfaces/IMatchService.html":{}}}],["src/app/core/services/interfaces/matchstatistics",{"_index":1667,"title":{},"body":{"interfaces/IMatchStatsService.html":{}}}],["src/app/core/services/interfaces/player",{"_index":1671,"title":{},"body":{"interfaces/IPlayerService.html":{}}}],["src/app/core/services/interfaces/strapi",{"_index":1672,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["src/app/core/services/interfaces/team",{"_index":1679,"title":{},"body":{"interfaces/ITeamService.html":{}}}],["src/app/core/services/interfaces/users",{"_index":1685,"title":{},"body":{"interfaces/IUserService.html":{}}}],["src/app/core/services/language.service",{"_index":45,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{}}}],["src/app/core/services/language.service.ts",{"_index":1885,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:22",{"_index":1893,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:26",{"_index":1894,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:30",{"_index":1895,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:34",{"_index":1897,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:8",{"_index":1898,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:9",{"_index":1892,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/utils/blob.ts",{"_index":4208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/utils/validators",{"_index":3619,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/core/utils/validators.ts",{"_index":4212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/pages/about/about",{"_index":156,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":143,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:11",{"_index":30,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:17",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/home/home",{"_index":1585,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1583,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1550,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:11",{"_index":1554,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":1571,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/leagues/leagues",{"_index":2473,"title":{},"body":{"modules/LeaguesPageRoutingModule.html":{}}}],["src/app/pages/leagues/leagues.module.ts",{"_index":2470,"title":{},"body":{"modules/LeaguesPageModule.html":{}}}],["src/app/pages/leagues/leagues.page.ts",{"_index":2247,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:101",{"_index":2272,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:113",{"_index":2284,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:132",{"_index":2287,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:140",{"_index":2280,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:145",{"_index":2282,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:204",{"_index":2274,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:208",{"_index":2276,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:22",{"_index":2293,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:23",{"_index":2289,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:234",{"_index":2278,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:24",{"_index":2288,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:25",{"_index":2294,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:26",{"_index":2291,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:27",{"_index":2290,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:28",{"_index":2269,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:45",{"_index":2273,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:83",{"_index":2298,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:84",{"_index":2295,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:85",{"_index":2297,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:86",{"_index":2296,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/leagues/leagues.page.ts:88",{"_index":2270,"title":{},"body":{"components/LeaguesPage.html":{}}}],["src/app/pages/lineups/lineups",{"_index":2542,"title":{},"body":{"modules/LineupsPageRoutingModule.html":{}}}],["src/app/pages/lineups/lineups.module.ts",{"_index":2540,"title":{},"body":{"modules/LineupsPageModule.html":{}}}],["src/app/pages/lineups/lineups.page.ts",{"_index":2474,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:19",{"_index":2495,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:20",{"_index":2494,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:21",{"_index":2493,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:22",{"_index":2497,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:23",{"_index":2492,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:24",{"_index":2496,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:25",{"_index":2487,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:37",{"_index":2491,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:47",{"_index":2489,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/lineups/lineups.page.ts:59",{"_index":2490,"title":{},"body":{"components/LineupsPage.html":{}}}],["src/app/pages/login/login",{"_index":2608,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/pages/login/login.module.ts",{"_index":2605,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":2543,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:14",{"_index":2557,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:15",{"_index":2561,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:16",{"_index":2560,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:17",{"_index":2551,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:35",{"_index":2556,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:39",{"_index":2552,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:45",{"_index":2555,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:63",{"_index":2554,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:69",{"_index":2553,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:73",{"_index":2563,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:77",{"_index":2565,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/matches/matches",{"_index":3201,"title":{},"body":{"modules/MatchesPageRoutingModule.html":{}}}],["src/app/pages/matches/matches.module.ts",{"_index":3199,"title":{},"body":{"modules/MatchesPageModule.html":{}}}],["src/app/pages/matches/matches.page.ts",{"_index":2905,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["src/app/pages/players/players",{"_index":3509,"title":{},"body":{"modules/PlayersPageRoutingModule.html":{}}}],["src/app/pages/players/players.module.ts",{"_index":3507,"title":{},"body":{"modules/PlayersPageModule.html":{}}}],["src/app/pages/profile/profile",{"_index":3591,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/pages/profile/profile.module.ts",{"_index":3589,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/pages/profile/profile.page.ts",{"_index":3528,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:131",{"_index":3541,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:135",{"_index":3543,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:139",{"_index":3544,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:19",{"_index":3540,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:20",{"_index":3536,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:41",{"_index":3538,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:76",{"_index":3537,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:82",{"_index":3539,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/register/register",{"_index":3659,"title":{},"body":{"modules/RegisterPageRoutingModule.html":{}}}],["src/app/pages/register/register.module.ts",{"_index":3657,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/pages/register/register.page.ts",{"_index":3592,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:102",{"_index":3612,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:106",{"_index":3613,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:110",{"_index":3615,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:18",{"_index":3606,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:19",{"_index":3609,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:20",{"_index":3607,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:21",{"_index":3608,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:22",{"_index":3600,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:45",{"_index":3605,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:49",{"_index":3604,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:53",{"_index":3601,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:60",{"_index":3603,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:88",{"_index":3602,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:94",{"_index":3610,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:98",{"_index":3611,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/splash/splash",{"_index":3724,"title":{},"body":{"modules/SplashPageRoutingModule.html":{}}}],["src/app/pages/splash/splash.module.ts",{"_index":3722,"title":{},"body":{"modules/SplashPageModule.html":{}}}],["src/app/pages/splash/splash.page.ts",{"_index":3695,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:19",{"_index":3710,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:23",{"_index":3707,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:25",{"_index":3703,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:32",{"_index":3704,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/statistics/statistics",{"_index":3812,"title":{},"body":{"modules/StatisticsPageRoutingModule.html":{}}}],["src/app/pages/statistics/statistics.module.ts",{"_index":3810,"title":{},"body":{"modules/StatisticsPageModule.html":{}}}],["src/app/pages/statistics/statistics.page.ts",{"_index":3043,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:111",{"_index":3731,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:205",{"_index":3732,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:222",{"_index":3735,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:241",{"_index":3733,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:247",{"_index":3737,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:25",{"_index":3745,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:255",{"_index":3730,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:26",{"_index":3744,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:27",{"_index":3742,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:28",{"_index":3747,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:29",{"_index":3743,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:30",{"_index":3748,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:31",{"_index":3740,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:32",{"_index":3741,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:33",{"_index":3739,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:34",{"_index":3738,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:36",{"_index":3746,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:47",{"_index":3729,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:59",{"_index":3736,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/statistics/statistics.page.ts:64",{"_index":3734,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/pages/teams/teams",{"_index":3993,"title":{},"body":{"modules/TeamsPageRoutingModule.html":{}}}],["src/app/pages/teams/teams.module.ts",{"_index":3991,"title":{},"body":{"modules/TeamsPageModule.html":{}}}],["src/app/pages/users/users",{"_index":4138,"title":{},"body":{"modules/UsersPageRoutingModule.html":{}}}],["src/app/pages/users/users.module.ts",{"_index":4136,"title":{},"body":{"modules/UsersPageModule.html":{}}}],["src/app/pages/users/users.page.ts",{"_index":4093,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:13",{"_index":4105,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:14",{"_index":4099,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:24",{"_index":4102,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:28",{"_index":4101,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:45",{"_index":4104,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/shared/components/language",{"_index":1713,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/components/league",{"_index":1914,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["src/app/shared/components/match",{"_index":2610,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["src/app/shared/components/picture",{"_index":3217,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/player",{"_index":3305,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{}}}],["src/app/shared/components/position",{"_index":3510,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["src/app/shared/components/team",{"_index":3878,"title":{},"body":{"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["src/app/shared/directives/drag",{"_index":1127,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["src/app/shared/directives/filterbyteams/filter",{"_index":1200,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["src/app/shared/directives/high",{"_index":1487,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["src/app/shared/directives/time",{"_index":3994,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["src/app/shared/pipes/password",{"_index":3210,"title":{},"body":{"pipes/PasswordTogglePipe.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{}}}],["src/app/shared/shared.module",{"_index":2472,"title":{},"body":{"modules/LeaguesPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/TeamsPageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":3665,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":4412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":3696,"title":{},"body":{"components/SplashPage.html":{}}}],["standalone:true",{"_index":3712,"title":{},"body":{"components/SplashPage.html":{}}}],["start",{"_index":1802,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["startafter",{"_index":693,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["startat",{"_index":692,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["started",{"_index":4218,"title":{"index.html":{}},"body":{}}],["stat",{"_index":3780,"title":{},"body":{"components/StatisticsPage.html":{}}}],["stat.localvalue",{"_index":3753,"title":{},"body":{"components/StatisticsPage.html":{}}}],["stat.name",{"_index":3111,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["stat.visitorvalue",{"_index":3754,"title":{},"body":{"components/StatisticsPage.html":{}}}],["state",{"_index":2229,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["state.url",{"_index":4405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["static",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["statistics",{"_index":3046,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{}}}],["statistics'},{'name",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["statistics.page",{"_index":3811,"title":{},"body":{"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{}}}],["statistics.page.html",{"_index":3047,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["statistics.page.scss",{"_index":3048,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["statistics/:id",{"_index":571,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["statisticspage",{"_index":107,"title":{"components/StatisticsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["statisticspagemodule",{"_index":3805,"title":{"modules/StatisticsPageModule.html":{}},"body":{"modules/StatisticsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["statisticspageroutingmodule",{"_index":3809,"title":{"modules/StatisticsPageRoutingModule.html":{}},"body":{"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["stats",{"_index":1375,"title":{},"body":{"interfaces/FirebaseMatchStatistics.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["stats.error",{"_index":3750,"title":{},"body":{"components/StatisticsPage.html":{}}}],["stats.title",{"_index":3749,"title":{},"body":{"components/StatisticsPage.html":{}}}],["statsarray",{"_index":3121,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["statsarray.find(s",{"_index":3125,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["statsid",{"_index":3112,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["statssvc",{"_index":3078,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["status",{"_index":1369,"title":{},"body":{"interfaces/FirebaseMatch.html":{},"interfaces/Match.html":{},"injectables/MatchMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{}}}],["sticky",{"_index":2223,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["storage",{"_index":1379,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts",{"_index":832,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["storage.service.ts:16",{"_index":843,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:17",{"_index":841,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:25",{"_index":836,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:28",{"_index":4054,"title":{},"body":{"injectables/UsersLocalStorageMapping.html":{}}}],["storage.service.ts:31",{"_index":4055,"title":{},"body":{"injectables/UsersLocalStorageMapping.html":{}}}],["storage.service.ts:34",{"_index":4052,"title":{},"body":{"injectables/UsersLocalStorageMapping.html":{}}}],["storage.service.ts:39",{"_index":4051,"title":{},"body":{"injectables/UsersLocalStorageMapping.html":{}}}],["storage.service.ts:53",{"_index":4049,"title":{},"body":{"injectables/UsersLocalStorageMapping.html":{}}}],["storage.service.ts:54",{"_index":839,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:56",{"_index":4053,"title":{},"body":{"injectables/UsersLocalStorageMapping.html":{}}}],["storage.service.ts:59",{"_index":4050,"title":{},"body":{"injectables/UsersLocalStorageMapping.html":{}}}],["storage.service.ts:68",{"_index":840,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:72",{"_index":837,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:80",{"_index":842,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storage.service.ts:90",{"_index":838,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["storagebucket",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["storageref",{"_index":1397,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["storagereference",{"_index":1386,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["storedlang",{"_index":1904,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storelanguage",{"_index":1891,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storelanguage(lang",{"_index":1896,"title":{},"body":{"injectables/LanguageService.html":{}}}],["strapi",{"_index":3831,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["strapi.service",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["strapi.service.ts",{"_index":916,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["strapi.service.ts:100",{"_index":3939,"title":{},"body":{"injectables/TeamMappingStrapi.html":{},"injectables/UsersMappingStrapi.html":{}}}],["strapi.service.ts:101",{"_index":3450,"title":{},"body":{"injectables/PlayerMappingStrapi.html":{}}}],["strapi.service.ts:105",{"_index":4089,"title":{},"body":{"injectables/UsersMappingStrapi.html":{}}}],["strapi.service.ts:106",{"_index":3449,"title":{},"body":{"injectables/PlayerMappingStrapi.html":{}}}],["strapi.service.ts:115",{"_index":3937,"title":{},"body":{"injectables/TeamMappingStrapi.html":{}}}],["strapi.service.ts:118",{"_index":3941,"title":{},"body":{"injectables/TeamMappingStrapi.html":{}}}],["strapi.service.ts:121",{"_index":3938,"title":{},"body":{"injectables/TeamMappingStrapi.html":{}}}],["strapi.service.ts:124",{"_index":3447,"title":{},"body":{"injectables/PlayerMappingStrapi.html":{}}}],["strapi.service.ts:126",{"_index":4087,"title":{},"body":{"injectables/UsersMappingStrapi.html":{}}}],["strapi.service.ts:127",{"_index":3451,"title":{},"body":{"injectables/PlayerMappingStrapi.html":{}}}],["strapi.service.ts:129",{"_index":4090,"title":{},"body":{"injectables/UsersMappingStrapi.html":{}}}],["strapi.service.ts:130",{"_index":3448,"title":{},"body":{"injectables/PlayerMappingStrapi.html":{}}}],["strapi.service.ts:132",{"_index":4088,"title":{},"body":{"injectables/UsersMappingStrapi.html":{}}}],["strapi.service.ts:40",{"_index":2095,"title":{},"body":{"injectables/LeagueMappingStrapi.html":{}}}],["strapi.service.ts:47",{"_index":2096,"title":{},"body":{"injectables/LeagueMappingStrapi.html":{}}}],["strapi.service.ts:62",{"_index":2093,"title":{},"body":{"injectables/LeagueMappingStrapi.html":{},"injectables/PlayerMappingStrapi.html":{}}}],["strapi.service.ts:64",{"_index":3942,"title":{},"body":{"injectables/TeamMappingStrapi.html":{}}}],["strapi.service.ts:66",{"_index":4091,"title":{},"body":{"injectables/UsersMappingStrapi.html":{}}}],["strapi.service.ts:67",{"_index":2092,"title":{},"body":{"injectables/LeagueMappingStrapi.html":{}}}],["strapi.service.ts:75",{"_index":3943,"title":{},"body":{"injectables/TeamMappingStrapi.html":{}}}],["strapi.service.ts:76",{"_index":3452,"title":{},"body":{"injectables/PlayerMappingStrapi.html":{}}}],["strapi.service.ts:77",{"_index":4092,"title":{},"body":{"injectables/UsersMappingStrapi.html":{}}}],["strapi.service.ts:78",{"_index":2090,"title":{},"body":{"injectables/LeagueMappingStrapi.html":{}}}],["strapi.service.ts:81",{"_index":2094,"title":{},"body":{"injectables/LeagueMappingStrapi.html":{}}}],["strapi.service.ts:84",{"_index":2091,"title":{},"body":{"injectables/LeagueMappingStrapi.html":{}}}],["strapi.service.ts:95",{"_index":3940,"title":{},"body":{"injectables/TeamMappingStrapi.html":{}}}],["strapi_auth_token",{"_index":1012,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/variables.html":{}}}],["strapiauthenticationservice",{"_index":3818,"title":{"injectables/StrapiAuthenticationService.html":{}},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["strapiauthenticationservice(signin",{"_index":4373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strapiauthmappingservice",{"_index":1473,"title":{"injectables/StrapiAuthMappingService.html":{}},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["strapimedia",{"_index":920,"title":{"interfaces/StrapiMedia.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["strapimediadata",{"_index":1435,"title":{"interfaces/StrapiMediaData.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/typealiases.html":{}}}],["strapimediaservice",{"_index":1450,"title":{"classes/StrapiMediaService.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["strapimediaservice(upload",{"_index":4383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strapimeresponse",{"_index":1462,"title":{"interfaces/StrapiMeResponse.html":{}},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["strapirepositoryservice",{"_index":1018,"title":{"injectables/StrapiRepositoryService.html":{}},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["strapisignin",{"_index":1467,"title":{"interfaces/StrapiSignIn.html":{}},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["strapisigninresponse",{"_index":1463,"title":{"interfaces/StrapiSignInResponse.html":{}},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["strapisignup",{"_index":1470,"title":{"interfaces/StrapiSignUp.html":{}},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["strapisignupresponse",{"_index":1466,"title":{"interfaces/StrapiSignUpResponse.html":{}},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["strapiuploadresponse",{"_index":1434,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/typealiases.html":{}}}],["strapiuser",{"_index":1465,"title":{"interfaces/StrapiUser.html":{}},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["string",{"_index":40,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["string(data[key",{"_index":991,"title":{},"body":{"interfaces/Data-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/Meta-1.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamData.html":{},"interfaces/TeamRaw.html":{}}}],["string|undefined",{"_index":2304,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/PlayerModalComponent.html":{},"components/RegisterPage.html":{}}}],["strong",{"_index":3483,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["style",{"_index":1516,"title":{},"body":{"directives/HighLightDirective.html":{},"components/LanguageSelectorComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/UsersPage.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["su",{"_index":2394,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"index.html":{}}}],["subida",{"_index":4260,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1325,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/PictureSelectableComponent.html":{}}}],["subject.asobservable",{"_index":1343,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.complete",{"_index":1347,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.error(error",{"_index":1341,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.next(changedata",{"_index":1338,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscribe",{"_index":1314,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"components/LineupsPage.html":{}}}],["subscribe(collectionname",{"_index":913,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["subscription.interface",{"_index":1327,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["subscription.interface.ts",{"_index":907,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["subscription.interface.ts:10",{"_index":1653,"title":{},"body":{"interfaces/ICollectionSubscription.html":{}}}],["subscription.interface.ts:20",{"_index":1320,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:21",{"_index":1321,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:22",{"_index":1316,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:30",{"_index":1318,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:63",{"_index":1319,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:75",{"_index":1317,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:9",{"_index":1652,"title":{},"body":{"interfaces/ICollectionSubscription.html":{}}}],["subscriptions",{"_index":1311,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subtle",{"_index":2224,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["success",{"_index":4119,"title":{},"body":{"components/UsersPage.html":{}}}],["super",{"_index":1389,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["super(authmapping",{"_index":1285,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["super(http",{"_index":1022,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["super(repository",{"_index":2245,"title":{},"body":{"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":4284,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":2232,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["surname",{"_index":1092,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/FirebaseUser.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SignUpPayload.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["surname:data.name.last",{"_index":4038,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["surname:data.surname",{"_index":1097,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["surname:string",{"_index":1420,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{},"interfaces/Users.html":{}}}],["sus",{"_index":3174,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["suscribirse",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["suscripciones",{"_index":1352,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["suscripción",{"_index":1340,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["sutil",{"_index":1521,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["svg",{"_index":4285,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2054,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["switch(backend",{"_index":4371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch(change.type",{"_index":2315,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["switch(key",{"_index":935,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["switchmap",{"_index":1388,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"interfaces/MatchWithTeams.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["switchmap(authuser",{"_index":4153,"title":{},"body":{"injectables/UsersService.html":{}}}],["switchmap(snapshot",{"_index":1408,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["switchmap(user",{"_index":1393,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["sánchez",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["t",{"_index":659,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/Meta-2.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["tabla",{"_index":3773,"title":{},"body":{"components/StatisticsPage.html":{}}}],["table",{"_index":3767,"title":{},"body":{"components/StatisticsPage.html":{}}}],["take",{"_index":3830,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["take(1",{"_index":4395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["también",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"directives/HighLightDirective.html":{}}}],["tap",{"_index":1276,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["tape",{"_index":1868,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["target",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["target.closest('ion",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["tarjetas",{"_index":3070,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["task",{"_index":3871,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{}}}],["team",{"_index":110,"title":{"interfaces/Team.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/FirebasePlayer.html":{},"components/HomePage.html":{},"interfaces/ITeamRepository.html":{},"interfaces/ITeamService.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["team(_team:team",{"_index":3891,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["team):teamdata",{"_index":1061,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["team):teamraw",{"_index":3915,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["team.model",{"_index":3927,"title":{},"body":{"injectables/TeamMappingFirebase.html":{}}}],["team.model.ts",{"_index":1414,"title":{},"body":{"interfaces/FirebaseTeam.html":{}}}],["team.name",{"_index":3978,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["team.split('/').pop",{"_index":3501,"title":{},"body":{"injectables/PlayerService.html":{}}}],["team:[null",{"_index":3354,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["team:data.idequipo",{"_index":3430,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["team?.name",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["team?.picture?.url",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["team_api_url_token",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["team_collection_subscription_token",{"_index":4316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["team_repository_mapping_token",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["team_repository_token",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"injectables/TeamService.html":{},"miscellaneous/variables.html":{}}}],["team_resource_name_token",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["team_selectable.none",{"_index":3976,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["team_selectable.select_team",{"_index":3975,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["teamattributes",{"_index":967,"title":{"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{}}}],["teamcollectionsubscriptionfactory",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["teamcreatemodalcomponent",{"_index":109,"title":{"components/TeamCreateModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["teamdata",{"_index":966,"title":{"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{}}}],["teamfav",{"_index":1418,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{}}}],["teamfav?:documentreference",{"_index":1429,"title":{},"body":{"interfaces/FirebaseUser.html":{}}}],["teamfav?:string",{"_index":4047,"title":{},"body":{"interfaces/Users.html":{}}}],["teamid",{"_index":3500,"title":{},"body":{"injectables/PlayerService.html":{}}}],["teamimg",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["teamjsonserverstoragemapping",{"_index":3906,"title":{"injectables/TeamJsonServerStorageMapping.html":{}},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["teammappingfirebase",{"_index":477,"title":{"injectables/TeamMappingFirebase.html":{}},"body":{"modules/AppModule.html":{},"injectables/TeamMappingFirebase.html":{}}}],["teammappingstrapi",{"_index":457,"title":{"injectables/TeamMappingStrapi.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-2.html":{}}}],["teamraw",{"_index":965,"title":{"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{}},"body":{"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{}}}],["teamraw):team",{"_index":1077,"title":{},"body":{"interfaces/Data-3.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/Meta-3.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{}}}],["teams",{"_index":500,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/HomePage.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"components/TeamSelectableComponent.html":{},"modules/TeamsPageModule.html":{},"injectables/UsersMappingFirebase.html":{}}}],["teams'},{'name",{"_index":113,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["teams.directive",{"_index":3682,"title":{},"body":{"modules/SharedModule.html":{}}}],["teams.directive.ts",{"_index":1201,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["teams.directive.ts:13",{"_index":1208,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["teams.directive.ts:8",{"_index":1207,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["teams.directive.ts:9",{"_index":1206,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["teams.edit",{"_index":3900,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["teams.league",{"_index":3903,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["teams.new",{"_index":3901,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["teams.page",{"_index":3992,"title":{},"body":{"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{}}}],["teams.submit",{"_index":3905,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["teams.title",{"_index":1562,"title":{},"body":{"components/HomePage.html":{}}}],["teams.update",{"_index":3904,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["teams/:id",{"_index":545,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["teamselectablecomponent",{"_index":111,"title":{"components/TeamSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["teamselected",{"_index":3945,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["teamselected.name",{"_index":3977,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["teamselected:team",{"_index":3958,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["teamservice",{"_index":225,"title":{"injectables/TeamService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{}}}],["teamsmappingfactory",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["teamspage",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["teamspagemodule",{"_index":3986,"title":{"modules/TeamsPageModule.html":{}},"body":{"modules/TeamsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["teamspageroutingmodule",{"_index":3990,"title":{"modules/TeamsPageRoutingModule.html":{}},"body":{"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamsrepositoryfactory",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["teamsvc",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{},"components/TeamSelectableComponent.html":{}}}],["teamsvc:teamservice",{"_index":3960,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["tecnologías",{"_index":4266,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["tenga",{"_index":3466,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["text",{"_index":2010,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"pipes/PasswordTogglePipe.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["texto",{"_index":2735,"title":{},"body":{"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{}}}],["theme",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["thin",{"_index":1873,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["this._authenticated.asobservable",{"_index":611,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._authenticated.next(false",{"_index":1293,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._authenticated.next(true",{"_index":1291,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._items.findindex(item=>item.id",{"_index":866,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.length",{"_index":856,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.push(entity",{"_index":862,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.slice",{"_index":852,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items.splice(index",{"_index":873,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._items[index]=entity",{"_index":868,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this._leagues.asobservable",{"_index":2156,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["this._leagues.next([...response.data",{"_index":2179,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["this._leagues.next([...this._leagues.value",{"_index":2185,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["this._leagues.next(currentleague",{"_index":2324,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this._leagues.next(leaguesarray",{"_index":2404,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this._leagues.value",{"_index":2313,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this._matches.asobservable",{"_index":2914,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this._matches.next([...this._matches.value",{"_index":2949,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this._matches.next(currentleague",{"_index":2932,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this._matches.next(matchesarray",{"_index":3042,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this._matches.next(matcheswithteams",{"_index":2946,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this._matches.next(updatedmatches",{"_index":3015,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this._matches.value",{"_index":2931,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this._matches.value.map((match",{"_index":2980,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this._picture.asobservable",{"_index":3265,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":3276,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":3280,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":3283,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._ready.asobservable",{"_index":616,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._ready.next(true",{"_index":1295,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._teams.asobservable",{"_index":3957,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this._teams.next([...response.data",{"_index":3962,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this._teams.next([...this._teams.value",{"_index":3964,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this._token",{"_index":1289,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._user.asobservable",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(this.authmapping.me(resp",{"_index":3841,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(this.authmapping.me(user",{"_index":1292,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._user.next(this.authmapping.signin(resp",{"_index":3850,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(undefined",{"_index":1294,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(userfromdb",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionsheetctrl.create",{"_index":2813,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.alertctrl.create",{"_index":2381,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["this.apiurl",{"_index":817,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.apiurl}/${this.resource",{"_index":1047,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}/${id",{"_index":1051,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}/?_page=${page}&_per_page=${pagesize}&${search",{"_index":1706,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.apiurl}/${this.resource}?&${search",{"_index":1042,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}?pagination[page]=${page}&pagination[pagesize]=${pagesize}&${search}&populate=league,teams,team,players",{"_index":1038,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.auth",{"_index":1286,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.auth.gettoken",{"_index":1025,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["this.authmapping.signin(resp",{"_index":3851,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signin(usercredential.user",{"_index":1302,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signinpayload(authpayload",{"_index":1298,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signinpayload(authpayload)).pipe(map((resp:strapisigninresponse",{"_index":3846,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signup(resp",{"_index":3854,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signup(usercredential.user",{"_index":1305,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signuppayload(signuppayload",{"_index":1303,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signuppayload(signuppayload)).pipe(map((resp:strapisignupresponse",{"_index":3853,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authservice.getcurrentuser",{"_index":192,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authsvc.authenticated",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authsvc.emitloginsuccess",{"_index":2576,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.authsvc.getcurrentuser",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["this.authsvc.getcurrentuser().then(async",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authsvc.loginsuccessobs$.subscribe(async",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authsvc.signin(this.loginform.value).subscribe",{"_index":2572,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authsvc.signout().subscribe",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["this.authsvc.signup(this.registerform.value).subscribe",{"_index":3625,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.authsvc.user$.pipe",{"_index":4152,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.birthdate.setvalue(formatteddate",{"_index":3367,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.changelanguage(storedlang",{"_index":1906,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changepicture",{"_index":3301,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":3295,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.collectionname",{"_index":716,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.collectionref",{"_index":714,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.compartirpartido",{"_index":2827,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.currentlang",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{}}}],["this.currentuser",{"_index":2309,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.currentuser?.leaguefav",{"_index":2345,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.currentuserid",{"_index":2307,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.date",{"_index":4010,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["this.db",{"_index":712,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["this.defaultbackgroundcolor",{"_index":1526,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["this.defaultboxshadow",{"_index":1531,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["this.defaultlang",{"_index":1910,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.disabled",{"_index":1749,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["this.dragdata",{"_index":1180,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.dropped.emit",{"_index":1199,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.el.nativeelement.classlist.contains('dragging",{"_index":1538,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["this.el.nativeelement.innertext",{"_index":4019,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["this.el.nativeelement.queryselector(`[data",{"_index":1219,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["this.el.nativeelement.style.backgroundcolor",{"_index":1527,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["this.el.nativeelement.style.border",{"_index":1186,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.el.nativeelement.style.boxshadow",{"_index":1532,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["this.el.nativeelement.style.opacity",{"_index":1183,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.errormessage",{"_index":3084,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.favoritenames.league",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["this.favoritenames.leagueimg",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["this.favoritenames.player",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["this.favoritenames.playerimg",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["this.favoritenames.team",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["this.favoritenames.teamimg",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fb.group",{"_index":1965,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.filter(evt.detail.value",{"_index":2203,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["this.format",{"_index":4013,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["this.formgroup",{"_index":1964,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.controls['birthdate",{"_index":3374,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['birthdate'].setvalue(_player.birthdate",{"_index":3347,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['day",{"_index":2704,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['day'].setvalue(_match.day",{"_index":2677,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['dorsal",{"_index":3373,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['dorsal'].setvalue(_player.dorsal",{"_index":3346,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['email",{"_index":3580,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.formgroup.controls['firstsurname",{"_index":3370,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['firstsurname'].setvalue(_player.firstsurname",{"_index":3343,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['hour",{"_index":2705,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['hour'].setvalue(_match.hour",{"_index":2678,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['league",{"_index":3899,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.controls['league'].setvalue(_team.league",{"_index":3896,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.controls['localteamid",{"_index":2708,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['localteamid'].setvalue(_match.localteamid",{"_index":2681,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['name",{"_index":1968,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.controls['name'].setvalue(_league.name",{"_index":1957,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["this.formgroup.controls['name'].setvalue(_player.name",{"_index":3342,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['name'].setvalue(_team.name",{"_index":3894,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.controls['nationality",{"_index":3372,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['nationality'].setvalue(_player.nationality",{"_index":3345,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['numberofplayers",{"_index":3898,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.controls['numberofplayers'].setvalue(_team.numberofplayers",{"_index":3895,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.controls['picture",{"_index":3377,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.controls['picture'].setvalue(_league.picture?.url",{"_index":1958,"title":{},"body":{"components/LeagueCreateModalComponent.html":{}}}],["this.formgroup.controls['picture'].setvalue(_player.picture?.url",{"_index":3350,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['picture'].setvalue(_team.picture?.url",{"_index":3897,"title":{},"body":{"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.controls['place",{"_index":2707,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['place'].setvalue(_match.place",{"_index":2680,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['position",{"_index":3375,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['position'].setvalue(_player.position",{"_index":3348,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['result",{"_index":2706,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['result'].setvalue(_match.result",{"_index":2679,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['secondsurname",{"_index":3371,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['secondsurname'].setvalue(_player.secondsurname",{"_index":3344,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['surname",{"_index":3579,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.formgroup.controls['team",{"_index":3376,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['team'].setvalue(_player.team",{"_index":3349,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.formgroup.controls['visitorteamid",{"_index":2709,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.controls['visitorteamid'].setvalue(_match.visitorteamid",{"_index":2682,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.get('day')?.setvalue(this.formatdate(selecteddate",{"_index":2699,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.get('hour')?.setvalue(this.formattime(selectedtime",{"_index":2701,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.formgroup.get(key)?.dirty",{"_index":3569,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.formgroup.get(key)?.value",{"_index":3572,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.formgroup.patchvalue(updatedperson",{"_index":3557,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.formgroup.valid",{"_index":1976,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.formgroup.value",{"_index":1979,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.generatedstats",{"_index":3127,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.generatedstats?.id",{"_index":3113,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.generatestatsbasedonstatus",{"_index":3104,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.generatevalue(stat.local",{"_index":3132,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.generatevalue(stat.visitor",{"_index":3133,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.getbirthdate",{"_index":3351,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["this.getbyuserid(authuser.id).pipe",{"_index":4156,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getday",{"_index":2683,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.getdirtyvalues(this.formgroup",{"_index":1980,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.getheaders",{"_index":1458,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.getheaders()).pipe(map((res:paginatedraw",{"_index":1043,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.getheaders()).pipe(map(res",{"_index":1039,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.getheaders()).pipe(map(res=>this.mapping.getdeleted(res",{"_index":1055,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.gethour",{"_index":2684,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.getleagues",{"_index":2310,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.getmatches",{"_index":2918,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.getone(d",{"_index":947,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["this.getone(data",{"_index":2081,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{}}}],["this.getone(data.data",{"_index":959,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["this.getone(item",{"_index":2078,"title":{},"body":{"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["this.getstoredlanguage",{"_index":1905,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.hasvalue",{"_index":3279,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.http.delete(`${this.apiurl}/${this.resource}/${id",{"_index":1054,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.delete(`${this.apiurl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getdeleted(res",{"_index":829,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get",{"_index":1037,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.get(`${this.apiurl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getone(res",{"_index":824,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get(`${this.apiurl}/${this.resource}`).pipe(map(res=>this.mapping.getpaginated(page",{"_index":821,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.patch",{"_index":1711,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.http.post",{"_index":1046,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.post(`${this.apiurl}/${this.resource",{"_index":825,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.put",{"_index":1050,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.put(`${this.apiurl}/${this.resource}/${id",{"_index":827,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.httpclient.get",{"_index":3857,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.httpclient.post",{"_index":1456,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.index",{"_index":1182,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.isadmin",{"_index":2919,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.isconfirmpasswordvisible",{"_index":3623,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.isdarktheme",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdatepickeropen",{"_index":2685,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["this.isdisabled",{"_index":3281,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.islocalteammodalopen",{"_index":2703,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.ismobile",{"_index":1961,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.isopen",{"_index":1750,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["this.ispasswordvisible",{"_index":2570,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.istimepickeropen",{"_index":2686,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.isvisitorteammodalopen",{"_index":2702,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["this.jwt_token",{"_index":3837,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.languages.find(lang",{"_index":1757,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["this.languageservice.changelanguage(code",{"_index":1752,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.languageservice.getcurrentlang",{"_index":1745,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["this.languageservice.getstoredlanguage",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{}}}],["this.languageservice.storelanguage(code",{"_index":1753,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["this.languageservice.storelanguage(lang",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.leagueselected",{"_index":2193,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["this.leaguesubs.subscribe('leagues').subscribe((change",{"_index":2311,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.leaguesvc.add(newleague).subscribe",{"_index":2371,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.leaguesvc.delete(league.id).subscribe",{"_index":2388,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.leaguesvc.getall(this.page",{"_index":2176,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{}}}],["this.leaguesvc.getbyid(user.leaguefav).subscribe(league",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["this.leaguesvc.update(league!.id",{"_index":2376,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.loadedids.add(league.id",{"_index":2332,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.loadedids.add(match.id",{"_index":2937,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.loadedids.delete(change.id",{"_index":2323,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["this.loadedids.has(change.id",{"_index":2314,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["this.loadfavoritenames(user",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadingctrl.create",{"_index":3546,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.loadingstats",{"_index":3083,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.loadleagues",{"_index":2174,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["this.loadleagues(filtering",{"_index":2201,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["this.loadmatch",{"_index":2506,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.loadmatchdata",{"_index":3081,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.loadmoreleagues(ev.target",{"_index":2189,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["this.loadmoreteams(ev.target",{"_index":3966,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this.loadteams",{"_index":3103,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{},"components/TeamSelectableComponent.html":{}}}],["this.loadteamsandplayers",{"_index":2509,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.loadusers",{"_index":4106,"title":{},"body":{"components/UsersPage.html":{}}}],["this.locale",{"_index":4021,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["this.localgoals",{"_index":3099,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.localplayers",{"_index":2515,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.localteam",{"_index":2513,"title":{},"body":{"components/LineupsPage.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.loginform",{"_index":2568,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.controls['email",{"_index":2588,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.controls['password",{"_index":2589,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.reset",{"_index":2583,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.valid",{"_index":2571,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginsuccess$.asobservable",{"_index":614,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this.loginsuccess$.next(true",{"_index":631,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["this.mapping.getadded",{"_index":775,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapping.getadded(res",{"_index":1049,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getdeleted(entity",{"_index":782,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapping.getone",{"_index":770,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.mapping.getone(elem",{"_index":1045,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getpaginated(page",{"_index":765,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getupdated",{"_index":779,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapping.getupdated(res",{"_index":1053,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setadd(entity",{"_index":1048,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setadd(entity))).pipe",{"_index":773,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapping.setadd(entity)).pipe(map(res",{"_index":1710,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.mapping.setupdate(entity",{"_index":1052,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setupdate(entity))).pipe",{"_index":778,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapping.setupdate(entity)).pipe(map(res",{"_index":1712,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.match",{"_index":2508,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["this.match!.localteamid",{"_index":2511,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.match!.visitorteamid",{"_index":2517,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.match.day",{"_index":2847,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.match.hour",{"_index":2851,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.match.id",{"_index":3114,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.match.localteam?.name",{"_index":2842,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.match.localteamid",{"_index":3175,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.match.place",{"_index":2858,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.match.result",{"_index":2861,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["this.match.result.includes",{"_index":3097,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.match.result.split",{"_index":3098,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.match.status",{"_index":3108,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.match.status.tolowercase",{"_index":3116,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.match.visitorteam?.name",{"_index":2844,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.match.visitorteamid",{"_index":3177,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.matchid",{"_index":3079,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.matchsubs.subscribe('matches').subscribe((change",{"_index":2930,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.matchsvc.add(newmatch).subscribe",{"_index":2969,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.matchsvc.delete(match.id).subscribe",{"_index":2976,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.matchsvc.getall(this.page",{"_index":2935,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.matchsvc.getbyid(this.matchid).subscribe",{"_index":3085,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.matchsvc.getbyid(this.partidoid).subscribe",{"_index":2507,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.matchsvc.update(match!.id",{"_index":2970,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.matchsvc.update(match.id",{"_index":3009,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.me().subscribe",{"_index":3839,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.menu.close",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["this.menu?.isopen",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["this.meurl}`,{headers:{authorization",{"_index":3858,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.modalctrl.create",{"_index":2353,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["this.modalctrl.dismiss",{"_index":1977,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.mode",{"_index":1956,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.mode=='new",{"_index":1978,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.newid",{"_index":859,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["this.onchange",{"_index":1761,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["this.onchange(code",{"_index":1754,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["this.onchangecallback",{"_index":3525,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["this.onchangecallback(event.detail.value",{"_index":3527,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["this.ontouch",{"_index":1755,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["this.ontouchedcallback",{"_index":3526,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["this.page",{"_index":2175,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/TeamSelectableComponent.html":{}}}],["this.page=1",{"_index":2325,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.pages",{"_index":2180,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/TeamSelectableComponent.html":{}}}],["this.pagesize).subscribe",{"_index":2177,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/TeamSelectableComponent.html":{}}}],["this.parsestatvalue(a",{"_index":3182,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.parsestatvalue(b",{"_index":3184,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.partidoid",{"_index":2505,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.picturemodal?.dismiss",{"_index":3302,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.platform.is('android",{"_index":1963,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.platform.is('ios",{"_index":1962,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["this.players",{"_index":1213,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["this.players.foreach((player",{"_index":1218,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["this.players.length",{"_index":1214,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["this.playersvc.getall",{"_index":2514,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.playersvc.getbyid(user.playerfav).subscribe(player",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["this.popover?.dismiss",{"_index":2173,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["this.presentmodalleague('edit",{"_index":2349,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.presentmodalleague('new",{"_index":2379,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.presentmodalmatch('edit",{"_index":2952,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.presentmodalmatch('new",{"_index":2973,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.propagatechange",{"_index":2198,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["this.propagatechange(picture",{"_index":3284,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(this.leagueselected.id",{"_index":2196,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["this.propagatechange(this.teamselected.id",{"_index":3970,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this.registerform",{"_index":3622,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['confirmpassword",{"_index":3635,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['email",{"_index":3633,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['name",{"_index":3631,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['password",{"_index":3634,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['surname",{"_index":3632,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.reset",{"_index":3630,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.valid",{"_index":3624,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value",{"_index":3627,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.renderer.setattribute(this.el.nativeelement",{"_index":1176,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.renderer.setstyle(element",{"_index":1222,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["this.renderer.setstyle(this.el.nativeelement",{"_index":1547,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["this.repository.add(entity",{"_index":900,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.delete(id",{"_index":902,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.getall(1",{"_index":4146,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repository.getall(page",{"_index":898,"title":{},"body":{"injectables/BaseService.html":{},"injectables/PlayerService.html":{},"injectables/TeamService.html":{}}}],["this.repository.getbyid(id",{"_index":899,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.update(id",{"_index":901,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.route.parammap.subscribe(params",{"_index":2503,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":3080,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":2575,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.router.events.subscribe",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":198,"title":{},"body":{"guards/AdminGuard.html":{},"components/SplashPage.html":{}}}],["this.router.navigate(['/lineups",{"_index":2838,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.router.navigate(['/login",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["this.router.navigate(['/register",{"_index":2584,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate(['/statistics",{"_index":2840,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.router.navigatebyurl(returnurl",{"_index":2577,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.router.url",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectedlanguage",{"_index":1744,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["this.selectedleague",{"_index":2350,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.selectedmatch",{"_index":2953,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.selectedposition",{"_index":3524,"title":{},"body":{"components/PositionSelectableComponent.html":{}}}],["this.selectedteam",{"_index":1216,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["this.selectedteam.id",{"_index":1217,"title":{},"body":{"directives/FilterByTeamDirective.html":{}}}],["this.selectleague(group.id",{"_index":2206,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["this.selectleague(obj",{"_index":2197,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["this.selectleague(undefined",{"_index":2211,"title":{},"body":{"components/LeagueSelectableComponent.html":{}}}],["this.selectteam(group.id",{"_index":3973,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this.selectteam(obj",{"_index":3971,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this.selectteam(undefined",{"_index":3974,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this.setbackgroundcolor(this.defaultbackgroundcolor",{"_index":1543,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["this.setbackgroundcolor(this.highlightcolor",{"_index":1539,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["this.setbordercolor('rgba(173",{"_index":1546,"title":{},"body":{"directives/HighLightDirective.html":{}}}],["this.setfavoriteleague(newleaguefav",{"_index":2348,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.showmenu",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["this.signinurl",{"_index":3845,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.signupurl",{"_index":3852,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.stats.map(stat",{"_index":3110,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.statssvc.add(newstats).subscribe",{"_index":3143,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.statssvc.getall().subscribe",{"_index":3119,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.storage",{"_index":1390,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["this.subscriptions.clear",{"_index":1358,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.delete(collectionname",{"_index":1348,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.foreach(subject",{"_index":1356,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.get(collectionname",{"_index":1346,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.get(collectionname)!.asobservable",{"_index":1329,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.has(collectionname",{"_index":1328,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.set(collectionname",{"_index":1330,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.teamselected",{"_index":3968,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this.teamsvc.getall(this.page",{"_index":3961,"title":{},"body":{"components/TeamSelectableComponent.html":{}}}],["this.teamsvc.getbyid(this.match!.localteamid).subscribe",{"_index":2512,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.teamsvc.getbyid(this.match!.visitorteamid).subscribe",{"_index":2518,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.teamsvc.getbyid(this.match.localteamid).subscribe",{"_index":3176,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.teamsvc.getbyid(this.match.visitorteamid).subscribe",{"_index":3178,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.teamsvc.getbyid(user.teamfav).subscribe(team",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastcontroller.create",{"_index":4115,"title":{},"body":{"components/UsersPage.html":{}}}],["this.toastctrl.create",{"_index":3559,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.translate.currentlang",{"_index":1908,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.get('leagues.messages.delete_confirm').topromise",{"_index":2383,"title":{},"body":{"components/LeaguesPage.html":{}}}],["this.translate.get('matches.messages.delete_confirm').topromise",{"_index":2975,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.translate.instant('match.date",{"_index":2866,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.translate.instant('match.place",{"_index":2870,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.translate.instant('match.result",{"_index":2872,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.translate.instant('match.share_dialog_title",{"_index":2876,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.translate.instant('match.share_not_available",{"_index":3033,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.translate.instant('match.time",{"_index":2868,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.translate.use(lang",{"_index":1907,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translatesvc.get('common.error.save').topromise",{"_index":3578,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.translatesvc.get('common.success.save').topromise",{"_index":3577,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.unsubscribefunctions.clear",{"_index":1357,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.delete(collectionname",{"_index":1345,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.foreach(unsubscribe",{"_index":1355,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.get(collectionname",{"_index":1344,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.set(collectionname",{"_index":1342,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.updatematchstatuses",{"_index":2927,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["this.uploadurl",{"_index":1457,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.user",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{}}}],["this.user.picture",{"_index":3555,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.picture.url",{"_index":3556,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.users",{"_index":4109,"title":{},"body":{"components/UsersPage.html":{}}}],["this.usersservice.getall().subscribe",{"_index":4107,"title":{},"body":{"components/UsersPage.html":{}}}],["this.usersservice.update(user.id",{"_index":4113,"title":{},"body":{"components/UsersPage.html":{}}}],["this.usersvc.add(userdata).subscribe",{"_index":3629,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.usersvc.getcurrentuser().subscribe(user",{"_index":2306,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["this.userwithauth",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userwithauth$.subscribe",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["this.veralineaciones",{"_index":2819,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.verestadisticas",{"_index":2822,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["this.visitorgoals",{"_index":3101,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["this.visitorplayers",{"_index":2521,"title":{},"body":{"components/LineupsPage.html":{}}}],["this.visitorteam",{"_index":2519,"title":{},"body":{"components/LineupsPage.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["throw",{"_index":870,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{},"miscellaneous/variables.html":{}}}],["thumb",{"_index":1877,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["thumb:hover",{"_index":1879,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["thumbnail",{"_index":1122,"title":{"interfaces/Thumbnail.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LeaguesPage.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"injectables/PlayerMappingFirebase.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Team.html":{},"injectables/TeamMappingFirebase.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["thumbnail:data.picture.thumbnail",{"_index":4043,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["thumbnail:string",{"_index":4033,"title":{},"body":{"interfaces/UserRaw.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["time",{"_index":2638,"title":{},"body":{"components/MatchCreateComponent.html":{},"directives/TimeDirectiveDirective.html":{}}}],["time.substring(11",{"_index":2695,"title":{},"body":{"components/MatchCreateComponent.html":{}}}],["timedirectivedirective",{"_index":123,"title":{"directives/TimeDirectiveDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{},"overview.html":{}}}],["timer",{"_index":3711,"title":{},"body":{"components/SplashPage.html":{}}}],["timer(2500).subscribe(_",{"_index":3717,"title":{},"body":{"components/SplashPage.html":{}}}],["timestamp",{"_index":1371,"title":{},"body":{"interfaces/FirebaseMatch.html":{}}}],["tipo",{"_index":1636,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/SearchParams.html":{}}}],["tiros",{"_index":3054,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["title",{"_index":1555,"title":{},"body":{"components/HomePage.html":{},"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["title:string",{"_index":4025,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["toast",{"_index":3558,"title":{},"body":{"components/ProfilePage.html":{},"components/UsersPage.html":{}}}],["toast.present",{"_index":3563,"title":{},"body":{"components/ProfilePage.html":{},"components/UsersPage.html":{}}}],["toastcontroller",{"_index":3534,"title":{},"body":{"components/ProfilePage.html":{},"components/UsersPage.html":{}}}],["toastctrl",{"_index":3533,"title":{},"body":{"components/ProfilePage.html":{}}}],["todas",{"_index":1350,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"index.html":{}}}],["today",{"_index":4017,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["today.toisostring().split('t')[0]}t${this.date",{"_index":4018,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["todo",{"_index":1422,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/Users.html":{},"index.html":{}}}],["toggle.pipe",{"_index":3620,"title":{},"body":{"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{}}}],["toggle.pipe.ts",{"_index":3212,"title":{},"body":{"pipes/PasswordTogglePipe.html":{}}}],["toggle.pipe.ts:8",{"_index":3215,"title":{},"body":{"pipes/PasswordTogglePipe.html":{}}}],["toggle/password",{"_index":3211,"title":{},"body":{"pipes/PasswordTogglePipe.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{}}}],["toggleconfirmvisibility",{"_index":3598,"title":{},"body":{"components/RegisterPage.html":{}}}],["toggledropdown",{"_index":1748,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{}}}],["togglefavorite",{"_index":2263,"title":{},"body":{"components/LeaguesPage.html":{}}}],["togglefavorite(league",{"_index":2286,"title":{},"body":{"components/LeaguesPage.html":{}}}],["toggletheme",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["togglevisibility",{"_index":2550,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["toindex",{"_index":1198,"title":{},"body":{"directives/DragDropDirective.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["token",{"_index":1024,"title":{},"body":{"interfaces/Data-2.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{}}}],["token\",resp.jwt",{"_index":3848,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["tomar",{"_index":4396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tono",{"_index":3771,"title":{},"body":{"components/StatisticsPage.html":{}}}],["toolbar",{"_index":2001,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["top",{"_index":1846,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["toreturn",{"_index":939,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["toreturn.data['name']=data[key",{"_index":937,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{}}}],["toreturn:any",{"_index":2053,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["toreturn:leaguedata",{"_index":933,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueData.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/MediaRaw.html":{},"interfaces/Meta.html":{}}}],["toreturn['ape1']=data[key",{"_index":3416,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["toreturn['ape2']=data[key",{"_index":3417,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["toreturn['dorsal']=data[key",{"_index":3420,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["toreturn['fechnacimiento']=data[key",{"_index":3418,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["toreturn['idequipo']=data[key",{"_index":3422,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["toreturn['idliga']=data[key",{"_index":3921,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["toreturn['jugadoresenplantilla']=data[key",{"_index":3918,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["toreturn['nacionalidad']=data[key",{"_index":3419,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["toreturn['nmatches']=data[key",{"_index":3920,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["toreturn['nombre']=data[key",{"_index":2055,"title":{},"body":{"injectables/LeagueJsonServerStorageMapping.html":{},"interfaces/LeagueRaw.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["toreturn['posicion']=data[key",{"_index":3421,"title":{},"body":{"injectables/PlayerJsonServerStorageMapping.html":{},"interfaces/PlayerRaw.html":{}}}],["toreturn['pts']=data[key",{"_index":3919,"title":{},"body":{"injectables/TeamJsonServerStorageMapping.html":{},"interfaces/TeamRaw-1.html":{}}}],["total",{"_index":1017,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/UsersMappingFirebase.html":{}}}],["track",{"_index":1876,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["transform",{"_index":1832,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"pipes/PasswordTogglePipe.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["transform(ispasswordvisible",{"_index":3214,"title":{},"body":{"pipes/PasswordTogglePipe.html":{}}}],["transition",{"_index":1813,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeaguesPage.html":{}}}],["translate",{"_index":36,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["translate.addlangs(['es",{"_index":1899,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.getbrowserlang",{"_index":1902,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.setdefaultlang('es",{"_index":1900,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.use(browserlang?.match(/es|en",{"_index":1903,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate/core",{"_index":44,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LanguageService.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"components/LineupsPage.html":{},"modules/LineupsPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"directives/TimeDirectiveDirective.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginPageModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginPageModule.html":{}}}],["translatehttploader(http",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginPageModule.html":{}}}],["translatemodule",{"_index":154,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/LeaguesPage.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["translatemodule.forchild",{"_index":155,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["translatemodule.forroot",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"injectables/LanguageService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"directives/TimeDirectiveDirective.html":{}}}],["translatesvc",{"_index":3535,"title":{},"body":{"components/ProfilePage.html":{}}}],["translatey",{"_index":2425,"title":{},"body":{"components/LeaguesPage.html":{}}}],["transparent",{"_index":1796,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/UsersPage.html":{}}}],["transparente",{"_index":1522,"title":{},"body":{"directives/HighLightDirective.html":{},"components/StatisticsPage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["truco",{"_index":2336,"title":{},"body":{"components/LeaguesPage.html":{}}}],["true",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"directives/TimeDirectiveDirective.html":{}}}],["tslib",{"_index":3338,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"dependencies.html":{}}}],["tu",{"_index":4234,"title":{},"body":{"index.html":{}}}],["tus",{"_index":1862,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"index.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ITeamService.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"components/LeagueCreateModalComponent.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueJsonServerStorageMapping.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"injectables/LeagueService.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"components/MatchMenuComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/MatchStatsService.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordTogglePipe.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerJsonServerStorageMapping.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw.html":{},"interfaces/PlayerRaw-1.html":{},"injectables/PlayerService.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Small.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"components/TeamCreateModalComponent.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamJsonServerStorageMapping.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-1.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"injectables/TeamService.html":{},"interfaces/Thumbnail.html":{},"directives/TimeDirectiveDirective.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4300,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":740,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["typescript",{"_index":4271,"title":{},"body":{"index.html":{}}}],["títulos",{"_index":3485,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["u",{"_index":3150,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["un",{"_index":3025,"title":{},"body":{"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/StatisticsPage.html":{},"components/UsersPage.html":{},"index.html":{}}}],["una",{"_index":736,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"components/PictureSelectableComponent.html":{},"index.html":{}}}],["undefined",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Data-1.html":{},"interfaces/Data-2.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingFirebase.html":{},"interfaces/LeagueRaw-2.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/PlayerMappingStrapi.html":{},"components/PlayerModalComponent.html":{},"interfaces/PlayerRaw-1.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Team.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingFirebase.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"components/TeamSelectableComponent.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["unknown",{"_index":676,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["unsubscribe",{"_index":1315,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["unsubscribe(collectionname",{"_index":914,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["unsubscribefunctions",{"_index":1312,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["update",{"_index":652,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"injectables/PlayerService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["update(id",{"_index":677,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data-2.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LeagueService.html":{},"injectables/MatchService.html":{},"injectables/MatchStatsService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlayerService.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/TeamService.html":{},"injectables/UsersService.html":{}}}],["updated",{"_index":2339,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{}}}],["updated).subscribe",{"_index":3010,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["updatedat",{"_index":927,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Data-1.html":{},"interfaces/Data-3.html":{},"interfaces/Data-4.html":{},"interfaces/Formats.html":{},"interfaces/GroupRaw.html":{},"interfaces/Large.html":{},"interfaces/LeagueAttributes.html":{},"interfaces/LeagueAttributes-1.html":{},"interfaces/LeagueData.html":{},"interfaces/LeagueData-1.html":{},"interfaces/LeagueData-2.html":{},"injectables/LeagueMappingStrapi.html":{},"interfaces/LeagueRaw-1.html":{},"interfaces/LeagueRaw-2.html":{},"interfaces/MediaRaw.html":{},"interfaces/MediaRaw-1.html":{},"interfaces/MediaRaw-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Meta-1.html":{},"interfaces/Meta-3.html":{},"interfaces/Meta-4.html":{},"interfaces/Model.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/PlayerAttributes.html":{},"interfaces/PlayerData.html":{},"injectables/PlayerMappingStrapi.html":{},"interfaces/PlayerRaw-1.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/TeamAttributes.html":{},"interfaces/TeamAttributes-1.html":{},"interfaces/TeamData.html":{},"interfaces/TeamData-1.html":{},"injectables/TeamMappingStrapi.html":{},"interfaces/TeamRaw.html":{},"interfaces/TeamRaw-2.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["updatedat?:string",{"_index":3205,"title":{},"body":{"interfaces/Model.html":{}}}],["updatedmatches",{"_index":2979,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["updatedoc",{"_index":688,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["updatedperson",{"_index":3552,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateduser",{"_index":2334,"title":{},"body":{"components/LeaguesPage.html":{},"components/UsersPage.html":{}}}],["updatematchstatuses",{"_index":2977,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["updateuserrole",{"_index":4097,"title":{},"body":{"components/UsersPage.html":{}}}],["updateuserrole(user",{"_index":4103,"title":{},"body":{"components/UsersPage.html":{}}}],["upload",{"_index":635,"title":{},"body":{"injectables/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"classes/StrapiMediaService.html":{}}}],["upload(blob",{"_index":636,"title":{},"body":{"injectables/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"classes/StrapiMediaService.html":{}}}],["upload(blob:blob):observable",{"_index":639,"title":{},"body":{"injectables/BaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["upload:string",{"_index":4380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload_api_url_token",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/variables.html":{}}}],["upload_api_url_token,user_repository_token",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadbytes",{"_index":1384,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploaded",{"_index":1403,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploadedblob",{"_index":2363,"title":{},"body":{"components/LeaguesPage.html":{},"components/ProfilePage.html":{}}}],["uploadedblob.map(url",{"_index":2366,"title":{},"body":{"components/LeaguesPage.html":{}}}],["uploadedblob[0",{"_index":3575,"title":{},"body":{"components/ProfilePage.html":{}}}],["uploads/${filename",{"_index":1399,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploadurl",{"_index":1452,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["uppercase",{"_index":2011,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["url",{"_index":806,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data-2.html":{},"interfaces/Data-4.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/League.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LeaguesPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Medium.html":{},"interfaces/Meta-2.html":{},"interfaces/Meta-4.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"interfaces/Player.html":{},"injectables/PlayerMappingFirebase.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Team.html":{},"injectables/TeamMappingFirebase.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{}}}],["url.tostring",{"_index":2367,"title":{},"body":{"components/LeaguesPage.html":{}}}],["url:data.picture.url",{"_index":4039,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["url:string",{"_index":4029,"title":{},"body":{"interfaces/UserRaw.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["usando",{"_index":3029,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["usar",{"_index":2736,"title":{},"body":{"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{},"components/PlayerCreateModalComponent.html":{}}}],["usas",{"_index":4005,"title":{},"body":{"directives/TimeDirectiveDirective.html":{}}}],["useclass",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass:leagueservice",{"_index":527,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass:playerservice",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass:teamservice",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["useexisting",{"_index":1722,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":212,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthMappingService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/GroupRaw.html":{},"interfaces/IAuthMapping.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/PersonAttributes.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{}}}],["user!!.userid",{"_index":2308,"title":{},"body":{"components/LeaguesPage.html":{}}}],["user$:observable",{"_index":628,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["user.email",{"_index":4129,"title":{},"body":{"components/UsersPage.html":{}}}],["user.getidtoken",{"_index":1290,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["user.id",{"_index":1404,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["user.leaguefav",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["user.model",{"_index":4064,"title":{},"body":{"injectables/UsersMappingFirebase.html":{}}}],["user.model.ts",{"_index":1415,"title":{},"body":{"interfaces/FirebaseUser.html":{}}}],["user.name",{"_index":4116,"title":{},"body":{"components/UsersPage.html":{}}}],["user.playerfav",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["user.role",{"_index":4112,"title":{},"body":{"components/UsersPage.html":{}}}],["user.surname",{"_index":4128,"title":{},"body":{"components/UsersPage.html":{}}}],["user.teamfav",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["user:data.userid?number(data.userid):null",{"_index":1098,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["user:string",{"_index":3693,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"interfaces/User.html":{}}}],["user:userraw",{"_index":1093,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["user?.id",{"_index":2965,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["user?.role",{"_index":2920,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["user_api_url_token",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user_repository_mapping_token",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user_repository_token",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["user_resource_name_token",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["userattributes",{"_index":1084,"title":{"interfaces/UserAttributes.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["usercredential",{"_index":1244,"title":{},"body":{"injectables/FirebaseAuthMappingService.html":{}}}],["userdata",{"_index":1083,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/RegisterPage.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["userdoc",{"_index":193,"title":{},"body":{"guards/AdminGuard.html":{}}}],["userdoc?.role",{"_index":195,"title":{},"body":{"guards/AdminGuard.html":{}}}],["userfromdb",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["userid",{"_index":1104,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/FirebaseLeague.html":{},"interfaces/FirebaseMatch.html":{},"interfaces/FirebaseMatchStatistics.html":{},"interfaces/FirebasePlayer.html":{},"interfaces/FirebaseTeam.html":{},"interfaces/FirebaseUser.html":{},"interfaces/IUserService.html":{},"interfaces/League.html":{},"injectables/LeagueMappingFirebase.html":{},"components/LeaguesPage.html":{},"interfaces/Match.html":{},"injectables/MatchMappingFirebase.html":{},"interfaces/MatchStatistics.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/Player.html":{},"injectables/PlayerMappingFirebase.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"interfaces/Team.html":{},"injectables/TeamMappingFirebase.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"injectables/UsersService.html":{}}}],["userid:user.id",{"_index":3554,"title":{},"body":{"components/ProfilePage.html":{}}}],["userid?:string",{"_index":4045,"title":{},"body":{"interfaces/Users.html":{}}}],["userid}).pipe",{"_index":4147,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermappingfactory",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":1085,"title":{},"body":{"interfaces/Data-4.html":{},"injectables/FirebaseAuthMappingService.html":{},"interfaces/GroupRaw.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["username:payload.name",{"_index":1479,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["username:response.user.username",{"_index":1482,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["username:response.username",{"_index":1485,"title":{},"body":{"interfaces/GroupRaw.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{}}}],["username:string",{"_index":1472,"title":{},"body":{"interfaces/GroupRaw.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/User.html":{}}}],["userraw",{"_index":1082,"title":{"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{}},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingStrapi.html":{}}}],["userraw):users",{"_index":4036,"title":{},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["userrepositoryfactory",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":115,"title":{"interfaces/Users.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Data-4.html":{},"interfaces/GroupRaw.html":{},"components/HomePage.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Task.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw.html":{},"interfaces/UserRaw-1.html":{},"interfaces/Users.html":{},"injectables/UsersLocalStorageMapping.html":{},"injectables/UsersMappingFirebase.html":{},"injectables/UsersMappingStrapi.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"injectables/UsersService.html":{}}}],["users).subscribe",{"_index":4114,"title":{},"body":{"components/UsersPage.html":{}}}],["users):persondata",{"_index":1096,"title":{},"body":{"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["users.model",{"_index":3874,"title":{},"body":{"interfaces/Task.html":{}}}],["users.no_users",{"_index":4130,"title":{},"body":{"components/UsersPage.html":{}}}],["users.page",{"_index":4137,"title":{},"body":{"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["users.page.html",{"_index":4095,"title":{},"body":{"components/UsersPage.html":{}}}],["users.page.scss",{"_index":4094,"title":{},"body":{"components/UsersPage.html":{}}}],["users.title",{"_index":4122,"title":{},"body":{"components/UsersPage.html":{}}}],["users_collection_subscription_token",{"_index":4317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userscollectionsubscriptionfactory",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":171,"title":{},"body":{"guards/AdminGuard.html":{}}}],["userslocalstoragemapping",{"_index":4034,"title":{"injectables/UsersLocalStorageMapping.html":{}},"body":{"interfaces/UserRaw.html":{},"injectables/UsersLocalStorageMapping.html":{}}}],["usersmappingfirebase",{"_index":4056,"title":{"injectables/UsersMappingFirebase.html":{}},"body":{"injectables/UsersMappingFirebase.html":{}}}],["usersmappingstrapi",{"_index":461,"title":{"injectables/UsersMappingStrapi.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Data-4.html":{},"interfaces/MediaRaw-3.html":{},"interfaces/Meta-4.html":{},"interfaces/PersonAttributes.html":{},"interfaces/PersonData.html":{},"interfaces/PersonRaw.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserData.html":{},"interfaces/UserRaw-1.html":{},"injectables/UsersMappingStrapi.html":{}}}],["userspage",{"_index":114,"title":{"components/UsersPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"overview.html":{}}}],["userspagemodule",{"_index":4131,"title":{"modules/UsersPageModule.html":{}},"body":{"modules/UsersPageModule.html":{},"modules.html":{},"overview.html":{}}}],["userspageroutingmodule",{"_index":4135,"title":{"modules/UsersPageRoutingModule.html":{}},"body":{"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":172,"title":{"injectables/UsersService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UsersPage.html":{},"injectables/UsersService.html":{}}}],["usersvc",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["usersvc:usersservice",{"_index":3621,"title":{},"body":{"components/RegisterPage.html":{}}}],["userwithauth",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["usuario",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MatchWithTeams.html":{},"components/ProfilePage.html":{},"components/UsersPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":498,"title":{},"body":{"modules/AppModule.html":{},"injectables/LeagueMappingFirebase.html":{},"injectables/MatchMappingFirebase.html":{},"injectables/MatchStatisticsMappingFirebase.html":{},"injectables/PlayerMappingFirebase.html":{},"injectables/TeamMappingFirebase.html":{},"components/UsersPage.html":{},"index.html":{}}}],["utilizando",{"_index":4269,"title":{},"body":{"index.html":{}}}],["v",{"_index":1032,"title":{},"body":{"interfaces/Data-2.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta-2.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["vacío",{"_index":3129,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["vala",{"_index":3181,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["valb",{"_index":3183,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["validar",{"_index":3138,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["validationerrors",{"_index":4215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1948,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["validators.email",{"_index":2569,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["validators.minlength(2",{"_index":1967,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["validators.minlength(3",{"_index":3352,"title":{},"body":{"components/PlayerCreateModalComponent.html":{}}}],["validators.pattern(/^\\d",{"_index":3353,"title":{},"body":{"components/PlayerCreateModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["validators.required",{"_index":1966,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["validchars",{"_index":846,"title":{},"body":{"injectables/BaseRespositoryLocalStorageService.html":{}}}],["valor",{"_index":735,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"miscellaneous/variables.html":{}}}],["valores",{"_index":1639,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/SearchParams.html":{},"components/StatisticsPage.html":{}}}],["value",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRespositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"directives/HighLightDirective.html":{},"components/HomePage.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams-1.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["value.includes",{"_index":3186,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["value.left",{"_index":3784,"title":{},"body":{"components/StatisticsPage.html":{}}}],["value.right",{"_index":3793,"title":{},"body":{"components/StatisticsPage.html":{}}}],["value=${filtervalue",{"_index":748,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["var",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"components/UsersPage.html":{}}}],["variables",{"_index":4303,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variación",{"_index":3162,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["variation",{"_index":3159,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["vega",{"_index":57,"title":{},"body":{"components/AboutPage.html":{}}}],["venían",{"_index":3095,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["ver",{"_index":2815,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{},"index.html":{}}}],["veralineaciones",{"_index":2795,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["verde",{"_index":3765,"title":{},"body":{"components/StatisticsPage.html":{}}}],["verestadisticas",{"_index":2796,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["verificamos",{"_index":3117,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["verificar",{"_index":3170,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["version",{"_index":4294,"title":{},"body":{"properties.html":{}}}],["versión",{"_index":4277,"title":{},"body":{"index.html":{}}}],["verticalmente",{"_index":2431,"title":{},"body":{"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["viewchild",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["viewchild('menu",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('popover",{"_index":2162,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["visible",{"_index":3475,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["visibles",{"_index":3486,"title":{},"body":{"components/PlayerModalComponent.html":{}}}],["visitante",{"_index":2845,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["visitor",{"_index":2520,"title":{},"body":{"components/LineupsPage.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["visitor?.trim",{"_index":3102,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["visitorgoals",{"_index":3050,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["visitorplayers",{"_index":2481,"title":{},"body":{"components/LineupsPage.html":{}}}],["visitorscore",{"_index":3007,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["visitorteam",{"_index":2482,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-1.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["visitorteam.name",{"_index":2525,"title":{},"body":{"components/LineupsPage.html":{}}}],["visitorteam?.name",{"_index":3752,"title":{},"body":{"components/StatisticsPage.html":{}}}],["visitorteamid",{"_index":1370,"title":{},"body":{"interfaces/FirebaseMatch.html":{},"interfaces/Match.html":{},"components/MatchCreateComponent.html":{},"injectables/MatchMappingFirebase.html":{},"interfaces/MatchWithTeams.html":{}}}],["visitorteamname",{"_index":2843,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["visitorteamname}\\n",{"_index":2865,"title":{},"body":{"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{}}}],["visitorteamraw",{"_index":3087,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["visitorvalue",{"_index":1377,"title":{},"body":{"interfaces/FirebaseMatchStatistics.html":{},"interfaces/MatchStatistics.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["visualizar",{"_index":4255,"title":{},"body":{"index.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"interfaces/CollectionChange.html":{},"directives/DragDropDirective.html":{},"directives/FilterByTeamDirective.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"directives/HighLightDirective.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LanguageService.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/LineupsPage.html":{},"components/LoginPage.html":{},"components/MatchCreateComponent.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams-2.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/PositionSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"components/StatisticsPage.html":{},"injectables/StrapiAuthenticationService.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"directives/TimeDirectiveDirective.html":{},"injectables/UsersLocalStorageMapping.html":{},"components/UsersPage.html":{}}}],["vs",{"_index":2524,"title":{},"body":{"components/LineupsPage.html":{},"components/MatchMenuComponent.html":{},"interfaces/MatchWithTeams.html":{},"interfaces/MatchWithTeams-2.html":{},"components/StatisticsPage.html":{}}}],["vuelo",{"_index":3152,"title":{},"body":{"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["válida",{"_index":738,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["válido",{"_index":2582,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["we'll",{"_index":2220,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["web",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MatchWithTeams.html":{},"components/SplashPage.html":{},"modules/SplashPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["webdir",{"_index":4410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webkit",{"_index":1874,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["weight",{"_index":1839,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/StatisticsPage.html":{},"components/TeamCreateModalComponent.html":{}}}],["white",{"_index":2003,"title":{},"body":{"components/LeagueCreateModalComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{}}}],["white/0",{"_index":4125,"title":{},"body":{"components/UsersPage.html":{}}}],["width",{"_index":1440,"title":{},"body":{"interfaces/Formats.html":{},"components/LanguageSelectorComponent.html":{},"interfaces/Large.html":{},"components/LeagueCreateModalComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"components/MatchCreateComponent.html":{},"interfaces/Medium.html":{},"components/PlayerCreateModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"components/StatisticsPage.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"interfaces/Thumbnail.html":{}}}],["width:75",{"_index":2437,"title":{},"body":{"components/LeaguesPage.html":{}}}],["window.location.reload",{"_index":3013,"title":{},"body":{"interfaces/MatchWithTeams.html":{}}}],["word",{"_index":2444,"title":{},"body":{"components/LeaguesPage.html":{}}}],["writevalue",{"_index":1770,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PositionSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["writevalue(obj",{"_index":2151,"title":{},"body":{"components/LeagueSelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["writevalue(value",{"_index":1759,"title":{},"body":{"interfaces/Language.html":{},"components/LanguageSelectorComponent.html":{},"components/PositionSelectableComponent.html":{}}}],["www",{"_index":4411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/PictureSelectableComponent.html":{},"components/PlayerCreateModalComponent.html":{},"components/PlayerModalComponent.html":{},"components/TeamCreateModalComponent.html":{},"components/TeamSelectableComponent.html":{},"index.html":{}}}],["ya",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseAuthMappingService.html":{},"interfaces/MatchWithTeams-1.html":{},"components/StatisticsPage.html":{}}}],["year",{"_index":2692,"title":{},"body":{"components/MatchCreateComponent.html":{},"interfaces/MatchWithTeams.html":{}}}],["yes",{"_index":2386,"title":{},"body":{"components/LeaguesPage.html":{},"interfaces/MatchWithTeams.html":{},"components/UsersPage.html":{}}}],["youtube",{"_index":4282,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":2715,"title":{},"body":{"components/MatchCreateComponent.html":{},"components/PlayerCreateModalComponent.html":{}}}],["z",{"_index":1845,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"components/LeagueSelectableComponent.html":{},"components/TeamSelectableComponent.html":{}}}],["zone.js",{"_index":4185,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":140,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LeaguesPageModule.html":{},"modules/LineupsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/MatchesPageModule.html":{},"modules/PlayersPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SplashPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/about/about.page.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguageService } from 'src/app/core/services/language.service';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n  currentLang:string\n  constructor(\n    private translate: TranslateService,\n    private languageService: LanguageService) {\n      this.currentLang = this.languageService.getStoredLanguage();\n    }\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n      \n      \n        {{\"ABOUT.TITLE\" | translate}}\n      \n    \n  \n  \n  \n    \n      \n      \n      \n      Alonso Sánchez Moreno de Vega\n\n      \n        \n          \n            \n          \n        \n      \n\n      \n        {{\"ABOUT.ME\" | translate}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\"ABOUT.TITLE\" | translate}}                                            Alonso Sánchez Moreno de Vega                                                                          {{\"ABOUT.ME\" | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule,\n    TranslateModule.forChild()],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: FirebaseAuthenticationService, userService: UsersService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        FirebaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { lastValueFrom } from 'rxjs';\nimport { FirebaseAuthenticationService } from '../services/impl/firebase-authentication.service';\nimport { UsersService } from '../services/impl/users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(\n    private authService: FirebaseAuthenticationService,\n    private userService: UsersService,\n    private router: Router\n  ) {}\n\n  canActivate(): Promise {\n    return new Promise(async (resolve) => {\n      const authUser = await this.authService.getCurrentUser();\n\n      if (authUser) {\n        const userDoc = await lastValueFrom(this.userService.getByUserId(authUser.id));\n        if (userDoc?.role === 'Admin') {\n          return resolve(true);\n        }\n      }\n\n      this.router.navigate(['/home']);\n      resolve(false);\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _user\n                            \n                            \n                                    Public\n                                authSvc\n                            \n                            \n                                currentLang\n                            \n                            \n                                favoriteNames\n                            \n                            \n                                    Public\n                                leagueSvc\n                            \n                            \n                                    \n                                menu\n                            \n                            \n                                    Public\n                                playerSvc\n                            \n                            \n                                showMenu\n                            \n                            \n                                    Public\n                                teamSvc\n                            \n                            \n                                user$\n                            \n                            \n                                    Public\n                                userSvc\n                            \n                            \n                                userWithAuth$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                    \n                                handleClick\n                            \n                            \n                                loadFavoriteNames\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService, authSvc: BaseAuthenticationService, router: Router, activatedRoute: ActivatedRoute, userSvc: UsersService, leagueSvc: LeagueService, teamSvc: TeamService, playerSvc: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        leagueSvc\n                                                  \n                                                        \n                                                                        LeagueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamSvc\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerSvc\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadFavoriteNames\n                        \n                    \n                \n            \n            \n                \nloadFavoriteNames(user: Users)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Users\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseAuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favoriteNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    league: '',\n    leagueImg: '',\n    team: '',\n    teamImg: '',\n    player: '',\n    playerImg: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        leagueSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LeagueService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonMenu | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('menu', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        playerSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlayerService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        teamSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userWithAuth$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { combineLatest, map, filter } from 'rxjs';\nimport { BaseAuthenticationService } from './core/services/impl/base-authentication.service';\nimport { LanguageService } from './core/services/language.service';\nimport { BehaviorSubject, lastValueFrom, Observable } from 'rxjs';\nimport { UsersService } from './core/services/impl/users.service';\nimport { LeagueService } from './core/services/impl/league.service';\nimport { Team } from './core/models/teams.model';\nimport { TeamService } from './core/services/impl/team.service';\nimport { PlayerService } from './core/services/impl/player.service';\nimport { Users } from './core/models/users.model';\nimport { IonMenu } from '@ionic/angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent implements OnInit{\n  private _user: BehaviorSubject = new BehaviorSubject({})\n  user$: Observable = this._user.asObservable()\n  showMenu: boolean = true;\n  currentLang: string;\n  userWithAuth$: Observable | undefined;\n\n  @ViewChild('menu', { static: false }) menu: IonMenu | undefined;\n\n  @HostListener('document:click', ['$event'])\n  handleClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    if (\n      this.menu?.isOpen &&\n      !target.closest('ion-menu') &&\n      !target.closest('ion-menu-button')\n    ) {\n      this.menu.close();\n    }\n  }\n\n  constructor(\n    private languageService: LanguageService,\n    public authSvc: BaseAuthenticationService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    public userSvc: UsersService,\n    public leagueSvc: LeagueService,\n    public teamSvc: TeamService,\n    public playerSvc: PlayerService\n  ) {\n    this.currentLang = this.languageService.getStoredLanguage();\n  }\n  ngOnInit() {\n    this.router.events.subscribe(() => {\n      this.showMenu = this.router.url !== '/splash';\n    });\n  \n    //Logica al iniciar sesion para que la barra note al usuario autenticado y coja el rol de este\n    this.authSvc.loginSuccessObs$.subscribe(async () => {\n      try {\n        const authUser = await this.authSvc.getCurrentUser();\n        if (authUser) {\n          const userFromDb = await lastValueFrom(this.userSvc.getByUserId(authUser.id));\n          this._user.next(userFromDb);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  \n    // También se mantiene la lógica inicial para cuando ya está logueado\n    this.authSvc.getCurrentUser().then(async (authUser) => {\n      if (authUser) {\n        const userFromDb = await lastValueFrom(this.userSvc.getByUserId(authUser.id));\n        this._user.next(userFromDb);\n      }\n    });\n  \n    this.userWithAuth$ = combineLatest([\n      this.authSvc.authenticated$,\n      this.user$\n    ]).pipe(\n      filter(([isAuthenticated, user]) => isAuthenticated && !!user),\n      map(([isAuthenticated, user]) => ({ isAuthenticated, user }))\n    );\n    // Suscribirse para cargar nombres favoritos\n    this.userWithAuth$.subscribe(({ user }) => {\n      this.loadFavoriteNames(user);\n    });\n  }\n\n  favoriteNames = {\n    league: '',\n    leagueImg: '',\n    team: '',\n    teamImg: '',\n    player: '',\n    playerImg: ''\n  };\n  \n  loadFavoriteNames(user: Users) {\n    if (user.leagueFav) {\n      this.leagueSvc.getById(user.leagueFav).subscribe(league => {\n        this.favoriteNames.league = league?.name || '';\n        this.favoriteNames.leagueImg = league?.picture?.url || ''; // o el campo real de imagen\n      });\n    }\n  \n    if (user.teamFav) {\n      this.teamSvc.getById(user.teamFav).subscribe(team => {\n        this.favoriteNames.team = team?.name || '';\n        this.favoriteNames.teamImg = team?.picture?.url || '';\n      });\n    }\n  \n    if (user.playerFav) {\n      this.playerSvc.getById(user.playerFav).subscribe(player => {\n        this.favoriteNames.player = `${player?.name} ${player?.firstSurname}` || '';\n        this.favoriteNames.playerImg = player?.picture?.url || '';\n      });\n    }\n  }\n\n  /*isDarkTheme = false;\n\n  toggleTheme() {\n    this.isDarkTheme = !this.isDarkTheme;\n    const body = document.body;\n    if (this.isDarkTheme) {\n      body.classList.add('dark-theme');\n    } else {\n      body.classList.remove('dark-theme');\n    }\n  }*/\n\n  changeLanguage(lang: string) {\n    this.languageService.changeLanguage(lang);\n    this.currentLang = lang;\n    this.languageService.storeLanguage(lang);\n  }\n\n  logout() {\n    this.authSvc.signOut().subscribe(()=>{\n      this.router.navigate(['/login']);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n\n        \n          \n            \n              \n              \n            \n            {{ (authSvc.user$ | async)?.email }}\n          \n        \n\n        \n          \n            \n              \n              {{ favoriteNames.league }}\n            \n          \n\n          \n            \n              \n              {{ favoriteNames.team }}\n            \n          \n\n          \n            \n              \n              {{ favoriteNames.player }}\n            \n          \n        \n\n        \n          \n            \n            {{ 'MENU.HOME' | translate }}\n          \n\n          \n            \n            {{ 'MENU.LEAGUES' | translate }}\n          \n\n          \n            \n            {{ 'MENU.MATCHES' | translate }}\n          \n\n          \n            \n            {{ 'MENU.USERS' | translate }}\n          \n\n          \n            \n            {{ 'MENU.ABOUT' | translate }}\n          \n\n          \n            \n          \n        \n\n        \n          \n            \n            {{ \"MENU.LOGOUT\" | translate }}\n          \n        \n      \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                              {{ (authSvc.user$ | async)?.email }}                                                                            {{ favoriteNames.league }}                                                                        {{ favoriteNames.team }}                                                                        {{ favoriteNames.player }}                                                                        {{ \\'MENU.HOME\\' | translate }}                                            {{ \\'MENU.LEAGUES\\' | translate }}                                            {{ \\'MENU.MATCHES\\' | translate }}                                            {{ \\'MENU.USERS\\' | translate }}                                            {{ \\'MENU.ABOUT\\' | translate }}                                                                                            {{ \"MENU.LOGOUT\" | translate }}                                  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClient, provideHttpClient } from '@angular/common/http';\nimport { LeaguesRepositoryFactory, TeamsRepositoryFactory, PlayersRepositoryFactory, AuthMappingFactory, AuthenticationServiceFactory, UserRepositoryFactory, MediaServiceFactory, PlayersMappingFactory, TeamsMappingFactory, LeaguesMappingFactory, UserMappingFactory, MatchMappingFactory, MatchRepositoryFactory, LeagueCollectionSubscriptionFactory, TeamCollectionSubscriptionFactory, PlayerCollectionSubscriptionFactory, MatchCollectionSubscriptionFactory, UsersCollectionSubscriptionFactory, MatchStatsMappingFactory, MatchStatsRepositoryFactory, MatchStatsCollectionSubscriptionFactory } from './core/repositories/repository.factory';\nimport { LEAGUE_API_URL_TOKEN, LEAGUE_REPOSITORY_MAPPING_TOKEN, LEAGUE_REPOSITORY_TOKEN, LEAGUE_RESOURCE_NAME_TOKEN, \n  TEAM_API_URL_TOKEN, TEAM_REPOSITORY_MAPPING_TOKEN, TEAM_REPOSITORY_TOKEN, TEAM_RESOURCE_NAME_TOKEN, \n  PLAYER_API_URL_TOKEN, PLAYER_REPOSITORY_MAPPING_TOKEN, PLAYER_REPOSITORY_TOKEN,PLAYER_RESOURCE_NAME_TOKEN,\n  AUTH_ME_API_URL_TOKEN, \n  AUTH_SIGN_IN_API_URL_TOKEN,\n  AUTH_SIGN_UP_API_URL_TOKEN,\n  UPLOAD_API_URL_TOKEN,USER_REPOSITORY_TOKEN,\n  BACKEND_TOKEN,\n  USER_REPOSITORY_MAPPING_TOKEN,\n  USER_API_URL_TOKEN,\n  USER_RESOURCE_NAME_TOKEN, FIREBASE_CONFIG_TOKEN,\n  MATCH_RESOURCE_NAME_TOKEN,\n  MATCH_API_URL_TOKEN,\n  MATCH_STATS_RESOURCE_NAME_TOKEN,\n  MATCH_STATS_API_URL_TOKEN} from './core/repositories/repository.tokens';\nimport { LeagueService } from './core/services/impl/league.service';\nimport { PlayerService } from './core/services/impl/player.service';\nimport { TeamService } from './core/services/impl/team.service';\nimport { LeagueMappingStrapi } from './core/repositories/impl/league-mapping-strapi.service';\nimport { TeamMappingStrapi } from './core/repositories/impl/team-mapping-strapi.service';\nimport { PlayerMappingStrapi } from './core/repositories/impl/player-mapping-strapi.service';\nimport { BaseAuthenticationService } from './core/services/impl/base-authentication.service';\nimport { UsersService } from './core/services/impl/users.service';\nimport { UsersMappingStrapi } from './core/repositories/impl/users-mapping-strapi.service';\nimport { BaseMediaService } from './core/services/impl/base-media.service';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { SharedModule } from './shared/shared.module';\nimport player from 'lottie-web';\nimport { provideLottieOptions } from 'ngx-lottie';\nimport { environment } from 'src/environments/environment';\nimport { LeagueMappingFirebase } from './core/repositories/impl/league-mapping-firebase.service';\nimport { TeamMappingFirebase } from './core/repositories/impl/team-mapping-firebase.service';\nimport { PlayerMappingFirebase } from './core/repositories/impl/player-mapping-firebase.service';\nimport { MatchService } from './core/services/impl/match.service';\nimport { MatchStatsService } from './core/services/impl/matchStats.service';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule,\n    SharedModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),],\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },provideLottieOptions({\n      player: () => player,\n    }),\n    provideHttpClient(),\n\n    {provide: USER_REPOSITORY_TOKEN, useClass: UsersService},\n    {provide: BACKEND_TOKEN, useValue: 'firebase'},\n    {provide: USER_RESOURCE_NAME_TOKEN, useValue: 'usuarios'},\n    {provide: LEAGUE_RESOURCE_NAME_TOKEN, useValue: 'leagues'},\n    {provide: TEAM_RESOURCE_NAME_TOKEN, useValue: 'teams'},\n    {provide: PLAYER_RESOURCE_NAME_TOKEN, useValue: 'players'},\n    {provide: MATCH_RESOURCE_NAME_TOKEN, useValue: 'matches'},\n    {provide: MATCH_STATS_RESOURCE_NAME_TOKEN, useValue: 'matchStatistics'},\n    {provide: LEAGUE_API_URL_TOKEN, useValue: `${environment.apiUrl}/api`},\n    {provide: TEAM_API_URL_TOKEN, useValue: `${environment.apiUrl}/api`},\n    {provide: PLAYER_API_URL_TOKEN, useValue: `${environment.apiUrl}/api`},\n    {provide: MATCH_API_URL_TOKEN, useValue: `${environment.apiUrl}/api`},\n    {provide: MATCH_STATS_API_URL_TOKEN, useValue: `${environment.apiUrl}/api`},\n    {provide: USER_API_URL_TOKEN, useValue: `${environment.apiUrl}/api`},\n    { provide: AUTH_SIGN_IN_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/auth/local` },\n    { provide: AUTH_SIGN_UP_API_URL_TOKEN, useValue:  `${environment.apiUrl}/api/auth/local/register` },\n    { provide: AUTH_ME_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/users/me` },\n    { provide: UPLOAD_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/upload` },\n    { provide: FIREBASE_CONFIG_TOKEN, useValue:\n      {\n        apiKey: \"AIzaSyAypMZSz9Vgg0DUsGw1jLbzgUS3uNs86tg\",\n        authDomain: \"footballcomps-f5afd.firebaseapp.com\",\n        projectId: \"footballcomps-f5afd\",\n        storageBucket: \"footballcomps-f5afd.firebasestorage.app\",\n        messagingSenderId: \"1036668813891\",\n        appId: \"1:1036668813891:web:1af654984665fdaae78af6\",\n        measurementId: \"G-FR5S50J8LC\"\n      }\n    },\n\n    UserMappingFactory,\n    LeaguesMappingFactory,\n    TeamsMappingFactory,\n    PlayersMappingFactory,\n    MatchMappingFactory,\n    MatchStatsMappingFactory,\n    LeaguesRepositoryFactory,\n    TeamsRepositoryFactory,\n    PlayersRepositoryFactory,\n    MatchRepositoryFactory,\n    MatchStatsRepositoryFactory,\n    UserRepositoryFactory,\n    AuthMappingFactory,\n    \n    {\n      provide: 'LeagueService',\n      useClass:LeagueService\n    },{\n      provide: 'TeamService',\n      useClass:TeamService\n    },{\n      provide: 'PlayerService',\n      useClass:PlayerService\n    },\n    {\n      provide: 'UsersService',\n      useClass: UsersService\n    },\n    {\n      provide: 'MatchService',\n      useClass: MatchService\n    },\n    {\n      provide: 'MatchStatsService',\n      useClass: MatchStatsService\n    },\n\n    AuthenticationServiceFactory,\n    MediaServiceFactory,\n    LeagueCollectionSubscriptionFactory,\n    TeamCollectionSubscriptionFactory,\n    PlayerCollectionSubscriptionFactory,\n    MatchCollectionSubscriptionFactory,\n    MatchStatsCollectionSubscriptionFactory,\n    UsersCollectionSubscriptionFactory,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { authGuard } from './core/guards/auth.guard';\nimport { AdminGuard } from './core/guards/admin.guard';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'splash',\n    pathMatch: 'full'\n  },\n  {\n    path: 'leagues',\n    loadChildren: () => \"import('./pages/leagues/leagues.module').then( m => m.LeaguesPageModule)\"\n  },\n  {\n    path: 'teams/:id',\n    loadChildren: () => \"import('./pages/teams/teams.module').then( m => m.TeamsPageModule)\"\n  },\n  {\n    path: 'teams',\n    loadChildren: () => \"import('./pages/teams/teams.module').then( m => m.TeamsPageModule)\"\n  },\n  {\n    path: 'players/:id',\n    loadChildren: () => \"import('./pages/players/players.module').then( m => m.PlayersPageModule)\"\n  },\n  {\n    path: 'players',\n    loadChildren: () => \"import('./pages/players/players.module').then( m => m.PlayersPageModule)\"\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./pages/login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'register',\n    loadChildren: () => \"import('./pages/register/register.module').then( m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'splash',\n    loadChildren: () => \"import('./pages/splash/splash.module').then( m => m.SplashPageModule)\"\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\"\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./pages/profile/profile.module').then( m => m.ProfilePageModule)\"\n  },\n  {\n    path: 'matches',\n    loadChildren: () => \"import('./pages/matches/matches.module').then( m => m.MatchesPageModule)\"\n  },\n  {\n    path: 'users',\n    loadChildren: () => \"import('./pages/users/users.module').then( m => m.UsersPageModule)\",\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'lineups/:id',\n    loadChildren: () => \"import('./pages/lineups/lineups.module').then( m => m.LineupsPageModule)\"\n  },\n  {\n    path: 'statistics/:id',\n    loadChildren: () => \"import('./pages/statistics/statistics.module').then( m => m.StatisticsPageModule)\"\n  }\n\n\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseAuthenticationService.html":{"url":"injectables/BaseAuthenticationService.html","title":"injectable - BaseAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Private\n                                loginSuccess$\n                            \n                            \n                                loginSuccessObs$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitLoginSuccess\n                            \n                            \n                                    Abstract\n                                getCurrentUser\n                            \n                            \n                                    Abstract\n                                me\n                            \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signOut\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authMapping: IAuthMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitLoginSuccess\n                        \n                    \n                \n            \n            \n                \nemitLoginSuccess()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(registerPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginSuccessObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loginSuccess$.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IAuthentication } from \"../interfaces/authentication.interface\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { User } from \"../../models/auth.model\";\n\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport abstract class BaseAuthenticationService implements IAuthentication{\n    protected _authenticated:BehaviorSubject = new BehaviorSubject(false);\n    public authenticated$:Observable = this._authenticated.asObservable();\n\n    protected _user:BehaviorSubject = new BehaviorSubject(undefined);\n    public user$:Observable = this._user.asObservable();\n    protected _ready:BehaviorSubject = new BehaviorSubject(false);\n    public ready$:Observable = this._ready.asObservable();\n    private loginSuccess$ = new BehaviorSubject(false);\n    loginSuccessObs$ = this.loginSuccess$.asObservable();\n\n    emitLoginSuccess() {\n    this.loginSuccess$.next(true);\n    }\n    constructor(\n        protected authMapping:IAuthMapping\n    ){\n\n    }\n    abstract getCurrentUser(): Promise;\n    abstract signIn(authPayload: any): Observable;\n    abstract signUp(registerPayload: any): Observable;\n    abstract signOut(): Observable;\n    abstract me():Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseMediaService.html":{"url":"injectables/BaseMediaService.html","title":"injectable - BaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-media.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export abstract class BaseMediaService {  \n    public abstract upload(blob:Blob):Observable;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepositoryFirebaseService.html":{"url":"injectables/BaseRepositoryFirebaseService.html","title":"injectable - BaseRepositoryFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepositoryFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                collectionRef\n                            \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                    Async\n                                getLastDocumentOfPreviousPage\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, collectionName: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collectionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getLastDocumentOfPreviousPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLastDocumentOfPreviousPage(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        collectionRef\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport {\n  getFirestore,\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  query,\n  limit,\n  startAt,\n  startAfter,\n  QueryConstraint,\n  orderBy,\n  or,\n  where\n} from 'firebase/firestore';\nimport { from, map, Observable, mergeMap } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { FIREBASE_CONFIG_TOKEN, FIREBASE_COLLECTION_TOKEN, REPOSITORY_MAPPING_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRepositoryFirebaseService implements IBaseRepository {\n  private db;\n  private collectionRef;\n\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(FIREBASE_COLLECTION_TOKEN) protected collectionName: string,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n    this.collectionRef = collection(this.db, this.collectionName);\n  }\n\n  private async getLastDocumentOfPreviousPage(page: number, pageSize: number) {\n    if (page > {\n    return from(this.getLastDocumentOfPreviousPage(page, pageSize)).pipe(\n      map(lastDoc => {\n        const constraints: QueryConstraint[] = [limit(pageSize)];\n\n        // Incluir la paginación\n        if (lastDoc) {\n          constraints.push(startAfter(lastDoc));\n        }\n\n        // Procesar filtros\n        Object.entries(filters).forEach(([field, value]) => {\n          let filterValue: any = value;\n\n          // Convertir a DocumentReference si el campo es 'setId' y el valor es una cadena válida\n          if (field === 'league' && typeof value === 'string') {\n            filterValue = doc(this.db, 'leagues', value); // Convertir la cadena a DocumentReference\n          }else if(field === 'team' && typeof value === 'string'){\n            filterValue = doc(this.db, 'teams', value); // Convertir la cadena a DocumentReference\n          }else if(field === 'player' && typeof value === 'string'){\n            filterValue = doc(this.db, 'players', value); // Convertir la cadena a DocumentReference\n          }else if(field === 'match' && typeof value === 'string'){\n            filterValue = doc(this.db, 'matches', value); // Convertir la cadena a DocumentReference\n          }else if(field === 'user' && typeof value === 'string'){\n            filterValue = doc(this.db, 'users', value);\n          }\n\n          // Añadir la cláusula where\n          console.log(`Filter applied: field=${field}, value=${filterValue}`);\n          constraints.push(where(field, '==', filterValue));\n        });\n\n        // Crear y retornar la query\n        const q = query(this.collectionRef, ...constraints);\n        console.log('Query:', q);\n        return q;\n      }),\n      mergeMap(q => getDocs(q)),\n      map(snapshot => {\n        console.log('Snapshot size:', snapshot.size);\n        const items = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        return this.mapping.getPaginated(page, pageSize, snapshot.size, items as T[]);\n      })\n    );\n  }\n\n  getById(id: string): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => {\n        if (doc.exists()) {\n          return this.mapping.getOne({ id: doc.id, ...doc.data() } as T);\n        }\n        return null;\n      })\n    );\n  }\n\n  add(entity: T): Observable {\n    return from(addDoc(this.collectionRef, this.mapping.setAdd(entity))).pipe(\n      map(docRef => this.mapping.getAdded({ ...entity, id: docRef.id } as T))\n    );\n  }\n\n  update(id: string, entity: T): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    return from(updateDoc(docRef, this.mapping.setUpdate(entity))).pipe(\n      map(() => this.mapping.getUpdated({ ...entity, id } as T))\n    );\n  }\n  \n  delete(id: string): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => ({ id: doc.id, ...doc.data() } as T)),\n      map(entity => {\n        deleteDoc(docRef);\n        return this.mapping.getDeleted(entity);\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepositoryHttpService.html":{"url":"injectables/BaseRepositoryHttpService.html","title":"injectable - BaseRepositoryHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepositoryHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-http.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRepositoryHttpService implements IBaseRepository {\n\n  constructor(\n    protected http: HttpClient,\n    @Inject(AUTH_TOKEN) protected auth: IAuthentication,\n    @Inject(API_URL_TOKEN) protected apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) protected resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping:IBaseMapping\n  ) {\n    this.apiUrl = apiUrl;\n  }\n\n\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable> {\n    return this.http.get(`${this.apiUrl}/${this.resource}`).pipe(map(res=>this.mapping.getPaginated(page, pageSize, 0, res)));\n  }\n\n  getById(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getOne(res)));\n  }\n\n  add(entity: T): Observable {\n    return this.http.post(`${this.apiUrl}/${this.resource}`, entity).pipe(map(res=>this.mapping.getAdded(res)));\n  }\n\n  update(id: string, entity: T): Observable {\n    return this.http.put(`${this.apiUrl}/${this.resource}/${id}`, entity).pipe(map(res=>this.mapping.getUpdated(res)));\n  }\n\n  delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRespositoryLocalStorageService.html":{"url":"injectables/BaseRespositoryLocalStorageService.html","title":"injectable - BaseRespositoryLocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRespositoryLocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                newID\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newID\n                        \n                    \n                \n            \n            \n                \n                        \n                    newID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { Model } from '../../models/base.model';\nimport { REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRespositoryLocalStorageService implements IBaseRepository {\n\n  _items:T[] = [];\n  private newID():string{\n    const validChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let code = \"\";\n    for (let i = 0; i \n  \n  ) {\n    let mockupList:any[] = [];\n    for(let i = 0; i> {\n    return of(\n      this.mapping.getPaginated(page, pageSize, Math.ceil(this._items.length / pageSize),\n        this._items.slice(\n          page*pageSize, \n          Math.min(\n            (page+1)*pageSize, \n            this._items.length\n          )\n        )\n      )\n    );\n  }\n\n  getById(id: string): Observable {\n    return of(this.mapping.getOne(this._items.find(item=>item.id == id) ?? null));\n  }\n\n  add(entity: T): Observable {\n    entity.id = this.newID();\n    entity.createdAt = (new Date()).toISOString();\n    this._items.push(entity);\n    localStorage.setItem(this.resource, JSON.stringify(this._items));\n    return of(this.mapping.getAdded(entity));\n  }\n\n  update(id: string, entity: T): Observable {\n    let index = this._items.findIndex(item=>item.id == id);\n    if(index>=0){\n      this._items[index]=entity;\n      localStorage.setItem(this.resource, JSON.stringify(this._items));\n      return of(this.mapping.getUpdated(this._items[index]));\n    }\n    throw new Error(\"id not found\"); \n  }\n\n  delete(id: string): Observable {\n    let index = this._items.findIndex(item=>item.id == id);\n    if(index>=0){\n      let entity = this._items.splice(index, 1);\n      localStorage.setItem(this.resource, JSON.stringify(this._items));\n      return of(this.mapping.getDeleted(entity));\n    }\n    throw new Error(\"id not found\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IBaseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/base-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IBaseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    -1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    25\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IBaseService } from '../interfaces/base-service.interface';\nimport { IBaseRepository, SearchParams } from '../../repositories/intefaces/base-repository.interface';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService implements IBaseService {\n  constructor(\n    @Inject(REPOSITORY_TOKEN) protected repository: IBaseRepository\n  ) {}\n\n  getAll(): Observable;\n  getAll(page:number, pageSize:number):Observable>;\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getAll(page:number=-1, pageSize:number=25, filters:SearchParams={}): Observable> {    \n      return this.repository.getAll(page, pageSize, filters);\n  }\n\n  getById(id: string): Observable {\n    return this.repository.getById(id);\n  }\n\n  add(entity: T): Observable {\n    return this.repository.add(entity);\n  }\n\n  update(id: string, entity: T): Observable {\n    return this.repository.update(id, entity);\n  }\n\n  delete(id: string): Observable {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectionChange.html":{"url":"interfaces/CollectionChange.html","title":"interface - CollectionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CollectionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/collection-subscription.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"added\" | \"modified\" | \"removed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"added\" | \"modified\" | \"removed\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Model } from \"../../models/base.model\";\nexport interface CollectionChange {\n  type: 'added' | 'modified' | 'removed';\n  data?: T;\n  id: string;\n}\nexport interface ICollectionSubscription {\n  subscribe(collectionName: string): Observable>;\n  unsubscribe(collectionName: string): void;\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         LeagueAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LeagueAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { League } from \"../../models/leagues.model\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\nexport interface MediaRaw{\n  data: StrapiMedia\n}\n\nexport interface LeagueRaw{\n  data: Data\n  meta: Meta\n}\n\nexport interface Data{\n  id: number\n  attributes: LeagueAttributes\n}\n\nexport interface LeagueData{\n  data: LeagueAttributes\n}\n\nexport interface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: League):LeagueData {\n      return {\n          data:{\n              name:data.name\n          }\n      };\n  }\n  setUpdate(data: League):LeagueData {\n      let toReturn:LeagueData = {\n          data:{\n              name:\"\",\n          }\n      };  \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': toReturn.data['name']=data[key];\n              break;\n              default:\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | LeagueRaw): League {\n      const isLeagueRaw = (data: Data | LeagueRaw): data is LeagueRaw => 'meta' in data;\n      \n      const attributes = isLeagueRaw(data) ? data.data.attributes : data.attributes;\n      const id = isLeagueRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name\n      };\n  }\n  getAdded(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data-1.html":{"url":"interfaces/Data-1.html","title":"interface - Data-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         PlayerAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlayerAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data-2.html":{"url":"interfaces/Data-2.html","title":"interface - Data-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=league,teams,team,players`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data-3.html":{"url":"interfaces/Data-3.html","title":"interface - Data-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         TeamAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TeamAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data-4.html":{"url":"interfaces/Data-4.html","title":"interface - Data-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         PersonAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragDropDirective.html":{"url":"directives/DragDropDirective.html","title":"directive - DragDropDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DragDropDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/drag-and-drop/drag-drop.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDragDrop]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onDragEnd\n                            \n                            \n                                    \n                                onDragLeave\n                            \n                            \n                                    \n                                onDragOver\n                            \n                            \n                                    \n                                onDragStart\n                            \n                            \n                                    \n                                onDrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragData\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dropped\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragend\n                            \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                dragstart\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:8\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dropped\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:9\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            dragend\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:22\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragleave\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:33\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragover\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:27\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragstart\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:16\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:38\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDragEnd\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDragEnd(event: DragEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('dragend', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDragLeave\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDragLeave(event: DragEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('dragleave', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDragOver\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDragOver(event: DragEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('dragover', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDragStart\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDragStart(event: DragEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('dragstart', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDrop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDrop(event: DragEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('drop', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-and-drop/drag-drop.directive.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input, Output, EventEmitter, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appDragDrop]'\n})\nexport class DragDropDirective {\n  @Input() dragData: any;\n  @Input() index!: number; // Índice del elemento en la lista\n  @Output() dropped = new EventEmitter();\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    this.renderer.setAttribute(this.el.nativeElement, 'draggable', 'true');\n  }\n\n  @HostListener('dragstart', ['$event'])\n  onDragStart(event: DragEvent) {\n    event.dataTransfer?.setData('text', JSON.stringify({ dragData: this.dragData, fromIndex: this.index }));\n    this.el.nativeElement.style.opacity = '0.5';\n  }\n\n  @HostListener('dragend', ['$event'])\n  onDragEnd(event: DragEvent) {\n    this.el.nativeElement.style.opacity = '1';\n  }\n\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: DragEvent) {\n    event.preventDefault();\n    this.el.nativeElement.style.border = '2px dashed #4CAF50'; // Resalta el área donde se puede soltar\n  }\n\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: DragEvent) {\n    this.el.nativeElement.style.border = 'none';\n  }\n\n  @HostListener('drop', ['$event'])\n  onDrop(event: DragEvent) {\n    event.preventDefault();\n    this.el.nativeElement.style.border = 'none';\n\n    const data = event.dataTransfer?.getData('text');\n    if (data) {\n      const { fromIndex } = JSON.parse(data);\n      const toIndex = this.index;\n\n      if (fromIndex !== toIndex) {\n        this.dropped.emit({ fromIndex, toIndex });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FilterByTeamDirective.html":{"url":"directives/FilterByTeamDirective.html","title":"directive - FilterByTeamDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  FilterByTeamDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/filterByTeams/filter-by-teams.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFilterByTeam]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                players\n                            \n                            \n                                selectedTeam\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/filterByTeams/filter-by-teams.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        players\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/filterByTeams/filter-by-teams.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTeam\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/filterByTeams/filter-by-teams.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/filterByTeams/filter-by-teams.directive.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { Player } from 'src/app/core/models/players.model';\n\n@Directive({\n  selector: '[appFilterByTeam]'\n})\nexport class FilterByTeamDirective implements OnChanges {\n  @Input() selectedTeam: any = null; // Equipo seleccionado\n  @Input() players: any[] = []; // Lista de jugadores\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnChanges(): void {\n    if (!this.players || this.players.length === 0) return;\n\n    const selectedTeamId = this.selectedTeam ? this.selectedTeam.id : null;\n\n    this.players.forEach((player) => {\n      const element = this.el.nativeElement.querySelector(`[data-id=\"${player.id}\"]`);\n\n      if (element) {\n        if (!selectedTeamId || player.team.id === selectedTeamId) {\n          this.renderer.setStyle(element, 'display', 'block');\n        } else {\n          this.renderer.setStyle(element, 'display', 'none');\n        }\n      }\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthMappingService.html":{"url":"injectables/FirebaseAuthMappingService.html","title":"injectable - FirebaseAuthMappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthMappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-auth-mapping.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signInPayload\n                            \n                            \n                                signUp\n                            \n                            \n                                signUpPayload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: FirebaseUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            FirebaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: FirebaseUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            FirebaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: FirebaseUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            FirebaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-auth-mapping.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\nimport { UserCredential, User as FirebaseUser } from 'firebase/auth';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthMappingService implements IAuthMapping {\n  signInPayload(payload: SignInPayload): { email: string, password: string } {\n    return {\n      email: payload.email,\n      password: payload.password\n    };\n  }\n  signUpPayload(payload: SignUpPayload): { email: string, password: string } {\n    return {\n      email: payload.email,\n      password: payload.password\n      // No necesitamos username ya que Firebase no lo maneja por defecto\n    };\n  }\n  signIn(response: FirebaseUser): User {\n    return {\n      id: response.uid,\n      username: response.displayName || response.email || '',\n      email: response.email || ''\n    };\n  }\n  signUp(response: FirebaseUser): User {\n    return {\n      id: response.uid,\n      username: response.displayName || response.email || '',\n      email: response.email || ''\n    };\n  }\n  me(response: FirebaseUser): User {\n    return {\n      id: response.uid,\n      username: response.displayName || response.email || '',\n      email: response.email || ''\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthenticationService.html":{"url":"injectables/FirebaseAuthenticationService.html","title":"injectable - FirebaseAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAuthenticationService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _token\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Private\n                                loginSuccess$\n                            \n                            \n                                loginSuccessObs$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                getToken\n                            \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                            \n                                emitLoginSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, authMapping: IAuthMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:42\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-authentication.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:72\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:46\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:64\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitLoginSuccess\n                        \n                    \n                \n            \n            \n                \nemitLoginSuccess()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginSuccessObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loginSuccess$.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:16\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { filter, map, Observable, of, tap, firstValueFrom, from } from 'rxjs';\nimport { BaseAuthenticationService } from './base-authentication.service';\nimport { AUTH_MAPPING_TOKEN, FIREBASE_CONFIG_TOKEN } from '../../repositories/repository.tokens';\nimport { IAuthMapping } from '../interfaces/auth-mapping.interface';\nimport { User } from '../../models/auth.model';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getAuth, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword,\n  signOut as firebaseSignOut,\n  onAuthStateChanged\n} from 'firebase/auth';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthenticationService extends BaseAuthenticationService {\n  private auth;\n  private _token: string | null = null;\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(AUTH_MAPPING_TOKEN) authMapping: IAuthMapping\n  ) {\n    super(authMapping);\n    const app = initializeApp(firebaseConfig);\n    this.auth = getAuth(app);\n    \n    onAuthStateChanged(this.auth, async (user) => {\n      if (user) {\n        this._token = await user.getIdToken();\n        this._authenticated.next(true);\n        this._user.next(this.authMapping.me(user));\n      } else {\n        this._token = null;\n        this._authenticated.next(false);\n        this._user.next(undefined);\n      }\n      this._ready.next(true);\n    });\n  }\n  async getCurrentUser(): Promise {\n    await firstValueFrom(this._ready.pipe(filter(ready => ready === true)));\n    return firstValueFrom(this._user);\n  }\n  signIn(authPayload: any): Observable {\n    const { email, password } = this.authMapping.signInPayload(authPayload);\n    \n    return from(signInWithEmailAndPassword(this.auth, email, password)).pipe(\n      map(userCredential => {\n        return this.authMapping.signIn(userCredential.user);\n      })\n    );\n  }\n  signUp(signUpPayload: any): Observable {\n    const { email, password } = this.authMapping.signUpPayload(signUpPayload);\n    \n    return from(createUserWithEmailAndPassword(this.auth, email, password)).pipe(\n      map(userCredential => {\n        return this.authMapping.signUp(userCredential.user);\n      })\n    );\n  }\n  signOut(): Observable {\n    return from(firebaseSignOut(this.auth)).pipe(\n      tap(() => {\n        this._authenticated.next(false);\n        this._user.next(undefined);\n      })\n    );\n  }\n  me(): Observable {\n    return of(this.auth.currentUser).pipe(\n      map(user => {\n        if (!user) {\n          throw new Error('No authenticated user');\n        }\n        return user;\n      })\n    );\n  }\n  getToken(): string | null {\n    return this._token;\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseCollectionSubscriptionService.html":{"url":"injectables/FirebaseCollectionSubscriptionService.html","title":"injectable - FirebaseCollectionSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseCollectionSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-collection-subscription.interface.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                    Private\n                                unsubscribeFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.interface.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-collection-subscription.interface.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-collection-subscription.interface.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-collection-subscription.interface.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.interface.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.interface.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribeFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-collection-subscription.interface.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getFirestore, \n  collection, \n  onSnapshot,\n  QuerySnapshot,\n  DocumentData\n} from 'firebase/firestore';\nimport { Observable, Subject } from 'rxjs';\nimport { ICollectionSubscription } from '../interfaces/collection-subscription.interface';\nimport { FIREBASE_CONFIG_TOKEN, REPOSITORY_MAPPING_TOKEN } from '../../repositories/repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../../repositories/intefaces/base-mapping.interface';\nimport { CollectionChange } from '../interfaces/collection-subscription.interface';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseCollectionSubscriptionService implements ICollectionSubscription {\n  private db;\n  private subscriptions: Map>> = new Map();\n  private unsubscribeFunctions: Map void> = new Map();\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n  }\n  subscribe(collectionName: string): Observable> {\n    if (this.subscriptions.has(collectionName)) {\n      return this.subscriptions.get(collectionName)!.asObservable();\n    }\n    const subject = new Subject>();\n    this.subscriptions.set(collectionName, subject);\n    const unsubscribe = onSnapshot(\n      collection(this.db, collectionName),\n      (snapshot: QuerySnapshot) => {\n        snapshot.docChanges().forEach(change => {\n          const changeData: CollectionChange = {\n            type: change.type as 'added' | 'modified' | 'removed',\n            id: change.doc.id\n          };\n          \n          if (change.type !== 'removed') {\n            changeData.data = this.mapping.getOne({\n              id: change.doc.id,\n              ...change.doc.data()\n            } as T);\n          }\n          \n          subject.next(changeData);\n        });\n      },\n      error => {\n        console.error(`Error en suscripción a ${collectionName}:`, error);\n        subject.error(error);\n      }\n    );\n    this.unsubscribeFunctions.set(collectionName, unsubscribe);\n    return subject.asObservable();\n  }\n  unsubscribe(collectionName: string): void {\n    const unsubscribe = this.unsubscribeFunctions.get(collectionName);\n    if (unsubscribe) {\n      unsubscribe();\n      this.unsubscribeFunctions.delete(collectionName);\n    }\n    const subject = this.subscriptions.get(collectionName);\n    if (subject) {\n      subject.complete();\n      this.subscriptions.delete(collectionName);\n    }\n  }\n  ngOnDestroy() {\n    // Limpiar todas las suscripciones al destruir el servicio\n    this.unsubscribeFunctions.forEach(unsubscribe => unsubscribe());\n    this.subscriptions.forEach(subject => subject.complete());\n    this.unsubscribeFunctions.clear();\n    this.subscriptions.clear();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseLeague.html":{"url":"interfaces/FirebaseLeague.html","title":"interface - FirebaseLeague","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseLeague\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase-league.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebaseLeague{\n  name: string;\n  picture?: string;\n  userId?: DocumentReference;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseMatch.html":{"url":"interfaces/FirebaseMatch.html","title":"interface - FirebaseMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase-matches.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            day\n                                        \n                                \n                                \n                                        \n                                            hour\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            localTeamId\n                                        \n                                \n                                \n                                        \n                                            place\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visitorTeamId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hour:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localTeamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localTeamId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        place:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visitorTeamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visitorTeamId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference, Timestamp } from \"firebase/firestore\";\n\nexport interface FirebaseMatch{\n    day: Date,\n    hour: Date,\n    result: string, \n    place: string,\n    status: string,\n    localTeamId?: DocumentReference,\n    visitorTeamId?: DocumentReference,\n    userId?: DocumentReference;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseMatchStatistics.html":{"url":"interfaces/FirebaseMatchStatistics.html","title":"interface - FirebaseMatchStatistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseMatchStatistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase-matchStatistics.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            matchId\n                                        \n                                \n                                \n                                        \n                                            stats\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stats:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebaseMatchStatistics {\n  matchId?: DocumentReference;\n  userId?: DocumentReference;\n  stats: {\n    name: string;\n    localValue: number | string;\n    visitorValue: number | string;\n  }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseMediaService.html":{"url":"injectables/FirebaseMediaService.html","title":"injectable - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseMediaService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, auth: IAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-media.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseMediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseMediaService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-media.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { \n  getStorage, \n  ref, \n  uploadBytes,\n  getDownloadURL,\n  StorageReference \n} from \"firebase/storage\";\nimport { from, map, Observable, switchMap } from \"rxjs\";\nimport { AUTH_TOKEN, FIREBASE_CONFIG_TOKEN } from \"../../repositories/repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\nimport { IAuthentication } from \"../interfaces/authentication.interface\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseMediaService extends BaseMediaService {\n  private storage;\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(AUTH_TOKEN) private auth: IAuthentication\n  ) {\n    super();\n    const app = initializeApp(firebaseConfig);\n    this.storage = getStorage(app);\n  }\n  public upload(blob: Blob): Observable {\n    return from(this.auth.getCurrentUser()).pipe(\n      switchMap(user => {\n        if (!user) throw new Error('Usuario no autenticado');\n        \n        const fileName = `${Date.now()}_${Math.random().toString(36).substring(2)}`;\n        const storageRef: StorageReference = ref(this.storage, `uploads/${fileName}`);\n        const metadata = {\n          contentType: blob.type,\n          customMetadata: {\n            'uploaded-by': user.id || 'anonymous'\n          }\n        };\n        return from(uploadBytes(storageRef, blob, metadata)).pipe(\n          switchMap(snapshot => getDownloadURL(snapshot.ref)),\n          map(url => [url])\n        );\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebasePlayer.html":{"url":"interfaces/FirebasePlayer.html","title":"interface - FirebasePlayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebasePlayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase-player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthdate\n                                        \n                                \n                                \n                                        \n                                            dorsal\n                                        \n                                \n                                \n                                        \n                                            firstSurname\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nationality\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            secondSurname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            team\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthdate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dorsal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dorsal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSurname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nationality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nationality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondSurname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebasePlayer{\n  name: string;\n  firstSurname: string;\n  secondSurname?: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team?: DocumentReference;\n  picture?: string;\n  userId?: DocumentReference;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseTeam.html":{"url":"interfaces/FirebaseTeam.html","title":"interface - FirebaseTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase-team.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            league\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nMatches\n                                        \n                                \n                                \n                                        \n                                            numberOfPlayers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            pts\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        league\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        league:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nMatches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nMatches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\"\nexport interface FirebaseTeam{\n  name: string;\n  numberOfPlayers: number;\n  pts: number,\n  nMatches: number,\n  league?: DocumentReference;\n  userId?: DocumentReference;\n  picture?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseUser.html":{"url":"interfaces/FirebaseUser.html","title":"interface - FirebaseUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase-user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leagueFav\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playerFav\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamFav\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leagueFav\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leagueFav:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playerFav\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playerFav:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamFav\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamFav:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebaseUser{\n    name:string,\n    surname:string,\n    email?:string, //TODO: Quitar interrogación más adelante\n    picture?:string,\n    role:string,\n    userId: string\n    playerFav?:DocumentReference,\n    teamFav?:DocumentReference,\n    leagueFav?:DocumentReference,\n}\n    \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Formats.html":{"url":"interfaces/Formats.html","title":"interface - Formats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Formats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            large\n                                        \n                                \n                                \n                                        \n                                            medium\n                                        \n                                \n                                \n                                        \n                                            small\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        large:         Large\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Large\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medium:         Medium\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Medium\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        small:         Small\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Small\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         Thumbnail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thumbnail\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupRaw.html":{"url":"interfaces/GroupRaw.html","title":"interface - GroupRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GroupRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    email:string,\n    password:string,\n    username:string\n}\nexport interface GroupRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload):StrapiSignUp {\n        return {\n            email:payload.email,\n            password:payload.password,\n            username:payload.name + \" \"+ payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username:response.username,\n            email:response.email\n        };\n    }\n    \n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HighLightDirective.html":{"url":"directives/HighLightDirective.html","title":"directive - HighLightDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  HighLightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/high-light-directive/high-light.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appHighlight]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultBackgroundColor\n                            \n                            \n                                    Private\n                                defaultBoxShadow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onDrop\n                            \n                            \n                                    \n                                onMouseEnter\n                            \n                            \n                                    \n                                onMouseLeave\n                            \n                            \n                                    Private\n                                setBackgroundColor\n                            \n                            \n                                    Private\n                                setBorderColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appHighlight\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appHighlight\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rgba(173, 216, 230, 0.3)'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:28\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:17\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:24\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDrop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDrop()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('drop')\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseEnter()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter')\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave')\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setBackgroundColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    setBackgroundColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setBorderColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    setBorderColor(style: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                style\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultBackgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultBoxShadow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/high-light-directive/high-light.directive.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighLightDirective {\n  @Input('appHighlight') highlightColor: string = 'rgba(173, 216, 230, 0.3)'; // Color de fondo sutil (transparente)\n  private defaultBoxShadow: string = '';\n  private defaultBackgroundColor: string = '';\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    // Guardamos el color de fondo original si existe\n    this.defaultBackgroundColor = this.el.nativeElement.style.backgroundColor || 'rgba(255, 255, 255, 0.1)';\n    this.defaultBoxShadow = this.el.nativeElement.style.boxShadow || 'none';\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    // Solo resaltar el fondo si no estamos arrastrando algo\n    if (!this.el.nativeElement.classList.contains('dragging')) {\n      this.setBackgroundColor(this.highlightColor); // Fondo sutil al pasar el mouse\n    }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    // Restaurar el color de fondo original\n    this.setBackgroundColor(this.defaultBackgroundColor);\n  }\n  @HostListener('drop') onDrop() {\n    // Al soltar, también eliminamos el borde\n    this.setBorderColor('rgba(173, 216, 230, 0.3)');\n  }\n\n  private setBackgroundColor(color: string) {\n    this.renderer.setStyle(this.el.nativeElement, 'backgroundColor', color);\n  }\n\n  private setBorderColor(style: string) {\n    this.renderer.setStyle(this.el.nativeElement, 'border', style);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                currentLang\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: 'LEAGUES.TITLE',\n    description: 'HOME.LEAGUES',\n    link: '/leagues',\n    cta: 'HOME.SEE_LEAGUES'\n  },\n  {\n    title: 'TEAMS.TITLE',\n    description: 'HOME.TEAMS',\n    link: '/teams',\n    cta: 'HOME.SEE_TEAMS'\n  },\n  {\n    title: 'PLAYERS.TITLE',\n    description: 'HOME.PLAYERS',\n    link: '/players',\n    cta: 'HOME.SEE_PLAYERS'\n  },\n  {\n    title: 'MATCHES.TITLE',\n    description: 'HOME.MATCHES',\n    link: '/matches',\n    cta: 'HOME.SEE_MATCHES'\n  }\n]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguageService } from 'src/app/core/services/language.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  currentLang:string\n  constructor(\n    private translate: TranslateService,\n    private languageService: LanguageService) {\n      this.currentLang = this.languageService.getStoredLanguage();\n    }\n\n    cards = [\n  {\n    title: 'LEAGUES.TITLE',\n    description: 'HOME.LEAGUES',\n    link: '/leagues',\n    cta: 'HOME.SEE_LEAGUES'\n  },\n  {\n    title: 'TEAMS.TITLE',\n    description: 'HOME.TEAMS',\n    link: '/teams',\n    cta: 'HOME.SEE_TEAMS'\n  },\n  {\n    title: 'PLAYERS.TITLE',\n    description: 'HOME.PLAYERS',\n    link: '/players',\n    cta: 'HOME.SEE_PLAYERS'\n  },\n  {\n    title: 'MATCHES.TITLE',\n    description: 'HOME.MATCHES',\n    link: '/matches',\n    cta: 'HOME.SEE_MATCHES'\n  }\n];\n\n\n}\n\n    \n\n    \n        \n\n   \n    \n      \n        \n      \n      \n        {{\"HOME.TITLE\" | translate}}\n      \n    \n  \n\n  \n\n    \n      \n      \n        \n          {{ card.title | translate }}\n          {{ card.description | translate }}\n          \n            {{ card.cta | translate }}\n          \n        \n      \n\n    \n\n    \n      {{\"ABOUT.TITLE\" | translate}}\n      {{\"HOME.CONTACT\" | translate}}\n      \n        {{\"HOME.SEE_CONTACT\" | translate}}\n      \n    \n\n  \n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         {{\"HOME.TITLE\" | translate}}                                                {{ card.title | translate }}          {{ card.description | translate }}                      {{ card.cta | translate }}                                      {{\"ABOUT.TITLE\" | translate}}      {{\"HOME.CONTACT\" | translate}}              {{\"HOME.SEE_CONTACT\" | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    TranslateModule.forChild()],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthMapping.html":{"url":"interfaces/IAuthMapping.html","title":"interface - IAuthMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/auth-mapping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        me\n                                    \n                                \n                                \n                                    \n                                        signIn\n                                    \n                                \n                                \n                                    \n                                        signInPayload\n                                    \n                                \n                                \n                                    \n                                        signUp\n                                    \n                                \n                                \n                                    \n                                        signUpPayload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\nimport { Users } from \"../../models/users.model\";\n\nexport interface IAuthMapping{\n    signInPayload(payload:SignInPayload):any;\n    signUpPayload(payload:SignUpPayload):any;\n    signIn(response:any):User;\n    signUp(response:any):User;\n    me(response:any):User;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthentication.html":{"url":"interfaces/IAuthentication.html","title":"interface - IAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/authentication.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurrentUser\n                                    \n                                \n                                \n                                    \n                                        me\n                                    \n                                \n                                \n                                    \n                                        signIn\n                                    \n                                \n                                \n                                    \n                                        signOut\n                                    \n                                \n                                \n                                    \n                                        signUp\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(registerPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface IAuthentication{\n    signIn(authPayload:any):Observable;\n    signUp(registerPayload:any):Observable;\n    signOut():Observable;\n    me():Observable;\n    getCurrentUser():Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseMapping.html":{"url":"interfaces/IBaseMapping.html","title":"interface - IBaseMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-mapping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAdded\n                                    \n                                \n                                \n                                    \n                                        getDeleted\n                                    \n                                \n                                \n                                    \n                                        getOne\n                                    \n                                \n                                \n                                    \n                                        getPaginated\n                                    \n                                \n                                \n                                    \n                                        getUpdated\n                                    \n                                \n                                \n                                    \n                                        setAdd\n                                    \n                                \n                                \n                                    \n                                        setUpdate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\n\nexport interface IBaseMapping {\n  getPaginated(page:number, pageSize: number, pages:number, data:any):Paginated;\n  getOne(data:any):T;\n  getAdded(data:any):T;\n  getUpdated(data:any):T;\n  getDeleted(data:any):T;\n  setAdd(data:T):any;\n  setUpdate(data:any):any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseRepository.html":{"url":"interfaces/IBaseRepository.html","title":"interface - IBaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nexport interface SearchParams {\n  [key: string]: string; // O el tipo que necesites para los valores\n}\nexport interface IBaseRepository {\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable; // Retorna el ID generado\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseService.html":{"url":"interfaces/IBaseService.html","title":"interface - IBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/base-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Paginated } from '../../models/paginated.model';\nimport { SearchParams } from '../../repositories/intefaces/base-repository.interface';\n\nexport interface IBaseService {\n  getAll():Observable;\n  getAll(page:number, pageSize:number): Observable>;\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionSubscription.html":{"url":"interfaces/ICollectionSubscription.html","title":"interface - ICollectionSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/collection-subscription.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/collection-subscription.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/collection-subscription.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Model } from \"../../models/base.model\";\nexport interface CollectionChange {\n  type: 'added' | 'modified' | 'removed';\n  data?: T;\n  id: string;\n}\nexport interface ICollectionSubscription {\n  subscribe(collectionName: string): Observable>;\n  unsubscribe(collectionName: string): void;\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILeagueRepository.html":{"url":"interfaces/ILeagueRepository.html","title":"interface - ILeagueRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILeagueRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/league-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { League } from \"../../models/leagues.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface ILeagueRepository extends IBaseRepository{}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILeagueService.html":{"url":"interfaces/ILeagueService.html","title":"interface - ILeagueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILeagueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/league-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n\n\n\n    \n\n\n    \n        import { League } from \"../../models/leagues.model\";\nimport { IBaseService } from \"./base-service.interface\";\n\nexport interface ILeagueService extends IBaseService{}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMatchRepository.html":{"url":"interfaces/IMatchRepository.html","title":"interface - IMatchRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMatchRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/match-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Match } from \"../../models/matches.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface IMatchRepository extends IBaseRepository{}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMatchService.html":{"url":"interfaces/IMatchService.html","title":"interface - IMatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/match-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n\n\n\n    \n\n\n    \n        import { Match } from \"../../models/matches.model\";\nimport { IBaseService } from \"./base-service.interface\";\n\nexport interface IMatchService extends IBaseService{}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMatchStatsRepository.html":{"url":"interfaces/IMatchStatsRepository.html","title":"interface - IMatchStatsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMatchStatsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/matchStatistics-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { MatchStatistics } from \"../../models/matchStatistics.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface IMatchStatsRepository extends IBaseRepository{}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMatchStatsService.html":{"url":"interfaces/IMatchStatsService.html","title":"interface - IMatchStatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMatchStatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/matchStatistics-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n\n\n\n    \n\n\n    \n        import { MatchStatistics } from \"../../models/matchStatistics.model\";\nimport { IBaseService } from \"./base-service.interface\";\n\nexport interface IMatchStatsService extends IBaseService{}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlayerRepository.html":{"url":"interfaces/IPlayerRepository.html","title":"interface - IPlayerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPlayerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/player-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Player } from \"../../models/players.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface IPlayerRepository extends IBaseRepository{}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlayerService.html":{"url":"interfaces/IPlayerService.html","title":"interface - IPlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/player-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n\n\n\n    \n\n\n    \n        import { Player } from \"../../models/players.model\";\nimport { IBaseService } from \"./base-service.interface\";\n\nexport interface IPlayerService extends IBaseService{}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStrapiAuthentication.html":{"url":"interfaces/IStrapiAuthentication.html","title":"interface - IStrapiAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStrapiAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/strapi-authentication.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IAuthentication\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/strapi-authentication.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { IAuthentication } from \"./authentication.interface\";\n\nexport interface IStrapiAuthentication extends IAuthentication{\n    getToken():string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamRepository.html":{"url":"interfaces/ITeamRepository.html","title":"interface - ITeamRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITeamRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/team-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Team } from \"../../models/teams.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface ITeamRepository extends IBaseRepository{}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamService.html":{"url":"interfaces/ITeamService.html","title":"interface - ITeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/team-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getTeamByLeague\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamByLeague\n                        \n                    \n                \n            \n            \n                \ngetTeamByLeague(league: string, page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/team-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                league\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Team } from \"../../models/teams.model\";\nimport { IBaseService } from \"./base-service.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\n\nexport interface ITeamService extends IBaseService{\n\n    getTeamByLeague(league: string, page: number, pageSize: number): Observable>;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserRepository.html":{"url":"interfaces/IUserRepository.html","title":"interface - IUserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/users-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Users } from \"../../models/users.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface IUserRepository extends IBaseRepository{\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserService.html":{"url":"interfaces/IUserService.html","title":"interface - IUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/users-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getByUserId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByUserId\n                        \n                    \n                \n            \n            \n                \ngetByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/users-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Users } from '../../models/users.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface IUserService extends IBaseService {\n  // Métodos específicos si los hay\n  getByUserId(userId: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonServerRepositoryService.html":{"url":"injectables/JsonServerRepositoryService.html","title":"injectable - JsonServerRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsonServerRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/json-server-repository.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepositoryHttpService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                delete\n                            \n                            \n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/json-server-repository.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:62\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\nexport interface PaginatedRaw {\n  first: number\n  prev: number|null\n  next: number|null\n  last: number\n  pages: number\n  items: number\n  data: T[]\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonServerRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(AUTH_TOKEN) auth: IAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `${k}_like=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}/?_page=${page}&_per_page=${pageSize}&${search}`)\n        .pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.pages, res.data);\n        }));\n    }\n    else{\n      return this.http.get(\n        `${this.apiUrl}/${this.resource}?&${search}`)\n        .pipe(map(res=>{\n          return res.map((elem:any)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n    \n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity)).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.patch(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity)).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/language-selector/language-selector.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            shortCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shortCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { LanguageService } from 'src/app/core/services/language.service';\n\ninterface Language {\n  code: string;\n  name: string;\n  shortCode: string;\n}\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss'],\nproviders: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => LanguageSelectorComponent),\n    multi: true\n  }\n]\n})\nexport class LanguageSelectorComponent implements ControlValueAccessor {\nlanguages: Language[] = [\n  { code: 'es', name: 'Spanish', shortCode: 'ES' },\n  { code: 'en', name: 'English', shortCode: 'GB' },\n  { code: 'fr', name: 'French', shortCode: 'FR'},\n  { code: 'it', name: 'Italian', shortCode: 'IT'},\n  { code: 'de', name: 'German', shortCode: 'DE'},\n  { code: 'ch', name: 'Chinese', shortCode: 'CN' },\n  { code: 'ru', name: 'Russian', shortCode: 'RU'},\n  { code: 'sa', name: 'Arab', shortCode: 'SA'},\n  { code: 'pt', name: 'Portuguese', shortCode: 'PT'}\n];\n\nisOpen = false;\nselectedLanguage: string;\ndisabled = false;\n\nconstructor(\n  private languageService: LanguageService\n) {\n  this.selectedLanguage = this.languageService.getCurrentLang();\n}\n\nonChange: any = () => {};\nonTouch: any = () => {};\n\ntoggleDropdown(): void {\n  if (!this.disabled) {\n    this.isOpen = !this.isOpen;\n  }\n}\n\nselectLanguage(code: string): void {\n  this.selectedLanguage = code;\n  this.languageService.changeLanguage(code);\n  this.languageService.storeLanguage(code);\n  this.isOpen = false;\n  this.onChange(code);\n  this.onTouch();\n}\n\ngetCurrentLanguage() {\n  return this.languages.find(lang => lang.code === this.selectedLanguage);\n}\n\nwriteValue(value: string): void {\n  if (value) {\n    this.selectedLanguage = value;\n  }\n}\n\nregisterOnChange(fn: any): void {\n  this.onChange = fn;\n}\n\nregisterOnTouched(fn: any): void {\n  this.onTouch = fn;\n}\n\nsetDisabledState(isDisabled: boolean): void {\n  this.disabled = isDisabled;\n}\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSelectorComponent.html":{"url":"components/LanguageSelectorComponent.html","title":"component - LanguageSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-selector/language-selector.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => LanguageSelectorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                app-language-selector\n            \n\n\n\n            \n                styleUrls\n                ./language-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./language-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isOpen\n                            \n                            \n                                languages\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                            \n                                selectedLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentLanguage\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                selectLanguage\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                toggleDropdown\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-selector/language-selector.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLanguage\n                        \n                    \n                \n            \n            \n                \ngetCurrentLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-selector/language-selector.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-selector/language-selector.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-selector/language-selector.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLanguage\n                        \n                    \n                \n            \n            \n                \nselectLanguage(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-selector/language-selector.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-selector/language-selector.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-selector/language-selector.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-selector/language-selector.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-selector/language-selector.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-selector/language-selector.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { code: 'es', name: 'Spanish', shortCode: 'ES' },\n  { code: 'en', name: 'English', shortCode: 'GB' },\n  { code: 'fr', name: 'French', shortCode: 'FR'},\n  { code: 'it', name: 'Italian', shortCode: 'IT'},\n  { code: 'de', name: 'German', shortCode: 'DE'},\n  { code: 'ch', name: 'Chinese', shortCode: 'CN' },\n  { code: 'ru', name: 'Russian', shortCode: 'RU'},\n  { code: 'sa', name: 'Arab', shortCode: 'SA'},\n  { code: 'pt', name: 'Portuguese', shortCode: 'PT'}\n]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-selector/language-selector.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-selector/language-selector.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-selector/language-selector.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-selector/language-selector.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { LanguageService } from 'src/app/core/services/language.service';\n\ninterface Language {\n  code: string;\n  name: string;\n  shortCode: string;\n}\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss'],\nproviders: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => LanguageSelectorComponent),\n    multi: true\n  }\n]\n})\nexport class LanguageSelectorComponent implements ControlValueAccessor {\nlanguages: Language[] = [\n  { code: 'es', name: 'Spanish', shortCode: 'ES' },\n  { code: 'en', name: 'English', shortCode: 'GB' },\n  { code: 'fr', name: 'French', shortCode: 'FR'},\n  { code: 'it', name: 'Italian', shortCode: 'IT'},\n  { code: 'de', name: 'German', shortCode: 'DE'},\n  { code: 'ch', name: 'Chinese', shortCode: 'CN' },\n  { code: 'ru', name: 'Russian', shortCode: 'RU'},\n  { code: 'sa', name: 'Arab', shortCode: 'SA'},\n  { code: 'pt', name: 'Portuguese', shortCode: 'PT'}\n];\n\nisOpen = false;\nselectedLanguage: string;\ndisabled = false;\n\nconstructor(\n  private languageService: LanguageService\n) {\n  this.selectedLanguage = this.languageService.getCurrentLang();\n}\n\nonChange: any = () => {};\nonTouch: any = () => {};\n\ntoggleDropdown(): void {\n  if (!this.disabled) {\n    this.isOpen = !this.isOpen;\n  }\n}\n\nselectLanguage(code: string): void {\n  this.selectedLanguage = code;\n  this.languageService.changeLanguage(code);\n  this.languageService.storeLanguage(code);\n  this.isOpen = false;\n  this.onChange(code);\n  this.onTouch();\n}\n\ngetCurrentLanguage() {\n  return this.languages.find(lang => lang.code === this.selectedLanguage);\n}\n\nwriteValue(value: string): void {\n  if (value) {\n    this.selectedLanguage = value;\n  }\n}\n\nregisterOnChange(fn: any): void {\n  this.onChange = fn;\n}\n\nregisterOnTouched(fn: any): void {\n  this.onTouch = fn;\n}\n\nsetDisabledState(isDisabled: boolean): void {\n  this.disabled = isDisabled;\n}\n}\n    \n\n    \n        \n  \n    \n    \n      \n        {{ getCurrentLanguage()!!.name | translate }}\n        {{ getCurrentLanguage()?.shortCode }}\n      \n    \n    \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n              {{ lang.name | translate }}\n              {{ lang?.shortCode }}\n            \n          \n          \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./language-selector.component.scss\n                \n                :host {\n  width: 100%;\n}\n\n.language-container {\n  position: relative;\n  width: 100%;\n}\n\n/* Reset Ionic default styles */\n.custom-item {\n  --background: transparent;\n  --background-hover: transparent;\n  --background-activated: transparent;\n  --background-focused: transparent;\n  --border-color: transparent;\n  --border-style: none;\n  --border-width: 0;\n  --inner-border-width: 0;\n  --padding-start: 1rem;\n  --padding-end: 1rem;\n  --color: #fff;\n}\n\n.language-selector {\n  background: rgba(0, 255, 128, 0.1);\n  border-radius: 8px;\n  margin: 8px 0;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.language-selector:hover {\n  background: rgba(0, 255, 128, 0.15);\n}\n\n.language-selector.active {\n  background: rgba(0, 255, 128, 0.2);\n}\n\n.language-flag {\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.language-icon {\n  color: rgb(0, 255, 128);\n  font-size: 1.25rem;\n}\n\n.chevron-icon {\n  color: rgb(0, 255, 128);\n  transition: transform 0.3s ease;\n}\n\n.label-content {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.language-name {\n  color: #fff;\n  font-weight: 500;\n}\n\n.language-code {\n  color: rgba(255, 255, 255, 0.6);\n  font-size: 0.85rem;\n}\n\n.dropdown-container {\n  position: absolute;\n  width: 100%;\n  z-index: 100;\n  margin-top: 4px;\n}\n\n.language-list {\n  background: #1a1a1a;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n  padding: 0;\n}\n\n/* New styles for scrollable content */\n.scrollable-content {\n  max-height: 150px; // Ajusta la altura máxima según tus necesidades\n  overflow-y: auto;\n  padding-right: 4px; // Para evitar que el scroll tape el contenido\n\n  // Estilos personalizados para el scrollbar\n  scrollbar-width: thin;\n  scrollbar-color: rgba(0, 255, 128, 0.3) transparent;\n\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(0, 255, 128, 0.3);\n    border-radius: 3px;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background-color: rgba(0, 255, 128, 0.5);\n  }\n}\n.language-option {\n  transition: all 0.2s ease;\n}\n\n.language-option:hover {\n  background: rgba(0, 255, 128, 0.1);\n}\n\n.language-option.selected {\n  background: rgba(0, 255, 128, 0.15);\n}\n\n.check-icon {\n  color: rgb(0, 255, 128);\n  font-size: 1.25rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ getCurrentLanguage()!!.name | translate }}        {{ getCurrentLanguage()?.shortCode }}                                                                                          {{ lang.name | translate }}              {{ lang?.shortCode }}                                                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/language.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultLang\n                            \n                            \n                                    Private\n                                    Readonly\n                                LANG_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getCurrentLang\n                            \n                            \n                                getStoredLanguage\n                            \n                            \n                                storeLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/language.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLang\n                        \n                    \n                \n            \n            \n                \ngetCurrentLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStoredLanguage\n                        \n                    \n                \n            \n            \n                \ngetStoredLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storeLanguage\n                        \n                    \n                \n            \n            \n                \nstoreLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'es'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/language.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        LANG_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'selectedLanguage'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/language.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  private readonly LANG_KEY = 'selectedLanguage';\n  private defaultLang = 'es';\n\n  constructor(private translate: TranslateService) {\n    translate.addLangs(['es', 'en']);\n    translate.setDefaultLang('es');\n    \n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang?.match(/es|en/) ? browserLang : 'es');\n\n    const storedLang = this.getStoredLanguage();\n    this.changeLanguage(storedLang);\n  }\n\n  changeLanguage(lang: string) {\n    this.translate.use(lang);\n  }\n\n  getCurrentLang(): string {\n    return this.translate.currentLang;\n  }\n\n  getStoredLanguage(): string {\n    return localStorage.getItem(this.LANG_KEY) || this.defaultLang;\n  }\n\n  storeLanguage(lang: string): void {\n    localStorage.setItem(this.LANG_KEY, lang);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Large.html":{"url":"interfaces/Large.html","title":"interface - Large","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Large\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/League.html":{"url":"interfaces/League.html","title":"interface - League","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  League\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/leagues.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\nexport interface League extends Model{\n  name: string;\n  picture?:{\n    url: string | undefined,\n    large: string | undefined,\n    medium: string | undefined,\n    small: string | undefined,\n    thumbnail: string | undefined,\n  };\n  userId?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeagueAttributes.html":{"url":"interfaces/LeagueAttributes.html","title":"interface - LeagueAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LeagueAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            publishedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publishedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publishedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { League } from \"../../models/leagues.model\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\nexport interface MediaRaw{\n  data: StrapiMedia\n}\n\nexport interface LeagueRaw{\n  data: Data\n  meta: Meta\n}\n\nexport interface Data{\n  id: number\n  attributes: LeagueAttributes\n}\n\nexport interface LeagueData{\n  data: LeagueAttributes\n}\n\nexport interface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: League):LeagueData {\n      return {\n          data:{\n              name:data.name\n          }\n      };\n  }\n  setUpdate(data: League):LeagueData {\n      let toReturn:LeagueData = {\n          data:{\n              name:\"\",\n          }\n      };  \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': toReturn.data['name']=data[key];\n              break;\n              default:\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | LeagueRaw): League {\n      const isLeagueRaw = (data: Data | LeagueRaw): data is LeagueRaw => 'meta' in data;\n      \n      const attributes = isLeagueRaw(data) ? data.data.attributes : data.attributes;\n      const id = isLeagueRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name\n      };\n  }\n  getAdded(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeagueAttributes-1.html":{"url":"interfaces/LeagueAttributes-1.html","title":"interface - LeagueAttributes-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LeagueAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            publishedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publishedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publishedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeagueCreateModalComponent.html":{"url":"components/LeagueCreateModalComponent.html","title":"component - LeagueCreateModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeagueCreateModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/league-create-modal/league-create-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-league-create-modal\n            \n\n\n\n            \n                styleUrls\n                ./league-create-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./league-create-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                isMobile\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                league\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    league\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        league\n                    \n                \n                \n                    \n                        Type :         League\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        league\n                    \n                \n\n\n                \n                    \n                        setleague(_league: League)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _league\n                                                    \n                                                            \n                                                                            League\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/league-create-modal/league-create-modal.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { League } from 'src/app/core/models/leagues.model';\n\n@Component({\n  selector: 'app-league-create-modal',\n  templateUrl: './league-create-modal.component.html',\n  styleUrls: ['./league-create-modal.component.scss'],\n})\nexport class LeagueCreateModalComponent  implements OnInit {\n  formGroup:FormGroup;\n  mode:'new'|'edit' = 'new';\n  isMobile: boolean = false;\n\n\n  @Input() set league(_league:League){\n    if(_league && _league.id)\n      this.mode = 'edit';\n    \n    this.formGroup.controls['name'].setValue(_league.name);\n    this.formGroup.controls['picture'].setValue(_league.picture?.url);\n  }\n\n  constructor(\n    private fb:FormBuilder,\n    private modalCtrl:ModalController,\n    private platform: Platform\n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.formGroup = this.fb.group({\n      name:['', [Validators.required, Validators.minLength(2)]],\n      picture:['']\n      \n    });\n  }\n  \n\n  ngOnInit() {}\n\n  get name(){\n    return this.formGroup.controls['name'];\n  }\n  \n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n  \n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        dirtyValues[key] = control.value;\n      }\n    });\n  \n    return dirtyValues;\n  }\n\n  onSubmit(){\n    if (this.formGroup.valid) {\n      this.modalCtrl.dismiss(\n          (this.mode=='new'?\n            this.formGroup.value:\n            this.getDirtyValues(this.formGroup)), this.mode\n      );\n    } else {\n      console.log('Formulario inválido');\n    }\n\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      @if (mode=='edit') {\n        {{ 'LEAGUES.EDIT' | translate }}\n      }\n      @else {\n        {{ 'LEAGUES.NEW' | translate }}\n      }\n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n    \n\n    \n      \n    \n    \n      {{ 'LEAGUES.ERRORS.NAME_REQUIRED' | translate }}\n      {{ 'LEAGUES.ERRORS.NAME_MIN_LENGTH' | translate }}\n    \n\n    \n    \n    \n      @if (mode=='edit') {\n        {{ 'LEAGUES.UPDATE' | translate }}\n      }\n      @else {\n        {{ 'LEAGUES.SUBMIT' | translate }}\n      }\n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./league-create-modal.component.scss\n                \n                ion-content {\n  --background: none;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  --padding-top: 16px;\n  --padding-bottom: 16px;\n  --min-height: 100%;\n}\n\n.scrollable-content {\n  overflow: hidden; /* Oculta completamente la barra de scroll */\n}\n\nion-content {\n  --overflow: hidden;\n}\n\n::-webkit-scrollbar {\n  display: none; /* Oculta la scrollbar en navegadores basados en WebKit */\n}\n\nhtml, body {\n  overflow: hidden; /* Evita el desplazamiento global */\n}\n\nion-toolbar {\n  --background: #355e38;\n  --color: white;\n  padding: 10px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nion-toolbar ion-title {\n  font-size: 18px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: white;\n  margin: 0;\n  text-align: center;\n}\n\nion-toolbar ion-icon {\n  font-size: 24px;\n  color: white;\n}\n\nion-buttons {\n  display: flex;\n  justify-content: flex-end;\n}\n\nion-button {\n  --background: transparent;\n  --border-radius: 50%;\n  --color: white;\n}\n\nion-button:hover {\n  --background: rgba(255, 255, 255, 0.1);\n}\n\n/* Modal form */\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 20px 16px;\n}\n\nion-item {\n  --background: transparent;\n  --border-color: #ccc;\n}\n\nion-input {\n  --padding-start: 10px;\n  --padding-end: 10px;\n}\n\nion-input label {\n  font-size: 14px;\n  font-weight: 500;\n}\n\nion-text {\n  font-size: 12px;\n  color: #ff3b30;\n  margin-top: -10px;\n}\n\n/* Responsive */\n@media (max-width: 600px) {\n  ion-toolbar {\n    padding: 8px 12px;\n  }\n\n  ion-title {\n    font-size: 16px;\n  }\n\n  ion-button {\n    --border-radius: 50%;\n  }\n\n  form {\n    padding: 10px 12px;\n  }\n}\n\n/* Custom button */\nion-button[type=\"submit\"] {\n  background: #28a745;\n  color: white;\n  font-weight: bold;\n  margin-top: 15px;\n  --border-radius: 6px;\n}\n\nion-button[type=\"submit\"]:disabled {\n  background: #ccc;\n}\n\nion-button[type=\"submit\"]:not(:disabled):hover {\n  background: #218838;\n}\n\n/* Modal content */\n.modal-content {\n  background: white;\n  padding: 16px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n\n/* Adjust form labels for better spacing */\nion-item ion-label {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n}\n\n.picture-button {\n  --border-radius: 4px; /* Adjust this value to control corner roundness */\n  border-radius: var(--border-radius);\n}\n\n.picture-button input[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @if (mode==\\'edit\\') {        {{ \\'LEAGUES.EDIT\\' | translate }}      }      @else {        {{ \\'LEAGUES.NEW\\' | translate }}      }                                                                          {{ \\'LEAGUES.ERRORS.NAME_REQUIRED\\' | translate }}      {{ \\'LEAGUES.ERRORS.NAME_MIN_LENGTH\\' | translate }}                      @if (mode==\\'edit\\') {        {{ \\'LEAGUES.UPDATE\\' | translate }}      }      @else {        {{ \\'LEAGUES.SUBMIT\\' | translate }}      }          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LeagueCreateModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeagueData.html":{"url":"interfaces/LeagueData.html","title":"interface - LeagueData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LeagueData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         LeagueAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LeagueAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { League } from \"../../models/leagues.model\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\nexport interface MediaRaw{\n  data: StrapiMedia\n}\n\nexport interface LeagueRaw{\n  data: Data\n  meta: Meta\n}\n\nexport interface Data{\n  id: number\n  attributes: LeagueAttributes\n}\n\nexport interface LeagueData{\n  data: LeagueAttributes\n}\n\nexport interface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: League):LeagueData {\n      return {\n          data:{\n              name:data.name\n          }\n      };\n  }\n  setUpdate(data: League):LeagueData {\n      let toReturn:LeagueData = {\n          data:{\n              name:\"\",\n          }\n      };  \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': toReturn.data['name']=data[key];\n              break;\n              default:\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | LeagueRaw): League {\n      const isLeagueRaw = (data: Data | LeagueRaw): data is LeagueRaw => 'meta' in data;\n      \n      const attributes = isLeagueRaw(data) ? data.data.attributes : data.attributes;\n      const id = isLeagueRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name\n      };\n  }\n  getAdded(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeagueData-1.html":{"url":"interfaces/LeagueData-1.html","title":"interface - LeagueData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LeagueData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         LeagueAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LeagueAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeagueData-2.html":{"url":"interfaces/LeagueData-2.html","title":"interface - LeagueData-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LeagueData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         LeagueAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LeagueAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LeagueJsonServerStorageMapping.html":{"url":"injectables/LeagueJsonServerStorageMapping.html","title":"injectable - LeagueJsonServerStorageMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LeagueJsonServerStorageMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-json-server.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-json-server.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-json-server.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: LeagueRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-json-server.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeagueRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: LeagueRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-json-server.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        LeagueRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-json-server.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: League)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-json-server.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            League\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeagueRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: League)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-json-server.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            League\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeagueRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { League } from \"../../models/leagues.model\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\n\ninterface LeagueRaw{\n  id: string\n  nombre: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueJsonServerStorageMapping implements IBaseMapping {\n  setAdd(data: League):LeagueRaw {\n      return {\n          id:data.id,\n          nombre:data.name\n      }\n  }\n  setUpdate(data: League):LeagueRaw {\n      let toReturn:any = {};\n      Object.keys(data).forEach(key => {\n          switch (key) {\n              case 'name': toReturn['nombre']=data[key];\n                  break;\n              default:\n                  break;\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:LeagueRaw[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:LeagueRaw)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: LeagueRaw):League {\n      return {\n          id:data.id, \n          name:data.nombre\n      };\n  }\n  getAdded(data: any):League {\n      throw new Error(\"Method not implemented.\");\n  }\n  getUpdated(data: any):League {\n      throw new Error(\"Method not implemented.\");\n  }\n  getDeleted(data: any):League {\n      throw new Error(\"Method not implemented.\");\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LeagueMappingFirebase.html":{"url":"injectables/LeagueMappingFirebase.html","title":"injectable - LeagueMappingFirebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LeagueMappingFirebase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/league-mapping-firebase.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-firebase.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-firebase.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-firebase.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-firebase.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-firebase.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: League)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-firebase.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            League\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseLeague\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-firebase.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseLeague\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/league-mapping-firebase.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { initializeApp } from \"firebase/app\";\nimport { Firestore, getFirestore, doc } from \"firebase/firestore\";\nimport { FirebaseLeague } from \"../../models/firebase-league.model\";\nimport { FirebasePlayer } from \"../../models/firebase-player.model\";\nimport { League } from \"../../models/leagues.model\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueMappingFirebase implements IBaseMapping{\n  \n  private db: Firestore;\n  \n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig))\n  }\n  getPaginated(page: number, pageSize: number, total: number, data: ({ id: string } & FirebasePlayer)[]): Paginated {\n    return{\n      page,\n      pageSize,\n      pages: Math.ceil(total/pageSize),\n      data: data.map(item => this.getOne(item))\n    }\n  }\n  getOne(data: { id: string } & FirebaseLeague): League {\n    return {\n      id: data.id,\n      name: data.name,\n      picture: data.picture ? {\n        url: data.picture,\n        large: data.picture,\n        medium: data.picture,\n        small: data.picture,\n        thumbnail: data.picture\n      }: undefined,\n      userId: data.userId?.id \n    };\n  }\n  getAdded(data: { id: string } & FirebaseLeague): League {\n    return this.getOne(data)\n  }\n  getUpdated(data: { id: string } & FirebaseLeague): League {\n    return this.getOne(data)\n  }\n  getDeleted(data: { id: string } & FirebaseLeague): League {\n    return this.getOne(data)\n  }\n  setAdd(data: League): FirebaseLeague {\n    let dataMapping:FirebaseLeague = {\n      name: data.name,\n      picture: data.picture?.url || '',\n    };\n    if (data.userId) {\n      dataMapping.userId = doc(this.db, 'usuarios', data.userId);\n    }\n    return dataMapping;\n  }\n  setUpdate(data: Partial): FirebaseLeague {\n    const result: any = {};\n    if (data.name) result.name = data.name;\n    if (data.picture) result.picture = data.picture?.url || '';\n    if (data.userId) result.userId = doc(this.db, 'usuarios', data.userId || '');\n    return result;\n  }\n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LeagueMappingStrapi.html":{"url":"injectables/LeagueMappingStrapi.html","title":"injectable - LeagueMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LeagueMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-strapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: LeagueRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-strapi.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeagueRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: LeagueRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-strapi.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeagueRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: Data | LeagueRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-strapi.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Data | LeagueRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: Data[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-strapi.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Data[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: LeagueRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-strapi.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LeagueRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         League\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: League)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-strapi.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            League\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeagueData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: League)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/league-mapping-strapi.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            League\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LeagueData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { League } from \"../../models/leagues.model\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\nexport interface MediaRaw{\n  data: StrapiMedia\n}\n\nexport interface LeagueRaw{\n  data: Data\n  meta: Meta\n}\n\nexport interface Data{\n  id: number\n  attributes: LeagueAttributes\n}\n\nexport interface LeagueData{\n  data: LeagueAttributes\n}\n\nexport interface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: League):LeagueData {\n      return {\n          data:{\n              name:data.name\n          }\n      };\n  }\n  setUpdate(data: League):LeagueData {\n      let toReturn:LeagueData = {\n          data:{\n              name:\"\",\n          }\n      };  \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': toReturn.data['name']=data[key];\n              break;\n              default:\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | LeagueRaw): League {\n      const isLeagueRaw = (data: Data | LeagueRaw): data is LeagueRaw => 'meta' in data;\n      \n      const attributes = isLeagueRaw(data) ? data.data.attributes : data.attributes;\n      const id = isLeagueRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name\n      };\n  }\n  getAdded(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeagueRaw.html":{"url":"interfaces/LeagueRaw.html","title":"interface - LeagueRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LeagueRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-json-server.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { League } from \"../../models/leagues.model\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\n\ninterface LeagueRaw{\n  id: string\n  nombre: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueJsonServerStorageMapping implements IBaseMapping {\n  setAdd(data: League):LeagueRaw {\n      return {\n          id:data.id,\n          nombre:data.name\n      }\n  }\n  setUpdate(data: League):LeagueRaw {\n      let toReturn:any = {};\n      Object.keys(data).forEach(key => {\n          switch (key) {\n              case 'name': toReturn['nombre']=data[key];\n                  break;\n              default:\n                  break;\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:LeagueRaw[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:LeagueRaw)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: LeagueRaw):League {\n      return {\n          id:data.id, \n          name:data.nombre\n      };\n  }\n  getAdded(data: any):League {\n      throw new Error(\"Method not implemented.\");\n  }\n  getUpdated(data: any):League {\n      throw new Error(\"Method not implemented.\");\n  }\n  getDeleted(data: any):League {\n      throw new Error(\"Method not implemented.\");\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeagueRaw-1.html":{"url":"interfaces/LeagueRaw-1.html","title":"interface - LeagueRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LeagueRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { League } from \"../../models/leagues.model\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\nexport interface MediaRaw{\n  data: StrapiMedia\n}\n\nexport interface LeagueRaw{\n  data: Data\n  meta: Meta\n}\n\nexport interface Data{\n  id: number\n  attributes: LeagueAttributes\n}\n\nexport interface LeagueData{\n  data: LeagueAttributes\n}\n\nexport interface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: League):LeagueData {\n      return {\n          data:{\n              name:data.name\n          }\n      };\n  }\n  setUpdate(data: League):LeagueData {\n      let toReturn:LeagueData = {\n          data:{\n              name:\"\",\n          }\n      };  \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': toReturn.data['name']=data[key];\n              break;\n              default:\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | LeagueRaw): League {\n      const isLeagueRaw = (data: Data | LeagueRaw): data is LeagueRaw => 'meta' in data;\n      \n      const attributes = isLeagueRaw(data) ? data.data.attributes : data.attributes;\n      const id = isLeagueRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name\n      };\n  }\n  getAdded(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeagueRaw-2.html":{"url":"interfaces/LeagueRaw-2.html","title":"interface - LeagueRaw-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LeagueRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         LeagueData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LeagueData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeagueSelectableComponent.html":{"url":"components/LeagueSelectableComponent.html","title":"component - LeagueSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeagueSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/league-selectable/league-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => LeagueSelectableComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                app-league-selectable\n            \n\n\n\n            \n                styleUrls\n                ./league-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./league-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _leagues\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                leagues$\n                            \n                            \n                                leagueSelected\n                            \n                            \n                                    Public\n                                leagueSvc\n                            \n                            \n                                page\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                    \n                                popover\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                    Private\n                                    Async\n                                loadLeagues\n                            \n                            \n                                loadMoreLeagues\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                onGroupClicked\n                            \n                            \n                                onLoadLeagues\n                            \n                            \n                                onMoreLeagues\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectLeague\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(leagueSvc: LeagueService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        leagueSvc\n                                                  \n                                                        \n                                                                        LeagueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(filtering: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filtering\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadLeagues\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLeagues(filter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMoreLeagues\n                        \n                    \n                \n            \n            \n                \nloadMoreLeagues(notify: HTMLIonInfiniteScrollElement | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                notify\n                                            \n                                                        HTMLIonInfiniteScrollElement | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGroupClicked\n                        \n                    \n                \n            \n            \n                \nonGroupClicked(popover: IonPopover, group: League)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                group\n                                            \n                                                            League\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoadLeagues\n                        \n                    \n                \n            \n            \n                \nonLoadLeagues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoreLeagues\n                        \n                    \n                \n            \n            \n                \nonMoreLeagues(ev: InfiniteScrollCustomEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                        InfiniteScrollCustomEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectLeague\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectLeague(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _leagues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        leagues$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._leagues.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leagueSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         League | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        leagueSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LeagueService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        popover\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonPopover | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('popover', {read: IonPopover})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/league-selectable/league-selectable.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, OnInit, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, InfiniteScrollCustomEvent, IonInput } from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom } from 'rxjs';\nimport { League } from 'src/app/core/models/leagues.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { LeagueService } from 'src/app/core/services/impl/league.service';\n\n@Component({\n  selector: 'app-league-selectable',\n  templateUrl: './league-selectable.component.html',\n  styleUrls: ['./league-selectable.component.scss'],\n  providers:[{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => LeagueSelectableComponent),\n    multi: true\n  }]\n})\nexport class LeagueSelectableComponent  implements OnInit {\n\n  leagueSelected:League | null = null;\n  disabled:boolean = true;\n  private _leagues:BehaviorSubject = new BehaviorSubject([]);\n  public leagues$ = this._leagues.asObservable();\n\n  propagateChange = (obj: any) => {}\n\n  @ViewChild('popover', { read: IonPopover }) popover: IonPopover | undefined;\n\n  page:number = 1;\n  pageSize:number = 25;\n  pages:number = 0;\n  constructor(\n    public leagueSvc:LeagueService\n  ) { \n  }\n  ngOnDestroy(): void {\n    this.popover?.dismiss();\n  }\n  \n  onLoadLeagues(){\n    this.loadLeagues(\"\");\n  }\n\n  \n\n  private async loadLeagues(filter: string){\n    this.page = 1;\n    this.leagueSvc.getAll(this.page, this.pageSize).subscribe({\n      next:response=>{\n        this._leagues.next([...response.data]);\n        this.page++;\n        this.pages = response.pages;\n      },\n      error:err=>{}\n    }) \n  }\n\n\n  loadMoreLeagues(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page)=>{\n          this._leagues.next([...this._leagues.value, ...response.data]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n  \n  onMoreLeagues(ev:InfiniteScrollCustomEvent){\n    this.loadMoreLeagues(ev.target);\n  }\n\n  private async selectLeague(id:string|undefined, propagate:boolean=false){\n    if(id){\n      this.leagueSelected  = await lastValueFrom(this.leagueSvc.getById(id));\n    }\n    else\n      this.leagueSelected = null;\n    if(propagate && this.leagueSelected)\n      this.propagateChange(this.leagueSelected.id);\n  }\n  \n  writeValue(obj: any): void {\n    this.selectLeague(obj);\n      \n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    \n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit() {}\n\n  private async filter(filtering:string){\n    this.loadLeagues(filtering);\n  }\n\n  onFilter(evt:any){\n    this.filter(evt.detail.value)\n  }\n\n\n  onGroupClicked(popover:IonPopover, group:League){\n    this.selectLeague(group.id, true);\n    popover.dismiss();\n  }\n\n  clearSearch(input:IonInput){\n    input.value = \"\";\n  }\n\n  deselect(popover:IonPopover|null=null){\n    this.selectLeague(undefined, true);\n    if(popover)\n      popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'LEAGUE_SELECTABLE.SELECT_LEAGUE' | translate }}\n      {{ 'LEAGUE_SELECTABLE.NONE' | translate }}\n      {{leagueSelected.name}}\n    \n    \n  \n  \n    \n      \n        \n          \n            \n              \n              \n            \n\n          \n          \n            \n              {{ 'LEAGUE_SELECTABLE.NONE' | translate }}\n            \n            \n              {{league.name}} \n            \n            \n              \n            \n          \n          \n          \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./league-selectable.component.scss\n                \n                .popover-content {\n  height: 300px;\n  /* Remove the overflow here since we'll handle it in scrollable-content */\n  overflow: hidden;\n}\n\n.fixed-search {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  background-color: #355e38 ;\n  /* Add a subtle shadow to separate it from content */\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.scrollable-content {\n  height: 300px;\n  overflow-y: auto;\n  \n  /* Firefox */\n  scrollbar-width: thin;\n  scrollbar-color: #355e38 rgba(255, 255, 255, 0.1);\n  \n  /* Chrome/Safari/Edge */\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #355e38;\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #355e38;\n    border-radius: 4px;\n  }\n  \n  /* Hover state */\n  &:hover {\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n\n    &::-webkit-scrollbar-track {\n      background: #589e5c;\n      border-radius: 4px;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      background: #589e5c;\n    }\n  }\n}\n\n/* Make sure the ion-list doesn't add its own scroll */\n.list-scrollable {\n  overflow: hidden;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'LEAGUE_SELECTABLE.SELECT_LEAGUE\\' | translate }}      {{ \\'LEAGUE_SELECTABLE.NONE\\' | translate }}      {{leagueSelected.name}}                                                                                                                                          {{ \\'LEAGUE_SELECTABLE.NONE\\' | translate }}                                      {{league.name}}                                                                                                               '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LeagueSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LeagueService.html":{"url":"injectables/LeagueService.html","title":"injectable - LeagueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LeagueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/league.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ILeagueRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/league.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ILeagueRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { League } from \"../../models/leagues.model\";\nimport { LEAGUE_REPOSITORY_TOKEN } from \"../../repositories/repository.tokens\";\nimport { ILeagueService } from \"../interfaces/league-service.interface\";\nimport { BaseService } from \"./base-service.service\";\nimport { ILeagueRepository } from \"../../repositories/intefaces/league-repository.interface\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueService extends BaseService implements ILeagueService {\n  constructor(\n    @Inject(LEAGUE_REPOSITORY_TOKEN) repository: ILeagueRepository\n  ) {\n    super(repository);\n  }\n\n  // Implementa métodos específicos si los hay\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeaguesPage.html":{"url":"components/LeaguesPage.html","title":"component - LeaguesPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeaguesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/leagues/leagues.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-leagues\n            \n\n\n\n            \n                styleUrls\n                ./leagues.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./leagues.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _leagues\n                            \n                            \n                                currentLang\n                            \n                            \n                                currentUser\n                            \n                            \n                                currentUserId\n                            \n                            \n                                img\n                            \n                            \n                                leagues$\n                            \n                            \n                                    Private\n                                loadedIds\n                            \n                            \n                                page\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                selectedLeague\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLeagues\n                            \n                            \n                                getMoreLeagues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onAddLeague\n                            \n                            \n                                    Async\n                                onDeleteLeague\n                            \n                            \n                                onLeagueDropped\n                            \n                            \n                                    Async\n                                openLeague\n                            \n                            \n                                    Private\n                                    Async\n                                presentModalLeague\n                            \n                            \n                                    Async\n                                setFavoriteLeague\n                            \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userSvc: UsersService, leagueSvc: LeagueService, modalCtrl: ModalController, alertCtrl: AlertController, translate: TranslateService, languageService: LanguageService, mediaSvc: BaseMediaService, platform: Platform, leagueSubs: ICollectionSubscription)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/leagues/leagues.page.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        leagueSvc\n                                                  \n                                                        \n                                                                        LeagueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaSvc\n                                                  \n                                                        \n                                                                        BaseMediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        leagueSubs\n                                                  \n                                                        \n                                                                    ICollectionSubscription\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLeagues\n                        \n                    \n                \n            \n            \n                \ngetLeagues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMoreLeagues\n                        \n                    \n                \n            \n            \n                \ngetMoreLeagues(notify: HTMLIonInfiniteScrollElement | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                notify\n                                            \n                                                        HTMLIonInfiniteScrollElement | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onAddLeague\n                        \n                    \n                \n            \n            \n                \n                        \n                    onAddLeague()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:204\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onDeleteLeague\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeleteLeague(league: League)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                league\n                                            \n                                                            League\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLeagueDropped\n                        \n                    \n                \n            \n            \n                \nonLeagueDropped(event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openLeague\n                        \n                    \n                \n            \n            \n                \n                        \n                    openLeague(league: any, index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                league\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        presentModalLeague\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentModalLeague(mode: \"new\" | \"edit\", league: League | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"new\" | \"edit\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                league\n                                            \n                                                            League | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setFavoriteLeague\n                        \n                    \n                \n            \n            \n                \n                        \n                    setFavoriteLeague(leagueId: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                leagueId\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \ntoggleFavorite(league: League)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/leagues/leagues.page.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                league\n                                            \n                                                            League\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _leagues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Users | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        img\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : './../../../assets/img/imgCard2.jpg'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leagues$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._leagues.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadedIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLeague\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/leagues/leagues.page.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { AlertController, ModalController, Platform } from '@ionic/angular';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, firstValueFrom, lastValueFrom, Observable } from 'rxjs';\nimport { League } from 'src/app/core/models/leagues.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Users } from 'src/app/core/models/users.model';\nimport { LEAGUE_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { BaseMediaService } from 'src/app/core/services/impl/base-media.service';\nimport { LeagueService } from 'src/app/core/services/impl/league.service';\nimport { UsersService } from 'src/app/core/services/impl/users.service';\nimport { CollectionChange, ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { LanguageService } from 'src/app/core/services/language.service';\nimport { LeagueCreateModalComponent } from 'src/app/shared/components/league-create-modal/league-create-modal.component';\n\n@Component({\n  selector: 'app-leagues',\n  templateUrl: './leagues.page.html',\n  styleUrls: ['./leagues.page.scss'],\n})\nexport class LeaguesPage implements OnInit {\n  img: string|undefined = './../../../assets/img/imgCard2.jpg'\n  currentLang:string\n  _leagues: BehaviorSubject = new BehaviorSubject([]);\n  leagues$: Observable = this._leagues.asObservable();\n  currentUserId!: string | undefined;\n  currentUser: Users | null = null;\n  private loadedIds: Set = new Set();\n\n  constructor(\n    private userSvc: UsersService,\n    private leagueSvc: LeagueService,\n    private modalCtrl: ModalController,\n    private alertCtrl: AlertController,\n    private translate: TranslateService,\n    private languageService: LanguageService,\n    private mediaSvc: BaseMediaService,\n    private platform: Platform,\n    @Inject(LEAGUE_COLLECTION_SUBSCRIPTION_TOKEN)\n    private leagueSubs: ICollectionSubscription\n  ) { \n    this.currentLang = this.languageService.getStoredLanguage();\n  }\n\n  ngOnInit() {\n    this.userSvc.getCurrentUser().subscribe(user => {\n      this.currentUserId = user!!.userId;\n      this.currentUser = user\n    });\n\n    this.getLeagues();\n\n    this.leagueSubs.subscribe('leagues').subscribe((change:\n      CollectionChange) => {\n          const currentLeague = [...this._leagues.value];\n\n          if ((!this.loadedIds.has(change.id) && change.type !== 'added')) {\n            return;\n          }\n\n          switch(change.type){\n            case 'added':\n            case 'modified':\n              const index = currentLeague.findIndex(p => p.id === change.id)\n              if (index >= 0) {\n                currentLeague[index] = change.data!;\n              }\n              break;\n            case 'removed':\n              const removedIndex = currentLeague.findIndex(p => p.id === change.id)\n              if (removedIndex >= 0) {\n                currentLeague.splice(removedIndex, 1);\n                this.loadedIds.delete(change.id);\n              }\n              break;\n          }\n\n          this._leagues.next(currentLeague)\n      });\n  }\n\n\n  selectedLeague: any = null\n  page: number = 1;\n  pageSize:number = 25;\n  pages:number = 0;\n\n  getLeagues(){\n    this.page=1;\n    this.leagueSvc.getAll(this.page, this.pageSize).subscribe({\n      next:(response:Paginated)=>{\n        // Actualizar el registro de IDs cargados\n        response.data.forEach(league => this.loadedIds.add(league.id));\n        this._leagues.next([...response.data]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n  \n  getMoreLeagues(notify: HTMLIonInfiniteScrollElement | null = null){\n    this.leagueSvc.getAll(this.page, this.pageSize).subscribe({\n      next:(response: Paginated)=>{\n        // Actualizar el registro de IDs cargados\n        response.data.forEach(league => this.loadedIds.add(league.id));\n        this._leagues.next([...this._leagues.value, ...response.data]);\n        this.page++;\n        notify?.complete();\n      }\n    })\n  }\n\n  async setFavoriteLeague(leagueId: string | null) {\n    try {\n      \n      const updatedUser: any = {\n        ...this.currentUser,\n        leagueFav: leagueId ? leagueId : undefined  // 👈 Aquí está el truco\n      };\n  \n      await firstValueFrom(this.userSvc.update(this.currentUser!!.id, updatedUser));\n      this.userSvc.getCurrentUser().subscribe(user => {\n        this.currentUserId = user!!.userId;\n        this.currentUser = user\n      });\n      console.log('Favorite league updated:', leagueId);\n    } catch (err) {\n      console.error('Error setting favorite league:', err);\n    }\n  }\n  \n  toggleFavorite(league: League) {\n    const isFavorite = this.currentUser?.leagueFav === league.id;\n    const newLeagueFav = isFavorite ? null : league.id;\n  \n    this.setFavoriteLeague(newLeagueFav);\n  }\n  \n\n  async openLeague(league: any, index: number){\n    await this.presentModalLeague('edit', league)\n    this.selectedLeague\n  }\n\n  private async presentModalLeague(mode:'new'|'edit', league:League|undefined=undefined){\n    const modal = await this.modalCtrl.create({\n      component:LeagueCreateModalComponent,\n      componentProps:(mode=='edit'?{\n        league: league\n      }:{})\n    });\n    modal.onDidDismiss().then(async (response)=>{\n      const user = await firstValueFrom(this.userSvc.getCurrentUser());\n      let newLeague : any = null\n      if (response.data.picture) {\n        const base64Response = await fetch(response.data.picture);\n        const blob = await base64Response.blob();\n        const uploadedBlob = await lastValueFrom(this.mediaSvc.upload(blob));\n        const pictureUrl = uploadedBlob.map(url => url.toString())\n        response.data.picture = pictureUrl\n  \n        newLeague = {\n          name: response.data.name,\n          userId: user!!.userId,\n          picture: {\n            url: pictureUrl[0],\n            large: pictureUrl[0],\n            medium: pictureUrl[0],\n            small: pictureUrl[0],\n            thumbnail: pictureUrl[0],\n          }\n        }\n      }else{\n        newLeague = {\n          name: response.data.name,\n          userId: user!!.userId,\n        }\n      }\n      switch (response.role) {\n        case 'new':\n          this.leagueSvc.add(newLeague).subscribe({\n            next:res=>{\n              this.getLeagues();\n              console.log('Creando liga con userId:', user!!.userId)\n            },\n            error:err=>{}\n          });\n          break;\n        case 'edit':\n          this.leagueSvc.update(league!.id, newLeague).subscribe({\n            next:res=>{\n              this.getLeagues();\n            },\n            error:err=>{}\n          });\n          break;\n        default:\n          break;\n      }\n    });\n    await modal.present();\n  }\n\n  async onAddLeague(){\n    await this.presentModalLeague('new');\n  }\n\n  async onDeleteLeague(league: League) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate.get('LEAGUES.MESSAGES.DELETE_CONFIRM').toPromise(),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'yes',\n          handler: () => {\n            this.leagueSvc.delete(league.id).subscribe({\n              next: response => {\n                this.getLeagues();\n              },\n              error: err => {}\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  onLeagueDropped(event: { fromIndex: number, toIndex: number }) {\n    const leaguesArray = [...this._leagues.value];\n  \n    if (event.fromIndex !== event.toIndex) {\n      // Remueve el equipo de su posición original\n      const movedItem = leaguesArray.splice(event.fromIndex, 1)[0];\n  \n      // Inserta el equipo en la nueva posición\n      leaguesArray.splice(event.toIndex, 0, movedItem);\n  \n      // Actualiza el BehaviorSubject con la nueva lista ordenada\n      this._leagues.next(leaguesArray);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      \n        {{\"LEAGUES.TITLE\" | translate}}\n      \n      \n        \n        {{'LEAGUES.CREATE' | translate}}\n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                \n                  \n                  \n                \n                {{league.name}}\n              \n\n              \n                \n                  \n                \n                \n                  \n                \n                \n                  \n                \n                \n                  \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./leagues.page.scss\n                \n                :host {\n  --primary-color: #00ff88;\n  --secondary-color: #5050db;\n  --accent-color: #ff3366;\n  --background-dark: #131313;\n  --card-bg: rgba(255, 255, 255, 0.1);\n  --card-height: 300px;\n  --card-width: 300px;\n}\n\n// Header Styles\nion-header {\n  ion-toolbar {\n    .create-button {\n      --background: linear-gradient(45deg, var(--primary-color), #00ffcc);\n      --border-radius: 20px;\n      --padding-start: 15px;\n      --padding-end: 15px;\n      margin-right: 16px;\n      \n      ion-icon {\n        margin-right: 8px;\n      }\n    }\n  }\n}\n\n// Grid Layout\nion-grid {\n  padding: 20px;\n}\n\nion-row {\n  margin: 0;\n}\n\nion-col {\n  padding: 10px;\n}\n\n// Card Styles\nion-card {\n  height: var(--card-height);\n  margin: 0;\n  background: var(--card-bg);\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: transform 0.3s, box-shadow 0.3s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\n    \n    .glow-effect {\n      opacity: 1;\n    }\n  }\n}\n\nion-card-content {\n  padding: 20px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n// League Header\n.league-header {\n  display: flex;\n  flex-direction: column; /* Asegura que el contenido se apile verticalmente */\n  align-items: center; /* Centra los elementos horizontalmente */\n  text-align: center;\n  margin-bottom: 20px;\n  \n  .league-image-container {\n    position: relative;\n    display: flex;\n    justify-content: center; /* Centra la imagen horizontalmente */\n    align-items: center;\n    width: 250px;\n    height: 150px;\n    margin-right: 15px;\n    \n    .league-img {\n      width:75%;\n      height: 100%;\n      object-fit: cover;\n      border-radius: 12px;\n    }\n    \n    .glow-effect {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: radial-gradient(circle at 50% 50%, \n        rgba(var(--primary-color), 0.5), \n        transparent 70%);\n      opacity: 0;\n      transition: opacity 0.3s;\n    }\n  }\n\n  .league-name {\n    color: white;\n    font-size: 1.3rem;\n    font-weight: 600;\n    margin-top: 10px;\n    word-break: break-word;\n  }\n}\n\n// Action Buttons\n.action-buttons {\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  margin-top: auto;\n\n  ion-button {\n    --padding-start: 12px;\n    --padding-end: 12px;\n    --border-radius: 10px;\n    width: 56px;\n    height: 56px;\n\n    ion-icon {\n      font-size: 28px !important;\n    }\n\n    // Pantallas medianas y grandes (mejoramos progresivamente)\n    @media (min-width: 600px) {\n      width: 64px;\n      height: 64px;\n\n      ion-icon {\n        font-size: 32px !important;\n      }\n    }\n\n    @media (min-width: 1024px) {\n      width: 64px;\n      height: 64px;\n\n      ion-icon {\n        font-size: 28px !important;\n      }\n    }\n\n    &.info {\n      --background: rgba(var(--primary-color), 0.2);\n      --color: var(--primary-color);\n\n      &:hover {\n        transform: scale(1.1);\n        --background: rgba(57, 255, 7, 0.199);\n      }\n    }\n\n    &.edit {\n      --background: rgba(var(--secondary-color), 0.2);\n      --color: var(--secondary-color);\n\n      &:hover {\n        transform: scale(1.1);\n        --background: rgba(114, 7, 255, 0.151);\n      }\n    }\n\n    &.delete {\n      --background: rgba(var(--accent-color), 0.2);\n      --color: var(--accent-color);\n\n      &:hover {\n        transform: scale(1.1);\n        --background: rgba(255, 7, 7, 0.3);\n      }\n    }\n\n    &.favorite {\n      --background: rgba(255, 193, 7, 0.2);\n      --color: #ffc107;\n      transition: transform 0.2s ease;\n\n      &:hover {\n        transform: scale(1.1);\n        --background: rgba(255, 193, 7, 0.3);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{\"LEAGUES.TITLE\" | translate}}                            {{\\'LEAGUES.CREATE\\' | translate}}                                                                                                                                                        {{league.name}}                                                                                                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LeaguesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeaguesPageModule.html":{"url":"modules/LeaguesPageModule.html","title":"module - LeaguesPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LeaguesPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeaguesPageModule\n\n\n\ncluster_LeaguesPageModule_imports\n\n\n\ncluster_LeaguesPageModule_declarations\n\n\n\n\nLeaguesPage\n\nLeaguesPage\n\n\n\nLeaguesPageModule\n\nLeaguesPageModule\n\nLeaguesPageModule -->\n\nLeaguesPage->LeaguesPageModule\n\n\n\n\n\nLeaguesPageRoutingModule\n\nLeaguesPageRoutingModule\n\nLeaguesPageModule -->\n\nLeaguesPageRoutingModule->LeaguesPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLeaguesPageModule -->\n\nSharedModule->LeaguesPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/leagues/leagues.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LeaguesPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LeaguesPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LeaguesPageRoutingModule } from './leagues-routing.module';\n\nimport { LeaguesPage } from './leagues.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    LeaguesPageRoutingModule,\n    TranslateModule.forChild()],\n  declarations: [LeaguesPage]\n})\nexport class LeaguesPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeaguesPageRoutingModule.html":{"url":"modules/LeaguesPageRoutingModule.html","title":"module - LeaguesPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LeaguesPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/leagues/leagues-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LeaguesPage } from './leagues.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaguesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LeaguesPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineupsPage.html":{"url":"components/LineupsPage.html","title":"component - LineupsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LineupsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/lineups/lineups.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lineups\n            \n\n\n\n            \n                styleUrls\n                ./lineups.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./lineups.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                localPlayers\n                            \n                            \n                                localTeam\n                            \n                            \n                                match\n                            \n                            \n                                partidoId\n                            \n                            \n                                visitorPlayers\n                            \n                            \n                                visitorTeam\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadMatch\n                            \n                            \n                                loadTeamsAndPlayers\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, matchSvc: MatchService, teamSvc: TeamService, playerSvc: PlayerService, translate: TranslateService, languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/lineups/lineups.page.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchSvc\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamSvc\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerSvc\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadMatch\n                        \n                    \n                \n            \n            \n                \nloadMatch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lineups/lineups.page.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamsAndPlayers\n                        \n                    \n                \n            \n            \n                \nloadTeamsAndPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lineups/lineups.page.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/lineups/lineups.page.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lineups/lineups.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player[] | null\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lineups/lineups.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lineups/lineups.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Match | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lineups/lineups.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        partidoId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lineups/lineups.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visitorPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player[] | null\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lineups/lineups.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visitorTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/lineups/lineups.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/app/core/models/matches.model';\nimport { Player } from 'src/app/core/models/players.model';\nimport { Team } from 'src/app/core/models/teams.model';\nimport { MatchService } from 'src/app/core/services/impl/match.service';\nimport { PlayerService } from 'src/app/core/services/impl/player.service';\nimport { TeamService } from 'src/app/core/services/impl/team.service';\nimport { LanguageService } from 'src/app/core/services/language.service';\n\n@Component({\n  selector: 'app-lineups',\n  templateUrl: './lineups.page.html',\n  styleUrls: ['./lineups.page.scss'],\n})\nexport class LineupsPage implements OnInit {\n  \n  partidoId!: string;\n  match!: Match | null; \n  localTeam!: Team | null;\n  visitorTeam!: Team | null;\n  localPlayers: Player[] | null = [];\n  visitorPlayers: Player[] | null = [];\n  currentLang:string\n  constructor(\n    private route: ActivatedRoute,\n    private matchSvc: MatchService,\n    private teamSvc: TeamService,\n    private playerSvc: PlayerService,\n    private translate: TranslateService,\n    private languageService: LanguageService) \n    {\n      this.currentLang = this.languageService.getStoredLanguage();\n    }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.partidoId = id;\n        this.loadMatch();\n      }\n    });\n  }\n\n  loadMatch() {\n    this.matchSvc.getById(this.partidoId).subscribe({\n      next: (match) => {\n        if (match) {\n          this.match = match;\n          this.loadTeamsAndPlayers();\n        }\n      },\n      error: err => console.error('Error loading match:', err)\n    });\n  }\n\n  loadTeamsAndPlayers() {\n    if (this.match!.localTeamId) {\n      this.teamSvc.getById(this.match!.localTeamId).subscribe({\n        next: (team) => this.localTeam = team!,\n        error: err => console.error('Error loading local team:', err)\n      });\n  \n      this.playerSvc.getAll(-1, 100, { team: this.match!.localTeamId }).subscribe({\n        next: (result) => this.localPlayers = (result as any).data || [],\n        error: err => console.error('Error loading local players:', err)\n      });\n    }\n  \n    if (this.match!.visitorTeamId) {\n      this.teamSvc.getById(this.match!.visitorTeamId).subscribe({\n        next: (team) => this.visitorTeam = team!,\n        error: err => console.error('Error loading visitor team:', err)\n      });\n  \n      this.playerSvc.getAll(-1, 100, { team: this.match!.visitorTeamId }).subscribe({\n        next: (result) => this.visitorPlayers = (result as any).data || [], //  console.error('Error loading visitor players:', err)\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      \n        {{\"LINEUPS.TITLE\" | translate}}\n      \n    \n  \n\n  \n    \n      \n      \n        \n          {{ localTeam.name }} vs {{ visitorTeam.name }}\n        \n        \n          {{ match.day }} - {{ match.hour }}\n        \n      \n\n      \n        \n\n          \n            \n              {{ \"LINEUPS.LOCAL\" | translate }} - {{ localTeam.name }}\n            \n\n            \n              \n                \n                  \n                \n                \n                  \n                    {{ player.dorsal }} - {{ player.name }} {{ player.firstSurname }}\n                  \n                  \n                    {{ player.position }} ({{ player.nationality }})\n                  \n                \n              \n            \n          \n\n          \n            \n              {{ \"LINEUPS.VISITOR\" | translate }} - {{ visitorTeam.name }}\n            \n\n            \n              \n                \n                  \n                \n                \n                  \n                    {{ player.dorsal }} - {{ player.name }} {{ player.firstSurname }}\n                  \n                  \n                    {{ player.position }} ({{ player.nationality }})\n                  \n                \n              \n            \n          \n        \n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./lineups.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{\"LINEUPS.TITLE\" | translate}}                                                {{ localTeam.name }} vs {{ visitorTeam.name }}                          {{ match.day }} - {{ match.hour }}                                                                {{ \"LINEUPS.LOCAL\" | translate }} - {{ localTeam.name }}                                                                                                                                              {{ player.dorsal }} - {{ player.name }} {{ player.firstSurname }}                                                        {{ player.position }} ({{ player.nationality }})                                                                                                          {{ \"LINEUPS.VISITOR\" | translate }} - {{ visitorTeam.name }}                                                                                                                                              {{ player.dorsal }} - {{ player.name }} {{ player.firstSurname }}                                                        {{ player.position }} ({{ player.nationality }})                                                                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineupsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LineupsPageModule.html":{"url":"modules/LineupsPageModule.html","title":"module - LineupsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LineupsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LineupsPageModule\n\n\n\ncluster_LineupsPageModule_imports\n\n\n\ncluster_LineupsPageModule_declarations\n\n\n\n\nLineupsPage\n\nLineupsPage\n\n\n\nLineupsPageModule\n\nLineupsPageModule\n\nLineupsPageModule -->\n\nLineupsPage->LineupsPageModule\n\n\n\n\n\nLineupsPageRoutingModule\n\nLineupsPageRoutingModule\n\nLineupsPageModule -->\n\nLineupsPageRoutingModule->LineupsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/lineups/lineups.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineupsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LineupsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LineupsPageRoutingModule } from './lineups-routing.module';\n\nimport { LineupsPage } from './lineups.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LineupsPageRoutingModule,\n    TranslateModule.forChild()],\n  declarations: [LineupsPage]\n})\nexport class LineupsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LineupsPageRoutingModule.html":{"url":"modules/LineupsPageRoutingModule.html","title":"module - LineupsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LineupsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/lineups/lineups-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LineupsPage } from './lineups.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LineupsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LineupsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                img\n                            \n                            \n                                isPasswordVisible\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                onForgotPassword\n                            \n                            \n                                onRegister\n                            \n                            \n                                onSubmit\n                            \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, authSvc: BaseAuthenticationService, languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onForgotPassword\n                        \n                    \n                \n            \n            \n                \nonForgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        img\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/img/campo-futbol2.jpg'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/login/login.page.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/login/login.page.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { LanguageService } from 'src/app/core/services/language.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n  currentLang:string\n  loginForm: FormGroup;\n  img: string = 'assets/img/campo-futbol2.jpg';\n  isPasswordVisible: boolean = false\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route:ActivatedRoute,\n    private authSvc:BaseAuthenticationService,\n    private languageService: LanguageService\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n\n    this.currentLang = this.languageService.getStoredLanguage();\n  }\n\n  toggleVisibility(){\n    this.isPasswordVisible = !this.isPasswordVisible\n  }\n\n  changeLanguage(lang: string) {\n    this.languageService.changeLanguage(lang);\n    this.currentLang = lang;\n    this.languageService.storeLanguage(lang);\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.authSvc.signIn(this.loginForm.value).subscribe({\n        next: resp=>{\n          const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n          this.authSvc.emitLoginSuccess();\n          this.router.navigateByUrl(returnUrl); // Redirige a la página solicitada\n        },\n        error: err=>{\n          console.log(err);\n        }\n      });\n      \n    } else {\n      console.log('Formulario no válido');\n    }\n  }\n\n  onRegister(){\n    this.loginForm.reset();\n    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n    this.router.navigate(['/register'], {queryParams:{ returnUrl:returnUrl}, replaceUrl:true});\n  }\n\n  onForgotPassword(){\n\n  }\n\n  get email(){\n    return this.loginForm.controls['email'];\n  }\n\n  get password(){\n    return this.loginForm.controls['password'];\n  }\n}\n    \n\n    \n        \n  \n    \n\n      \n        ⚽ {{ 'LOGIN.TITLE' | translate }} ⚽\n      \n\n      \n        \n        \n          \n            {{ 'LOGIN.EMAIL' | translate }}\n          \n          \n        \n\n        \n          \n            {{ 'LOGIN.PASSWORD' | translate }}\n          \n          \n            \n            \n              \n            \n          \n        \n\n        \n          {{ 'LOGIN.ERRORS.REQUIRED' | translate }}\n          {{ 'LOGIN.ERRORS.INCORRECT_EMAIL' | translate }}\n        \n        \n          {{ 'LOGIN.ERRORS.INCORRECT_PASSWORD' | translate }}\n        \n\n        \n          {{ 'LOGIN.BUTTON_LOGIN' | translate }}\n        \n      \n\n      \n        {{ 'LOGIN.NOT_ACCOUNT' | translate }}\n        \n          {{ 'LOGIN.BUTTON_REGISTER' | translate }}\n        \n      \n\n      \n        {{ currentLang === 'es' ? 'Español' : 'English' }}\n        \n        \n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ⚽ {{ \\'LOGIN.TITLE\\' | translate }} ⚽                                                  {{ \\'LOGIN.EMAIL\\' | translate }}                                                          {{ \\'LOGIN.PASSWORD\\' | translate }}                                                                                                          {{ \\'LOGIN.ERRORS.REQUIRED\\' | translate }}          {{ \\'LOGIN.ERRORS.INCORRECT_EMAIL\\' | translate }}                          {{ \\'LOGIN.ERRORS.INCORRECT_PASSWORD\\' | translate }}                          {{ \\'LOGIN.BUTTON_LOGIN\\' | translate }}                            {{ \\'LOGIN.NOT_ACCOUNT\\' | translate }}                  {{ \\'LOGIN.BUTTON_REGISTER\\' | translate }}                            {{ currentLang === \\'es\\' ? \\'Español\\' : \\'English\\' }}                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    TranslateModule.forChild()\n],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Match.html":{"url":"interfaces/Match.html","title":"interface - Match","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Match\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/matches.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            day\n                                        \n                                \n                                \n                                        \n                                            hour\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            localTeamId\n                                        \n                                \n                                \n                                        \n                                            place\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visitorTeamId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hour:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localTeamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localTeamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        place:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visitorTeamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visitorTeamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\"\n\nexport interface Match extends Model{\n    day: Date,\n    hour: Date,\n    result: string, \n    place: string,\n    status: string,\n    localTeamId?: string,\n    visitorTeamId?: string,\n    userId?: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchCreateComponent.html":{"url":"components/MatchCreateComponent.html","title":"component - MatchCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MatchCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/match-create/match-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-create\n            \n\n\n\n            \n                styleUrls\n                ./match-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./match-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                getDay\n                            \n                            \n                                getHour\n                            \n                            \n                                isDatePickerOpen\n                            \n                            \n                                isLocalTeamModalOpen\n                            \n                            \n                                isMobile\n                            \n                            \n                                isTimePickerOpen\n                            \n                            \n                                isVisitorTeamModalOpen\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                formatDate\n                            \n                            \n                                formatTime\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChange\n                            \n                            \n                                onLocalTeamMouseEnter\n                            \n                            \n                                onLocalTeamMouseLeave\n                            \n                            \n                                onSubmit\n                            \n                            \n                                onTimeChange\n                            \n                            \n                                onVisitorTeamMouseEnter\n                            \n                            \n                                onVisitorTeamMouseLeave\n                            \n                            \n                                openDatePicker\n                            \n                            \n                                openTimePicker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                match\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    match\n                                \n                                \n                                    day\n                                \n                                \n                                    hour\n                                \n                                \n                                    result\n                                \n                                \n                                    place\n                                \n                                \n                                    localTeamId\n                                \n                                \n                                    visitorTeamId\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :         Match\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/match-create/match-create.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDate\n                        \n                    \n                \n            \n            \n                \nformatDate(date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(time: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                time\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDateChange\n                        \n                    \n                \n            \n            \n                \nonDateChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLocalTeamMouseEnter\n                        \n                    \n                \n            \n            \n                \nonLocalTeamMouseEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLocalTeamMouseLeave\n                        \n                    \n                \n            \n            \n                \nonLocalTeamMouseLeave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTimeChange\n                        \n                    \n                \n            \n            \n                \nonTimeChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVisitorTeamMouseEnter\n                        \n                    \n                \n            \n            \n                \nonVisitorTeamMouseEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVisitorTeamMouseLeave\n                        \n                    \n                \n            \n            \n                \nonVisitorTeamMouseLeave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDatePicker\n                        \n                    \n                \n            \n            \n                \nopenDatePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openTimePicker\n                        \n                    \n                \n            \n            \n                \nopenTimePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-create/match-create.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDatePickerOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLocalTeamModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTimePickerOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisitorTeamModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/match-create/match-create.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n\n\n                \n                    \n                        setmatch(_match: Match)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/match-create/match-create.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _match\n                                                    \n                                                            \n                                                                            Match\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        day\n                    \n                \n\n                \n                    \n                        getday()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/match-create/match-create.component.ts:107\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hour\n                    \n                \n\n                \n                    \n                        gethour()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/match-create/match-create.component.ts:111\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        result\n                    \n                \n\n                \n                    \n                        getresult()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/match-create/match-create.component.ts:115\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        place\n                    \n                \n\n                \n                    \n                        getplace()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/match-create/match-create.component.ts:119\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        localTeamId\n                    \n                \n\n                \n                    \n                        getlocalTeamId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/match-create/match-create.component.ts:123\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visitorTeamId\n                    \n                \n\n                \n                    \n                        getvisitorTeamId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/match-create/match-create.component.ts:127\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { Match } from 'src/app/core/models/matches.model';\n\n@Component({\n  selector: 'app-match-create',\n  templateUrl: './match-create.component.html',\n  styleUrls: ['./match-create.component.scss'],\n})\nexport class MatchCreateComponent  implements OnInit {\n  getDay: FormControl;\n  getHour: FormControl;\n  formGroup:FormGroup;\n  mode:'new'|'edit' = 'new';\n  isMobile: boolean = false;\n  isDatePickerOpen = false;\n  isTimePickerOpen = false;\n  isLocalTeamModalOpen = false;\n  isVisitorTeamModalOpen = false;\n\n\n  @Input() set match(_match:Match){\n    if(_match && _match.id)\n      this.mode = 'edit';\n    \n    this.formGroup.controls['day'].setValue(_match.day);\n    this.formGroup.controls['hour'].setValue(_match.hour);\n    this.formGroup.controls['result'].setValue(_match.result);\n    this.formGroup.controls['place'].setValue(_match.place);\n    this.formGroup.controls['localTeamId'].setValue(_match.localTeamId);\n    this.formGroup.controls['visitorTeamId'].setValue(_match.visitorTeamId);\n\n  }\n\n  constructor(\n    private fb:FormBuilder,\n    private modalCtrl:ModalController,\n    private platform: Platform\n  ) { \n    this.getDay = new FormControl('');\n    this.getHour = new FormControl('');\n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.formGroup = this.fb.group({\n      day:['', [Validators.required]],\n      hour: ['', [Validators.required]],\n      result:['', [Validators.required]],\n      place: ['', [Validators.required]],\n      localTeamId: ['', [Validators.required]],\n      visitorTeamId: ['', [Validators.required]]\n      \n    });\n  }\n\n  openDatePicker() {\n    this.isDatePickerOpen = true;\n  }\n\n  openTimePicker() {\n    this.isTimePickerOpen = true;\n  }\n  formatDate(date: string): string {\n    const d = new Date(date);\n    return d.toLocaleDateString('es-ES', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    }).replace(/\\//g, '/');\n  }\n\n  formatTime(time: string): string {\n    return time.substring(11, 16);\n  }\n\n  onDateChange(event: any) {\n    const selectedDate = event.detail.value;\n    this.formGroup.get('day')?.setValue(this.formatDate(selectedDate));\n    this.isDatePickerOpen = false;\n  }\n\n  onTimeChange(event: any) {\n    const selectedTime = event.detail.value;\n    this.formGroup.get('hour')?.setValue(this.formatTime(selectedTime));\n    this.isTimePickerOpen = false;\n  }\n\n  onLocalTeamMouseEnter() {\n    this.isVisitorTeamModalOpen = false;\n    this.isLocalTeamModalOpen = true;\n  }\n\n  onLocalTeamMouseLeave() {\n    this.isLocalTeamModalOpen = false;\n  }\n\n  onVisitorTeamMouseEnter() {\n    this.isLocalTeamModalOpen = false;\n    this.isVisitorTeamModalOpen = true;\n  }\n\n  onVisitorTeamMouseLeave() {\n    this.isVisitorTeamModalOpen = false;\n  }\n\n  ngOnInit() {}\n\n  get day(){\n    return this.formGroup.controls['day'];\n  }\n\n  get hour(){\n    return this.formGroup.controls['hour'];\n  }\n\n  get result(){\n    return this.formGroup.controls['result'];\n  }\n\n  get place(){\n    return this.formGroup.controls['place'];\n  }\n\n  get localTeamId(){\n    return this.formGroup.controls['localTeamId'];\n  }\n\n  get visitorTeamId(){\n    return this.formGroup.controls['visitorTeamId'];\n  }\n\n  \n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n  \n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        dirtyValues[key] = control.value;\n      }\n    });\n  \n    return dirtyValues;\n  }\n\n  onSubmit(){\n    if (this.formGroup.valid) {\n      this.modalCtrl.dismiss(\n          (this.mode=='new'?\n            this.formGroup.value:\n            this.getDirtyValues(this.formGroup)), this.mode\n      );\n    } else {\n      console.log('Formulario inválido');\n    }\n\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    @if (mode=='edit') {\n      {{ 'MATCHES.EDIT' | translate }}\n    }\n    @else {\n      {{ 'MATCHES.NEW' | translate }}\n    }\n  \n  \n    \n      \n    \n  \n\n\n  \n    \n    \n      \n      \n      {{ getDay.value ? (getDay.value | date:'dd-MM-yyyy') : 'PLAYERS.SELECT_DATE'|translate }}\n      \n     \n    \n      \n        \n          {{'MATCHES.SELECT_DATE'|translate}}\n        \n      \n    \n      {{'MATCHES.SELECT_DATE'|translate}}\n  \n  \n    \n    \n      \n      \n        {{ getHour.value ? (getHour.value) : 'MATCHES.SELECT_TIME'|translate }}\n        \n      \n      \n        \n          \n            {{'MATCHES.SELECT_TIME'|translate}}\n          \n        \n      \n    \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n        \n          \n            \n              {{ 'MATCHES.TEAM_LOCAL' | translate }}\n              \n              \n            \n          \n          \n            \n              {{ 'MATCHES.TEAM_VISITOR' | translate }}\n              \n              \n            \n          \n        \n      \n    \n    \n    \n    \n      @if (mode=='edit') {\n        {{ 'MATCHES.UPDATE' | translate }}\n      }\n      @else {\n        {{ 'MATCHES.SUBMIT' | translate }}\n      }\n    \n  \n  \n    \n\n    \n                \n                    ./match-create.component.scss\n                \n                ion-content {\n    --background: none;\n    --padding-start: 16px;\n    --padding-end: 16px;\n    --padding-top: 16px;\n    --padding-bottom: 16px;\n    --min-height: 100%;\n  }\n\n  .scrollable-content {\n    overflow: hidden; /* Oculta completamente la barra de scroll */\n  }\n  \n  ion-content {\n    --overflow: hidden;\n  }\n  \n  ::-webkit-scrollbar {\n    display: none; /* Oculta la scrollbar en navegadores basados en WebKit */\n  }\n  \n  html, body {\n    overflow: hidden; /* Evita el desplazamiento global */\n  }\n  \n  ion-toolbar {\n    --background: #355e38;\n    --color: white;\n    padding: 10px 16px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  \n  ion-toolbar ion-title {\n    font-size: 18px;\n    font-weight: bold;\n    text-transform: uppercase;\n    color: white;\n    margin: 0;\n    text-align: center;\n  }\n  \n  ion-toolbar ion-icon {\n    font-size: 24px;\n    color: white;\n  }\n  \n  ion-buttons {\n    display: flex;\n    justify-content: flex-end;\n  }\n  \n  ion-button {\n    --background: transparent;\n    --border-radius: 50%;\n    --color: white;\n  }\n  \n  ion-button:hover {\n    --background: rgba(255, 255, 255, 0.1);\n  }\n  \n  /* Modal form */\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    padding: 20px 16px;\n  }\n  \n  ion-item {\n    --background: transparent;\n    --border-color: #ccc;\n  }\n  \n  ion-input {\n    --padding-start: 10px;\n    --padding-end: 10px;\n  }\n  \n  ion-input label {\n    font-size: 14px;\n    font-weight: 500;\n  }\n  \n  ion-text {\n    font-size: 12px;\n    color: #ff3b30;\n    margin-top: -10px;\n  }\n  \n  /* Responsive */\n  @media (max-width: 600px) {\n    ion-toolbar {\n      padding: 8px 12px;\n    }\n  \n    ion-title {\n      font-size: 16px;\n    }\n  \n    ion-button {\n      --border-radius: 50%;\n    }\n  \n    form {\n      padding: 10px 12px;\n    }\n  }\n  \n  /* Custom button */\n  ion-button[type=\"submit\"] {\n    background: #28a745;\n    color: white;\n    font-weight: bold;\n    margin-top: 15px;\n    --border-radius: 6px;\n  }\n  \n  ion-button[type=\"submit\"]:disabled {\n    background: #ccc;\n  }\n  \n  ion-button[type=\"submit\"]:not(:disabled):hover {\n    background: #218838;\n  }\n  \n  /* Modal content */\n  .modal-content {\n    background: white;\n    padding: 16px;\n    border-radius: 8px;\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n  }\n  \n  \n  /* Adjust form labels for better spacing */\n  ion-item ion-label {\n    font-size: 16px;\n    font-weight: 500;\n    margin-bottom: 10px;\n  }\n  \n  /* Estilo del botón de fecha */\n  .date-button {\n    --background: none !important;\n    --color: rgba(255, 255, 255) !important;\n    --border-color: rgba(255, 255, 255, 0.1);\n    --border-radius: 8px;\n    --border-width: 1px;\n    --border-style: solid;\n    --box-shadow: none;\n    --padding-start: 16px;\n    --padding-end: 16px;\n    --padding-top: 12px;\n    --padding-bottom: 12px;\n    margin: 8px auto; /* Centro horizontal */\n    width: 80%; /* Reduce el ancho para centrarlo mejor */\n    max-width: 300px; /* Ancho máximo para pantallas más grandes */\n    font-size: 14px;\n    text-align: center; /* Centro del texto */\n    display: flex; /* Usar flexbox */\n    align-items: center; /* Centra verticalmente el contenido */\n    justify-content: center; /* Centro horizontal */\n  }\n\n  .time-button {\n    --background: none !important;\n    --color: rgba(255, 255, 255) !important;\n    --border-color: rgba(255, 255, 255, 0.1);\n    --border-radius: 8px;\n    --border-width: 1px;\n    --border-style: solid;\n    --box-shadow: none;\n    --padding-start: 16px;\n    --padding-end: 16px;\n    --padding-top: 12px;\n    --padding-bottom: 12px;\n    margin: 8px auto; /* Centro horizontal */\n    width: 80%; /* Reduce el ancho para centrarlo mejor */\n    max-width: 300px; /* Ancho máximo para pantallas más grandes */\n    font-size: 14px;\n    text-align: center; /* Centro del texto */\n    display: flex; /* Usar flexbox */\n    align-items: center; /* Centra verticalmente el contenido */\n    justify-content: center; /* Centro horizontal */\n  }\n  \n  .date-button ion-icon {\n    margin-left: 8px;\n    color: #ffffff;\n  }\n  \n  .time-button ion-icon {\n    margin-left: 8px;\n    color: #ffffff;\n  }\n  /* Estilo del modal del calendario */\n  .date-picker-modal, .time-picker-modal {\n    --height: auto;\n    --width: 90%;\n    --max-width: 350px;\n    --border-radius: 8px;\n  }\n  \n  .date-picker-modal ion-datetime, .time-picker-modal {\n    --background: rgb(0, 0, 0, 0.1);\n    --ion-color-primary: #355e38;\n    --ion-color-primary-contrast: rgb(0, 0, 0);\n    border-radius: 8px;\n    padding: 16px;\n  }\n  \n  .date-picker-modal ion-datetime::part(active), .time-picker-modal ion-datetime::part(active) {\n    background: #355e38;\n    color: rgb(0, 0, 0);\n  }\n  \n  .date-picker-modal ion-datetime::part(button-clear),\n  .date-picker-modal ion-datetime::part(button-done),.time-picker-modal ion-datetime::part(button-clear), .time-picker-modal ion-datetime::part(button-done) {\n    color: #355e38;\n  }\n  \n  /* Ajustes responsive */\n  @media (max-width: 600px) {\n    .date-picker-modal {\n      --width: 95%;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        @if (mode==\\'edit\\') {      {{ \\'MATCHES.EDIT\\' | translate }}    }    @else {      {{ \\'MATCHES.NEW\\' | translate }}    }                                                {{ getDay.value ? (getDay.value | date:\\'dd-MM-yyyy\\') : \\'PLAYERS.SELECT_DATE\\'|translate }}                                       {{\\'MATCHES.SELECT_DATE\\'|translate}}                        {{\\'MATCHES.SELECT_DATE\\'|translate}}                                {{ getHour.value ? (getHour.value) : \\'MATCHES.SELECT_TIME\\'|translate }}                                                  {{\\'MATCHES.SELECT_TIME\\'|translate}}                                                                                                                              {{ \\'MATCHES.TEAM_LOCAL\\' | translate }}                                                                                      {{ \\'MATCHES.TEAM_VISITOR\\' | translate }}                                                                                      @if (mode==\\'edit\\') {        {{ \\'MATCHES.UPDATE\\' | translate }}      }      @else {        {{ \\'MATCHES.SUBMIT\\' | translate }}      }        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'MatchCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchMappingFirebase.html":{"url":"injectables/MatchMappingFirebase.html","title":"injectable - MatchMappingFirebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatchMappingFirebase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/match-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/match-mapping-firebase.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/match-mapping-firebase.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Match\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/match-mapping-firebase.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Match\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/match-mapping-firebase.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Match\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/match-mapping-firebase.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/match-mapping-firebase.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Match\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Match)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/match-mapping-firebase.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Match\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseMatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/match-mapping-firebase.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseMatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/match-mapping-firebase.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { initializeApp } from \"firebase/app\";\nimport { Firestore, getFirestore, doc } from \"firebase/firestore\";\nimport { FirebaseMatch } from \"../../models/firebase-matches.model\";\nimport { Match } from \"../../models/matches.model\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchMappingFirebase implements IBaseMapping{\n  \n  private db: Firestore;\n  \n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig))\n  }\n  getPaginated(page: number, pageSize: number, total: number, data: ({ id: string } & FirebaseMatch)[]): Paginated {\n    return{\n      page,\n      pageSize,\n      pages: Math.ceil(total/pageSize),\n      data: data.map(item => this.getOne(item))\n    }\n  }\n  getOne(data: { id: string } & FirebaseMatch): Match {\n    return {\n      id: data.id,\n      day: data.day,\n      hour: data.hour,\n      result: data.result,\n      place: data.place,\n      status: data.status,\n      localTeamId: data.localTeamId?.id,\n      visitorTeamId: data.visitorTeamId?.id,\n      userId: data.userId?.id \n    };\n  }\n  getAdded(data: { id: string } & FirebaseMatch): Match {\n    return this.getOne(data)\n  }\n  getUpdated(data: { id: string } & FirebaseMatch): Match {\n    return this.getOne(data)\n  }\n  getDeleted(data: { id: string } & FirebaseMatch): Match {\n    return this.getOne(data)\n  }\n  setAdd(data: Match): FirebaseMatch {\n    let dataMapping:FirebaseMatch = {\n        day: data.day,\n        hour: data.hour,\n        result: data.result,\n        place: data.place,\n        status: data.status\n    };\n    if(data.localTeamId){\n        dataMapping.localTeamId = doc(this.db, 'teams', data.localTeamId || '')\n      }\n      \n    if(data.visitorTeamId){\n    dataMapping.visitorTeamId = doc(this.db, 'teams', data.visitorTeamId || '')\n    }\n\n    if(data.userId){\n      dataMapping.userId = doc(this.db, 'usuarios', data.userId || '')\n    }\n    return dataMapping;\n  }\n  setUpdate(data: Partial): FirebaseMatch {\n    const result: any = {};\n    if (data.day) result.day = data.day;\n    if (data.hour) result.hour = data.hour;\n    if (data.result) result.result = data.result;\n    if (data.place) result.place = data.place;\n    if (data.status) result.status = data.status;\n    if (data.localTeamId) result.localTeamId = doc(this.db, 'teams', data.localTeamId || '');\n    if (data.visitorTeamId) result.visitorTeamId = doc(this.db, 'teams', data.visitorTeamId || '');\n    if (data.userId) result.user = doc(this.db, 'usuarios', data.userId || '');\n    return result;\n  }\n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchMenuComponent.html":{"url":"components/MatchMenuComponent.html","title":"component - MatchMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MatchMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/match-menu/match-menu.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-menu\n            \n\n\n\n            \n                styleUrls\n                ./match-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./match-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compartirPartido\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentActionSheet\n                            \n                            \n                                verAlineaciones\n                            \n                            \n                                verEstadisticas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                match\n                            \n                            \n                                partidoId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(actionSheetCtrl: ActionSheetController, router: Router, matchSvc: MatchService, teamSvc: TeamService, translate: TranslateService, alertCtrl: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/match-menu/match-menu.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actionSheetCtrl\n                                                  \n                                                        \n                                                                    ActionSheetController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchSvc\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamSvc\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :         MatchWithTeams\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/match-menu/match-menu.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        partidoId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/match-menu/match-menu.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compartirPartido\n                        \n                    \n                \n            \n            \n                \n                        \n                    compartirPartido()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-menu/match-menu.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-menu/match-menu.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentActionSheet\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentActionSheet()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-menu/match-menu.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verAlineaciones\n                        \n                    \n                \n            \n            \n                \nverAlineaciones()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-menu/match-menu.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verEstadisticas\n                        \n                    \n                \n            \n            \n                \nverEstadisticas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/match-menu/match-menu.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActionSheetController } from '@ionic/angular';\nimport { Share } from '@capacitor/share';\nimport { Capacitor } from '@capacitor/core';\nimport { MatchService } from 'src/app/core/services/impl/match.service';\nimport { TeamService } from 'src/app/core/services/impl/team.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertController } from '@ionic/angular';\nimport { Match } from 'src/app/core/models/matches.model';\nimport { Team } from 'src/app/core/models/teams.model';\n\ninterface MatchWithTeams extends Match {\n  localTeam?: Team;\n  visitorTeam?: Team;\n}\n\n@Component({\n  selector: 'app-match-menu',\n  templateUrl: './match-menu.component.html',\n  styleUrls: ['./match-menu.component.scss'],\n})\nexport class MatchMenuComponent  implements OnInit {\n  @Input() partidoId!: string;\n  @Input() match!: MatchWithTeams;\n  constructor(\n    private actionSheetCtrl: ActionSheetController,\n    private router: Router,\n    private matchSvc: MatchService,\n    private teamSvc: TeamService,\n    private translate: TranslateService,\n    private alertCtrl: AlertController\n  ) {}\n  ngOnInit(): void {\n    \n  }\n\n  async presentActionSheet() {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'Opciones',\n      buttons: [\n        {\n          text: 'Ver Alineaciones',\n          icon: 'people-outline',\n          handler: () => {\n            this.verAlineaciones();\n          }\n        },\n        {\n          text: 'Ver Estadísticas',\n          icon: 'stats-chart-outline',\n          handler: () => {\n            this.verEstadisticas();\n          }\n        },\n        {\n          text: 'Compartir Partido', // recomendación 😉\n          icon: 'share-social-outline',\n          handler: () => {\n            this.compartirPartido();\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  verAlineaciones() {\n    // Aquí defines cómo mostrarlo, ejemplo: cambiar a otro componente, mostrar modal, etc.\n    this.router.navigate(['/lineups', this.partidoId])\n    console.log(this.partidoId!)\n  }\n\n  verEstadisticas() {\n    this.router.navigate(['/statistics', this.partidoId])\n    console.log(this.partidoId)\n  }\n\n  async compartirPartido() {\n    if (!this.match) return;\n  \n    const localTeamName = this.match.localTeam?.name || 'Equipo Local';\n    const visitorTeamName = this.match.visitorTeam?.name || 'Equipo Visitante';\n    const matchDay = this.match.day ? new Date(this.match.day).toLocaleDateString() : 'Fecha por confirmar';\n    const matchHour = this.match.hour ? new Date(`2000-01-01T${this.match.hour}`).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : 'Hora por confirmar';\n    const matchPlace = this.match.place || 'Lugar por confirmar';\n    const matchResult = this.match.result || 'Resultado pendiente';\n  \n    const shareText = `${localTeamName} vs ${visitorTeamName}\\n` +\n      `${this.translate.instant('MATCH.DATE')}: ${matchDay}\\n` +\n      `${this.translate.instant('MATCH.TIME')}: ${matchHour}\\n` +\n      `${this.translate.instant('MATCH.PLACE')}: ${matchPlace}\\n` +\n      `${this.translate.instant('MATCH.RESULT')}: ${matchResult}`;\n  \n    try {\n      if (Capacitor.isNativePlatform()) {\n        await Share.share({\n          title: `${localTeamName} vs ${visitorTeamName}`,\n          text: shareText,\n          dialogTitle: this.translate.instant('MATCH.SHARE_DIALOG_TITLE')\n        });\n      } else if (navigator.share) {\n        await navigator.share({\n          title: `${localTeamName} vs ${visitorTeamName}`,\n          text: shareText,\n          url: 'matches'\n        });\n      } else {\n        alert(shareText);\n      }\n    } catch (error) {\n      console.error('Error al compartir:', error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./match-menu.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'MatchMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/match.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IMatchRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/match.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IMatchRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { Match } from \"../../models/matches.model\";\nimport { IMatchRepository } from \"../../repositories/intefaces/match-repository.interface\";\nimport { MATCH_REPOSITORY_TOKEN } from \"../../repositories/repository.tokens\";\nimport { IMatchService } from \"../interfaces/match-service.interface\";\nimport { BaseService } from \"./base-service.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService extends BaseService implements IMatchService {\n  constructor(\n    @Inject(MATCH_REPOSITORY_TOKEN) repository: IMatchRepository\n  ) {\n    super(repository);\n  }\n\n  // Implementa métodos específicos si los hay\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchStatistics.html":{"url":"interfaces/MatchStatistics.html","title":"interface - MatchStatistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MatchStatistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/matchStatistics.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            matchId\n                                        \n                                \n                                \n                                        \n                                            stats\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stats:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface MatchStatistics extends Model {\n  matchId?: string;\n  userId?: string;\n  stats: {\n    name: string;\n    localValue: number | string;\n    visitorValue: number | string;\n  }[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchStatisticsMappingFirebase.html":{"url":"injectables/MatchStatisticsMappingFirebase.html","title":"injectable - MatchStatisticsMappingFirebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatchStatisticsMappingFirebase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MatchStatistics\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MatchStatistics\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MatchStatistics\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MatchStatistics\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: MatchStatistics)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MatchStatistics\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseMatchStatistics\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseMatchStatistics\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/matchStatistics-mapping-firebase.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { initializeApp } from \"firebase/app\";\nimport { Firestore, getFirestore, doc } from \"firebase/firestore\";\nimport { FirebaseMatchStatistics } from \"../../models/firebase-matchStatistics.model\";\nimport { MatchStatistics } from \"../../models/matchStatistics.model\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchStatisticsMappingFirebase implements IBaseMapping{\n  \n  private db: Firestore;\n  \n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig))\n  }\n  getPaginated(page: number, pageSize: number, total: number, data: ({ id: string } & FirebaseMatchStatistics)[]): Paginated {\n    return{\n      page,\n      pageSize,\n      pages: Math.ceil(total/pageSize),\n      data: data.map(item => this.getOne(item))\n    }\n  }\n  getOne(data: { id: string } & FirebaseMatchStatistics): MatchStatistics {\n    return {\n      id: data.id,\n      matchId: data.matchId?.id,\n      userId: data.userId?.id,\n      stats: data.stats\n    };\n  }\n  getAdded(data: { id: string } & FirebaseMatchStatistics): MatchStatistics {\n    return this.getOne(data)\n  }\n  getUpdated(data: { id: string } & FirebaseMatchStatistics): MatchStatistics {\n    return this.getOne(data)\n  }\n  getDeleted(data: { id: string } & FirebaseMatchStatistics): MatchStatistics {\n    return this.getOne(data)\n  }\n  setAdd(data: MatchStatistics): FirebaseMatchStatistics {\n    let dataMapping: FirebaseMatchStatistics = {\n      stats: data.stats || [] \n    };\n  \n    if (data.matchId) {\n      dataMapping.matchId = doc(this.db, 'matches', data.matchId || '');\n    }\n  \n    if (data.userId) {\n      dataMapping.userId = doc(this.db, 'usuarios', data.userId || '');\n    }\n  \n    return dataMapping;\n  }\n  setUpdate(data: Partial): FirebaseMatchStatistics {\n    const result: any = {};\n    if (data.stats) result.stats = data.stats;\n    if (data.matchId) result.matchId = data.matchId;\n    if (data.userId) result.user = doc(this.db, 'usuarios', data.userId || '');\n    return result;\n  }\n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchStatsService.html":{"url":"injectables/MatchStatsService.html","title":"injectable - MatchStatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatchStatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/matchStats.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IMatchStatsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/matchStats.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IMatchStatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { MatchStatistics } from \"../../models/matchStatistics.model\";\nimport { MATCH_REPOSITORY_TOKEN, MATCH_STATS_REPOSITORY_TOKEN } from \"../../repositories/repository.tokens\";\nimport { IMatchStatsService } from \"../interfaces/matchStatistics-service.interface\";\nimport { BaseService } from \"./base-service.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchStatsService extends BaseService implements IMatchStatsService {\n  constructor(\n    @Inject(MATCH_STATS_REPOSITORY_TOKEN) repository: IMatchStatsService\n  ) {\n    super(repository);\n  }\n\n  // Implementa métodos específicos si los hay\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchWithTeams.html":{"url":"interfaces/MatchWithTeams.html","title":"interface - MatchWithTeams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MatchWithTeams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/matches/matches.page.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Match\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            localTeam\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visitorTeam\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        localTeam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localTeam:         Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visitorTeam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visitorTeam:         Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, catchError, combineLatest, finalize, firstValueFrom, map, Observable, of, switchMap } from 'rxjs';\nimport { Match } from 'src/app/core/models/matches.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Team } from 'src/app/core/models/teams.model';\nimport { PLAYER_COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { MatchService } from 'src/app/core/services/impl/match.service';\nimport { TeamService } from 'src/app/core/services/impl/team.service';\nimport { CollectionChange, ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { LanguageService } from 'src/app/core/services/language.service';\nimport { MatchCreateComponent } from 'src/app/shared/components/match-create/match-create.component';\nimport { Share } from '@capacitor/share';\nimport { Capacitor } from '@capacitor/core';\nimport { UsersService } from 'src/app/core/services/impl/users.service';\n\ninterface MatchWithTeams extends Match {\n  localTeam?: Team;\n  visitorTeam?: Team;\n}\n\n@Component({\n  selector: 'app-matches',\n  templateUrl: './matches.page.html',\n  styleUrls: ['./matches.page.scss'],\n})\nexport class MatchesPage implements OnInit {\n  isLoading: boolean = false;\n  img: string|undefined = './../../../assets/img/imgCard2.jpg'\n  currentLang:string\n  _matches: BehaviorSubject = new BehaviorSubject([])\n  matches$: Observable = this._matches.asObservable()\n  isAdmin: boolean = false;\n  currentUserId: string = '';\n  private loadedIds: Set = new Set();\n\n\n  constructor(\n    private userSvc: UsersService,\n    private matchSvc: MatchService,\n    private teamSvc: TeamService,\n    private modalCtrl: ModalController,\n    private alertCtrl: AlertController,\n    private translate: TranslateService,\n    private languageService: LanguageService,\n    @Inject(PLAYER_COLLECTION_SUBSCRIPTION_TOKEN)\n    private matchSubs: ICollectionSubscription\n  ) {\n    this.currentLang = this.languageService.getStoredLanguage();\n   }\n\n  ngOnInit() {\n    this.getMatches()\n\n    this.userSvc.getCurrentUser().subscribe(user => {\n      this.isAdmin = user?.role === 'Admin';\n    });\n\n     // Revisa y actualiza estado de partidos cada minuto\n    setInterval(() => {\n      this.updateMatchStatuses();\n    }, 60 * 1000);\n\n    this.matchSubs.subscribe('matches').subscribe((change:\n          CollectionChange) => {\n              const currentLeague = [...this._matches.value];\n    \n              if ((!this.loadedIds.has(change.id) && change.type !== 'added')) {\n                return;\n              }\n    \n              switch(change.type){\n                case 'added':\n                case 'modified':\n                  const index = currentLeague.findIndex(p => p.id === change.id)\n                  if (index >= 0) {\n                    currentLeague[index] = change.data!;\n                  }\n                  break;\n                case 'removed':\n                  const removedIndex = currentLeague.findIndex(p => p.id === change.id)\n                  if (removedIndex >= 0) {\n                    currentLeague.splice(removedIndex, 1);\n                    this.loadedIds.delete(change.id);\n                  }\n                  break;\n              }\n    \n              this._matches.next(currentLeague)\n          });\n  }\n  \n\n  selectedMatch: any = null\n    page: number = 1;\n    pageSize:number = 25;\n    pages:number = 0;\n  \n    getMatches() {\n      this.page = 1;\n      this.matchSvc.getAll(this.page, this.pageSize).subscribe({\n        next: async (response: Paginated) => {\n          // Actualizar el registro de IDs cargados\n          response.data.forEach(match => this.loadedIds.add(match.id));\n          try {\n            const matchesWithTeams = await Promise.all(\n              response.data.map(async (match) => {\n                const [localTeam, visitorTeam] = await Promise.all([\n                  match.localTeamId ? firstValueFrom(this.teamSvc.getById(match.localTeamId)) : Promise.resolve(null),\n                  match.visitorTeamId ? firstValueFrom(this.teamSvc.getById(match.visitorTeamId)) : Promise.resolve(null)\n                ]);\n                return { ...match, localTeam: localTeam || undefined, visitorTeam: visitorTeam || undefined };\n              })\n            );\n            this._matches.next(matchesWithTeams);\n            this.page++;\n            this.pages = response.pages;\n          } catch (error) {\n            console.error('Error fetching team data:', error);\n          }\n        },\n        error: (err) => {\n          console.error('Error fetching matches:', err);\n        }\n      });\n    }\n    \n    getMoreMatches(notify: HTMLIonInfiniteScrollElement | null = null) {\n      this.matchSvc.getAll(this.page, this.pageSize).subscribe({\n        next: async (response: Paginated) => {\n          // Actualizar el registro de IDs cargados\n          response.data.forEach(match => this.loadedIds.add(match.id));\n          try {\n            const matchesWithTeams = await Promise.all(\n              response.data.map(async (match) => {\n                const [localTeam, visitorTeam] = await Promise.all([\n                  match.localTeamId ? firstValueFrom(this.teamSvc.getById(match.localTeamId)) : Promise.resolve(null),\n                  match.visitorTeamId ? firstValueFrom(this.teamSvc.getById(match.visitorTeamId)) : Promise.resolve(null)\n                ]);\n                return { ...match, localTeam: localTeam || undefined, visitorTeam: visitorTeam || undefined };\n              })\n            );\n            this._matches.next([...this._matches.value, ...matchesWithTeams]);\n            this.page++;\n            notify?.complete();\n          } catch (error) {\n            console.error('Error fetching additional team data:', error);\n            notify?.complete();\n          }\n        },\n        error: (err) => {\n          console.error('Error fetching additional matches:', err);\n          notify?.complete();\n        }\n      });\n    } \n    \n    async openMatch(match: any, index: number){\n        await this.presentModalMatch('edit', match)\n        this.selectedMatch\n      }\n    \n      private async presentModalMatch(mode:'new'|'edit', match:Match|undefined=undefined){\n        const modal = await this.modalCtrl.create({\n          component:MatchCreateComponent,\n          componentProps:(mode=='edit'?{\n            match: match\n          }:{})\n        });\n        modal.onDidDismiss().then(async (response)=>{\n          const user = await firstValueFrom(this.userSvc.getCurrentUser());\n\n          let newMatch : any = null\n            newMatch = {\n              day: response.data.day,\n              hour: response.data.hour,\n              result: response.data.result,\n              place: response.data.place,\n              status: \"Por jugar\",\n              localTeamId: response.data.localTeamId,\n              visitorTeamId: response.data.visitorTeamId,\n              userId: user?.id\n            }\n\n            let editMatch : any = null\n            editMatch = {\n              day: response.data.day,\n              hour: response.data.hour,\n              result: response.data.result,\n              place: response.data.place,\n              status: response.data.status,\n              localTeamId: response.data.localTeamId,\n              visitorTeamId: response.data.visitorTeamId,\n              userId: response.data.userId\n            }\n            \n          switch (response.role) {\n            case 'new':\n              this.matchSvc.add(newMatch).subscribe({\n                next:res=>{\n                  this.getMatches();\n                },\n                error:err=>{}\n              });\n              break;\n            case 'edit':\n              this.matchSvc.update(match!.id, editMatch).subscribe({\n                next:res=>{\n                  this.getMatches();\n                },\n                error:err=>{}\n              });\n              break;\n            default:\n              break;\n          }\n        });\n        await modal.present();\n      }\n    \n      async onAddMatch(){\n        await this.presentModalMatch('new');\n      }\n\n\n    async onDeleteMatch(match: Match) {\n      const alert = await this.alertCtrl.create({\n        header: await this.translate.get('MATCHES.MESSAGES.DELETE_CONFIRM').toPromise(),\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel',\n          },\n          {\n            text: 'OK',\n            role: 'yes',\n            handler: () => {\n              this.matchSvc.delete(match.id).subscribe({\n                next: response => {\n                  this.getMatches();\n                },\n                error: err => {}\n              });\n            }\n          }\n        ]\n      });\n  \n      await alert.present();\n    }\n\n    private updateMatchStatuses() {\n  const now = new Date();\n\n  const updatedMatches = this._matches.value.map((match) => {\n    if (!match.day || !match.hour || !match.status || !match.id) return match;\n\n    const dayParts = match.day.toString().split('/');\n    const hourParts = match.hour.toString().split(':');\n    if (dayParts.length !== 3 || hourParts.length !== 2) return match;\n\n    const [day, month, year] = dayParts.map(Number);\n    const [hour, minute] = hourParts.map(Number);\n    if ([day, month, year, hour, minute].some(isNaN)) return match;\n\n    const matchDate = new Date(year, month - 1, day, hour, minute);\n    const endDate = new Date(matchDate.getTime() + 2 * 60 * 60 * 1000); // +2 horas\n\n    let newStatus = match.status;\n    let newResult = match.result;\n\n    if (now >= matchDate && now = endDate && match.status !== 'Finalizado') {\n      newStatus = 'Finalizado';\n      // Generar resultado aleatorio al finalizar\n      const localScore = Math.floor(Math.random() * 5); // 0-4\n      const visitorScore = Math.floor(Math.random() * 5); // 0-4\n      newResult = `${localScore} - ${visitorScore}`;\n    }\n\n    if (newStatus !== match.status) {\n      const updated: any = {\n        day: match.day,\n        hour: match.hour,\n        result: newResult,\n        place: match.place,\n        status: newStatus,\n        localTeamId: match.localTeamId,\n        visitorTeamId: match.visitorTeamId\n      };\n\n      this.matchSvc.update(match.id, updated).subscribe({\n        next: () => {\n          console.log(`Status actualizado a \"${newStatus}\" para ${match.id}`);\n          window.location.reload();\n        },\n        error: (err) => console.error('Error actualizando status', err)\n      });\n\n      return updated;\n    }\n\n    return match;\n  });\n\n  this._matches.next(updatedMatches);\n}\n\n    \n    \n\n    async shareMatch(match: MatchWithTeams) {\n      try {\n        // Formateamos la información del partido de manera atractiva\n        const localTeamName = match.localTeam?.name || 'Equipo Local';\n        const visitorTeamName = match.visitorTeam?.name || 'Equipo Visitante';\n        const matchDay = match.day ? new Date(match.day).toLocaleDateString(this.currentLang) : 'Fecha por confirmar';\n        const matchHour = match.hour ? new Date(`2000-01-01T${match.hour}`).toLocaleTimeString(this.currentLang, { hour: '2-digit', minute: '2-digit' }) : 'Hora por confirmar';\n        const matchPlace = match.place || 'Lugar por confirmar';\n        const matchResult = match.result || 'Resultado pendiente';\n        \n        // Crear el texto para compartir\n        const shareText = `${localTeamName} vs ${visitorTeamName}\\n` +\n                          `${this.translate.instant('MATCH.DATE')}: ${matchDay}\\n` +\n                          `${this.translate.instant('MATCH.TIME')}: ${matchHour}\\n` +\n                          `${this.translate.instant('MATCH.PLACE')}: ${matchPlace}\\n` +\n                          `${this.translate.instant('MATCH.RESULT')}: ${matchResult}`;\n        \n        // Usar Capacitor Share si estamos en un dispositivo nativo\n        if (Capacitor.isNativePlatform()) {\n          await Share.share({\n            title: `${localTeamName} vs ${visitorTeamName}`,\n            text: shareText,\n            dialogTitle: this.translate.instant('MATCH.SHARE_DIALOG_TITLE')\n          });\n        } else {\n          // Fallback para navegadores web usando la API Web Share si está disponible\n          if (navigator.share) {\n            await navigator.share({\n              title: `${localTeamName} vs ${visitorTeamName}`,\n              text: shareText,\n              url: 'matches'\n            });\n          } else {\n            // Si no hay API de compartir, mostramos un simple alert\n            const alert = await this.alertCtrl.create({\n              header: this.translate.instant('MATCH.SHARE_NOT_AVAILABLE'),\n              message: shareText,\n              buttons: ['OK']\n            });\n            await alert.present();\n          }\n        }\n      } catch (error) {\n        console.error('Error sharing match:', error);\n        // Opcionalmente, mostrar un mensaje de error al usuario\n      }\n    }\n\n    onMatchDropped(event: { fromIndex: number, toIndex: number }) {\n      const matchesArray = [...this._matches.value];\n    \n      if (event.fromIndex !== event.toIndex) {\n        // Remueve el equipo de su posición original\n        const movedItem = matchesArray.splice(event.fromIndex, 1)[0];\n    \n        // Inserta el equipo en la nueva posición\n        matchesArray.splice(event.toIndex, 0, movedItem);\n    \n        // Actualiza el BehaviorSubject con la nueva lista ordenada\n        this._matches.next(matchesArray);\n      }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchWithTeams-1.html":{"url":"interfaces/MatchWithTeams-1.html","title":"interface - MatchWithTeams-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MatchWithTeams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/statistics/statistics.page.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Match\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            localTeam\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visitorTeam\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        localTeam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localTeam:         Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visitorTeam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visitorTeam:         Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Match } from 'src/app/core/models/matches.model';\nimport { MatchStatistics } from 'src/app/core/models/matchStatistics.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Team } from 'src/app/core/models/teams.model';\nimport { MatchService } from 'src/app/core/services/impl/match.service';\nimport { MatchStatsService } from 'src/app/core/services/impl/matchStats.service';\nimport { TeamService } from 'src/app/core/services/impl/team.service';\nimport { LanguageService } from 'src/app/core/services/language.service';\n\ninterface MatchWithTeams extends Match {\n  localTeam?: Team;\n  visitorTeam?: Team;\n}\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.page.html',\n  styleUrls: ['./statistics.page.scss'],\n})\nexport class StatisticsPage implements OnInit {\n  matchId!: string;\n  match!: MatchWithTeams;\n  localGoals!: string;\n  visitorGoals!: string;\n  localTeam!: Team | null;\n  visitorTeam!: Team | null;\n  generatedStats!: any;\n  loadingStats = true;\n  errorMessage: string | null = null;\n  currentLang: string\n\n  stats = [\n    { name: 'Tiros', local: 18, visitor: 13 },\n    { name: 'Tiros a puerta', local: 10, visitor: 3 },\n    { name: 'Posesión', local: '61%', visitor: '39%' },\n    { name: 'Pases', local: 545, visitor: 349 },\n    { name: 'Precisión de pases', local: '88%', visitor: '82%' },\n    { name: 'Faltas', local: 5, visitor: 12 },\n    { name: 'Tarjetas amarillas', local: 0, visitor: 2 },\n    { name: 'Tarjetas rojas', local: 0, visitor: 0 },\n    { name: 'Fueras de juego', local: 1, visitor: 4 },\n    { name: 'Saques de esquina', local: 4, visitor: 6 }\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private matchSvc: MatchService,\n    private teamSvc: TeamService,\n    private statsSvc: MatchStatsService,\n    private translate: TranslateService,\n    private languageService: LanguageService) {\n      this.currentLang = this.languageService.getStoredLanguage();\n    }\n\n  ngOnInit() {\n    this.matchId = this.route.snapshot.paramMap.get('id')!;\n    this.loadMatchData();\n  }\n\n  loadMatchData() {\n    this.loadingStats = true;\n    this.errorMessage = null;\n\n    this.matchSvc.getById(this.matchId).subscribe({\n      next: async (match) => {\n        try {\n          const [localTeamRaw, visitorTeamRaw] = await Promise.all([\n            match!.localTeamId ? firstValueFrom(this.teamSvc.getById(match!.localTeamId)) : Promise.resolve(undefined),\n            match!.visitorTeamId ? firstValueFrom(this.teamSvc.getById(match!.visitorTeamId)) : Promise.resolve(undefined)\n          ]);\n\n          // Asegurar que sean undefined si venían como null\n          const localTeam = localTeamRaw ?? undefined;\n          const visitorTeam = visitorTeamRaw ?? undefined;\n\n          this.match = {\n            ...(match as Match),\n            localTeam,\n            visitorTeam\n          };\n          \n          if (typeof this.match.result === 'string' && this.match.result.includes('-')) {\n            const [local, visitor] = this.match.result.split('-');\n            this.localGoals = local?.trim();\n            this.visitorGoals = visitor?.trim();\n          } else {\n            this.localGoals = '0';\n            this.visitorGoals = '0';\n          }\n          \n          this.loadTeams();\n          this.generateStatsBasedOnStatus();\n        } catch (error) {\n          console.error('Error fetching team data:', error);\n          this.errorMessage = 'Error al cargar los datos de los equipos.';\n          this.loadingStats = false;\n        }\n      },\n      error: (err) => {\n        console.error('Error fetching match:', err);\n        this.errorMessage = 'Error al cargar el partido.';\n        this.loadingStats = false;\n      }\n    });\n  }\n\n  generateStatsBasedOnStatus() {\n    if (!this.match || !this.match.status) {\n      this.loadingStats = false;\n      return;\n    }\n  \n    const baseStats = this.stats.map(stat => ({\n      name: stat.name,\n      localValue: 0,\n      visitorValue: 0,\n    }));\n  \n    const statsId = this.generatedStats?.id || this.match.id + '_stats';\n  \n    if (this.match.status.toLowerCase() === 'finalizado') {\n      // Verificamos si ya existen stats en Firebase\n      this.statsSvc.getAll().subscribe({\n        next: (allStatsResult: any[] | Paginated) => {\n          const statsArray = Array.isArray(allStatsResult)\n            ? allStatsResult\n            : allStatsResult.data ?? [];\n      \n          const existingStats = statsArray.find(s => s.matchId === this.match.id);\n      \n          if (existingStats) {\n            this.generatedStats = existingStats;\n          } else {\n            const newStats: any = {\n              matchId: this.match.id,\n              userId: '', // Si es vacío, considera no incluirlo\n              stats: this.stats.map(stat => ({\n                name: stat.name,\n                localValue: this.generateValue(stat.local),\n                visitorValue: this.generateValue(stat.visitor),\n              }))\n            };\n            \n            // Si userId está vacío, elimínalo para que no cause problemas\n            if (!newStats.userId) {\n              delete newStats.userId;\n            }\n            \n            // Validar que no haya propiedades con valores undefined\n            Object.keys(newStats).forEach(key => {\n              if (newStats[key] === undefined) {\n                delete newStats[key];\n              }\n            });\n      \n            this.statsSvc.add(newStats).subscribe({\n              next: () => {\n                this.generatedStats = newStats;\n              },\n              error: (err) => {\n                console.error('Error saving stats to Firebase:', err);\n                this.errorMessage = 'Error al guardar las estadísticas en Firebase.';\n              }\n            });\n          }\n      \n          this.loadingStats = false;\n        },\n        error: err => {\n          console.error('Error loading stats from Firebase:', err);\n          this.errorMessage = 'Error al cargar estadísticas desde Firebase.';\n          this.loadingStats = false;\n        }\n      });\n    } else if (this.match.status.toLowerCase() === 'por jugar') {\n      // Partido no ha comenzado\n      this.generatedStats = {\n        id: statsId,\n        matchId: this.match.id,\n        userId: '',\n        stats: baseStats\n      };\n      this.loadingStats = false;\n    } else {\n      // Jugando u otro estado, estadísticas generadas al vuelo\n      this.generatedStats = {\n        id: statsId,\n        matchId: this.match.id,\n        userId: '',\n        stats: this.stats.map(stat => ({\n          name: stat.name,\n          localValue: this.generateValue(stat.local),\n          visitorValue: this.generateValue(stat.visitor),\n        }))\n      };\n      this.loadingStats = false;\n    }\n  }\n  \n\n  generateValue(baseValue: number | string): number | string {\n    const base = typeof baseValue === 'string' && baseValue.includes('%')\n      ? parseFloat(baseValue.replace('%', ''))\n      : Number(baseValue);\n  \n    if (isNaN(base)) return 0;\n  \n    const variation = base * 0.3; // hasta un 30% de variación\n    let randomValue = base + (Math.random() * variation - variation / 2);\n  \n    if (typeof baseValue === 'string' && baseValue.includes('%')) {\n      return `${Math.max(0, Math.min(100, Number(randomValue.toFixed(0))))}%`;\n    }\n  \n    return Math.max(0, Math.round(randomValue));\n  }\n\n  loadTeams() {\n    // Verificar que `this.match` no es undefined antes de intentar acceder a sus propiedades\n    if (this.match) {\n      if (this.match.localTeamId) {\n        this.teamSvc.getById(this.match.localTeamId).subscribe({\n          next: (team) => this.localTeam = team!,\n          error: err => console.error('Error loading local team:', err)\n        });\n      }\n    \n      if (this.match.visitorTeamId) {\n        this.teamSvc.getById(this.match.visitorTeamId).subscribe({\n          next: (team) => this.visitorTeam = team!,\n          error: err => console.error('Error loading visitor team:', err)\n        });\n      }\n    }\n  }\n\n  isGreater(a: any, b: any): boolean {\n    const valA = this.parseStatValue(a);\n    const valB = this.parseStatValue(b);\n    return valA > valB;\n  }\n  \n  parseStatValue(value: any): number {\n    if (typeof value === 'string' && value.includes('%')) {\n      return parseFloat(value.replace('%', ''));\n    }\n    return typeof value === 'number' ? value : parseFloat(value) || 0;\n  }\n  \n  // Método para refrescar los datos\n  doRefresh(event: any) {\n    this.loadMatchData();\n    setTimeout(() => {\n      event.target.complete();\n    }, 1000);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchWithTeams-2.html":{"url":"interfaces/MatchWithTeams-2.html","title":"interface - MatchWithTeams-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MatchWithTeams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/match-menu/match-menu.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Match\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            localTeam\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visitorTeam\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        localTeam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localTeam:         Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visitorTeam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visitorTeam:         Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActionSheetController } from '@ionic/angular';\nimport { Share } from '@capacitor/share';\nimport { Capacitor } from '@capacitor/core';\nimport { MatchService } from 'src/app/core/services/impl/match.service';\nimport { TeamService } from 'src/app/core/services/impl/team.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertController } from '@ionic/angular';\nimport { Match } from 'src/app/core/models/matches.model';\nimport { Team } from 'src/app/core/models/teams.model';\n\ninterface MatchWithTeams extends Match {\n  localTeam?: Team;\n  visitorTeam?: Team;\n}\n\n@Component({\n  selector: 'app-match-menu',\n  templateUrl: './match-menu.component.html',\n  styleUrls: ['./match-menu.component.scss'],\n})\nexport class MatchMenuComponent  implements OnInit {\n  @Input() partidoId!: string;\n  @Input() match!: MatchWithTeams;\n  constructor(\n    private actionSheetCtrl: ActionSheetController,\n    private router: Router,\n    private matchSvc: MatchService,\n    private teamSvc: TeamService,\n    private translate: TranslateService,\n    private alertCtrl: AlertController\n  ) {}\n  ngOnInit(): void {\n    \n  }\n\n  async presentActionSheet() {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'Opciones',\n      buttons: [\n        {\n          text: 'Ver Alineaciones',\n          icon: 'people-outline',\n          handler: () => {\n            this.verAlineaciones();\n          }\n        },\n        {\n          text: 'Ver Estadísticas',\n          icon: 'stats-chart-outline',\n          handler: () => {\n            this.verEstadisticas();\n          }\n        },\n        {\n          text: 'Compartir Partido', // recomendación 😉\n          icon: 'share-social-outline',\n          handler: () => {\n            this.compartirPartido();\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  verAlineaciones() {\n    // Aquí defines cómo mostrarlo, ejemplo: cambiar a otro componente, mostrar modal, etc.\n    this.router.navigate(['/lineups', this.partidoId])\n    console.log(this.partidoId!)\n  }\n\n  verEstadisticas() {\n    this.router.navigate(['/statistics', this.partidoId])\n    console.log(this.partidoId)\n  }\n\n  async compartirPartido() {\n    if (!this.match) return;\n  \n    const localTeamName = this.match.localTeam?.name || 'Equipo Local';\n    const visitorTeamName = this.match.visitorTeam?.name || 'Equipo Visitante';\n    const matchDay = this.match.day ? new Date(this.match.day).toLocaleDateString() : 'Fecha por confirmar';\n    const matchHour = this.match.hour ? new Date(`2000-01-01T${this.match.hour}`).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : 'Hora por confirmar';\n    const matchPlace = this.match.place || 'Lugar por confirmar';\n    const matchResult = this.match.result || 'Resultado pendiente';\n  \n    const shareText = `${localTeamName} vs ${visitorTeamName}\\n` +\n      `${this.translate.instant('MATCH.DATE')}: ${matchDay}\\n` +\n      `${this.translate.instant('MATCH.TIME')}: ${matchHour}\\n` +\n      `${this.translate.instant('MATCH.PLACE')}: ${matchPlace}\\n` +\n      `${this.translate.instant('MATCH.RESULT')}: ${matchResult}`;\n  \n    try {\n      if (Capacitor.isNativePlatform()) {\n        await Share.share({\n          title: `${localTeamName} vs ${visitorTeamName}`,\n          text: shareText,\n          dialogTitle: this.translate.instant('MATCH.SHARE_DIALOG_TITLE')\n        });\n      } else if (navigator.share) {\n        await navigator.share({\n          title: `${localTeamName} vs ${visitorTeamName}`,\n          text: shareText,\n          url: 'matches'\n        });\n      } else {\n        alert(shareText);\n      }\n    } catch (error) {\n      console.error('Error al compartir:', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchesPageModule.html":{"url":"modules/MatchesPageModule.html","title":"module - MatchesPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchesPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchesPageModule\n\n\n\ncluster_MatchesPageModule_declarations\n\n\n\ncluster_MatchesPageModule_imports\n\n\n\n\nMatchesPage\n\nMatchesPage\n\n\n\nMatchesPageModule\n\nMatchesPageModule\n\nMatchesPageModule -->\n\nMatchesPage->MatchesPageModule\n\n\n\n\n\nMatchesPageRoutingModule\n\nMatchesPageRoutingModule\n\nMatchesPageModule -->\n\nMatchesPageRoutingModule->MatchesPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchesPageModule -->\n\nSharedModule->MatchesPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/matches/matches.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatchesPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MatchesPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MatchesPageRoutingModule } from './matches-routing.module';\n\nimport { MatchesPage } from './matches.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    MatchesPageRoutingModule,\n    TranslateModule.forChild()],\n  declarations: [MatchesPage]\n})\nexport class MatchesPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchesPageRoutingModule.html":{"url":"modules/MatchesPageRoutingModule.html","title":"module - MatchesPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchesPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/matches/matches-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MatchesPage } from './matches.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MatchesPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaRaw.html":{"url":"interfaces/MediaRaw.html","title":"interface - MediaRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiMedia\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMedia\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { League } from \"../../models/leagues.model\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\nexport interface MediaRaw{\n  data: StrapiMedia\n}\n\nexport interface LeagueRaw{\n  data: Data\n  meta: Meta\n}\n\nexport interface Data{\n  id: number\n  attributes: LeagueAttributes\n}\n\nexport interface LeagueData{\n  data: LeagueAttributes\n}\n\nexport interface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: League):LeagueData {\n      return {\n          data:{\n              name:data.name\n          }\n      };\n  }\n  setUpdate(data: League):LeagueData {\n      let toReturn:LeagueData = {\n          data:{\n              name:\"\",\n          }\n      };  \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': toReturn.data['name']=data[key];\n              break;\n              default:\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | LeagueRaw): League {\n      const isLeagueRaw = (data: Data | LeagueRaw): data is LeagueRaw => 'meta' in data;\n      \n      const attributes = isLeagueRaw(data) ? data.data.attributes : data.attributes;\n      const id = isLeagueRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name\n      };\n  }\n  getAdded(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaRaw-1.html":{"url":"interfaces/MediaRaw-1.html","title":"interface - MediaRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiMedia\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMedia\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaRaw-2.html":{"url":"interfaces/MediaRaw-2.html","title":"interface - MediaRaw-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiMedia\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMedia\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaRaw-3.html":{"url":"interfaces/MediaRaw-3.html","title":"interface - MediaRaw-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiMedia\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMedia\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Medium.html":{"url":"interfaces/Medium.html","title":"interface - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Medium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta.html":{"url":"interfaces/Meta.html","title":"interface - Meta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/league-mapping-strapi.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { League } from \"../../models/leagues.model\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\nexport interface MediaRaw{\n  data: StrapiMedia\n}\n\nexport interface LeagueRaw{\n  data: Data\n  meta: Meta\n}\n\nexport interface Data{\n  id: number\n  attributes: LeagueAttributes\n}\n\nexport interface LeagueData{\n  data: LeagueAttributes\n}\n\nexport interface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeagueMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: League):LeagueData {\n      return {\n          data:{\n              name:data.name\n          }\n      };\n  }\n  setUpdate(data: League):LeagueData {\n      let toReturn:LeagueData = {\n          data:{\n              name:\"\",\n          }\n      };  \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': toReturn.data['name']=data[key];\n              break;\n              default:\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | LeagueRaw): League {\n      const isLeagueRaw = (data: Data | LeagueRaw): data is LeagueRaw => 'meta' in data;\n      \n      const attributes = isLeagueRaw(data) ? data.data.attributes : data.attributes;\n      const id = isLeagueRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name\n      };\n  }\n  getAdded(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: LeagueRaw):League {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta-1.html":{"url":"interfaces/Meta-1.html","title":"interface - Meta-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta-2.html":{"url":"interfaces/Meta-2.html","title":"interface - Meta-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=league,teams,team,players`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta-3.html":{"url":"interfaces/Meta-3.html","title":"interface - Meta-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta-4.html":{"url":"interfaces/Meta-4.html","title":"interface - Meta-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/base.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Model{\n    id:string,\n    createdAt?:string,\n    updatedAt?:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/paginated.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated{\n    data:T[];\n    page:number;\n    pages:number;\n    pageSize:number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw.html":{"url":"interfaces/PaginatedRaw.html","title":"interface - PaginatedRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/json-server-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\nexport interface PaginatedRaw {\n  first: number\n  prev: number|null\n  next: number|null\n  last: number\n  pages: number\n  items: number\n  data: T[]\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonServerRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(AUTH_TOKEN) auth: IAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `${k}_like=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}/?_page=${page}&_per_page=${pageSize}&${search}`)\n        .pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.pages, res.data);\n        }));\n    }\n    else{\n      return this.http.get(\n        `${this.apiUrl}/${this.resource}?&${search}`)\n        .pipe(map(res=>{\n          return res.map((elem:any)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n    \n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity)).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.patch(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity)).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw-1.html":{"url":"interfaces/PaginatedRaw-1.html","title":"interface - PaginatedRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Data[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=league,teams,team,players`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=league,teams,team,players`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PasswordTogglePipe.html":{"url":"pipes/PasswordTogglePipe.html","title":"pipe - PasswordTogglePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PasswordTogglePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/password-toggle/password-toggle.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        passwordToggle\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(isPasswordVisible: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/password-toggle/password-toggle.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isPasswordVisible\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'passwordToggle'\n})\nexport class PasswordTogglePipe implements PipeTransform {\n  transform(isPasswordVisible: boolean): string {\n    return isPasswordVisible ? 'text' : 'password';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersonAttributes.html":{"url":"interfaces/PersonAttributes.html","title":"interface - PersonAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersonAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            birthdate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            publishedAt\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     MediaRaw | number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaRaw | number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publishedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publishedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     UserRaw | number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRaw | number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersonData.html":{"url":"interfaces/PersonData.html","title":"interface - PersonData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersonData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         PersonAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersonRaw.html":{"url":"interfaces/PersonRaw.html","title":"interface - PersonRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersonRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para seleccionar y gestionar imágenes\nImplementa ControlValueAccessor para integrarse con formularios reactivos de Angular\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Cambia la imagen actual y propaga el cambio\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva URL de la imagen\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de selección de imagen\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Limpia los recursos al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Maneja el evento de cambio de imagen desde un input file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento del DOM\n\n                                            \n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Elemento input file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Elimina la imagen actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento del DOM\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Establece el valor del componente desde el formulario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor a establecer (URL de la imagen)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:25\n                        \n                    \n\n            \n                \n                    Subject que mantiene el valor actual de la imagen\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:31\n                        \n                    \n\n            \n                \n                    Indica si hay una imagen seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:29\n                        \n                    \n\n            \n                \n                    Indica si el componente está deshabilitado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:27\n                        \n                    \n\n            \n                \n                    Observable público para la imagen seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:44\n                        \n                    \n\n            \n                \n                    Función que propaga los cambios al formulario padre\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n};\n\n/**\n * Componente para seleccionar y gestionar imágenes\n * Implementa ControlValueAccessor para integrarse con formularios reactivos de Angular\n */\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers:[PICTURE_SELECTABLE_VALUE_ACCESSOR]\n})\nexport class PictureSelectableComponent  implements OnInit, ControlValueAccessor, OnDestroy {\n\n  /** Subject que mantiene el valor actual de la imagen */\n  private _picture = new BehaviorSubject(\"\");\n  /** Observable público para la imagen seleccionada */\n  public picture$ = this._picture.asObservable();\n  /** Indica si el componente está deshabilitado */\n  isDisabled:boolean = false;\n  /** Indica si hay una imagen seleccionada */\n  hasValue:boolean = false;\n  constructor(\n    private pictureModal:ModalController\n  ) { }\n\n  /** Limpia los recursos al destruir el componente */\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  ngOnInit() {}\n\n  /** Función que propaga los cambios al formulario padre */\n  propagateChange = (obj: any) => {\n  }\n\n  /**\n   * Establece el valor del componente desde el formulario\n   * @param obj Valor a establecer (URL de la imagen)\n   */\n  writeValue(obj: any): void {\n    if(obj){\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   * Cambia la imagen actual y propaga el cambio\n   * @param picture Nueva URL de la imagen\n   */\n  changePicture(picture:string){\n    this.hasValue = picture!='';\n    this._picture.next(picture);\n    this.propagateChange(picture);\n  }\n\n  /**\n   * Maneja el evento de cambio de imagen desde un input file\n   * @param event Evento del DOM\n   * @param fileLoader Elemento input file\n   */\n  onChangePicture(event:Event, fileLoader:HTMLInputElement){\n    event.stopPropagation();\n    fileLoader.onchange = ()=>{\n      if(fileLoader.files && fileLoader.files?.length>0){\n        var file = fileLoader.files[0];\n        var reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string);\n        };\n        reader.onerror = (error) =>{\n          console.log(error);\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n    fileLoader.click();\n  }\n\n  /**\n   * Elimina la imagen actual\n   * @param event Evento del DOM\n   */\n  onDeletePicture(event:Event){\n    event.stopPropagation();\n    this.changePicture('');\n  }\n\n  /** Cierra el modal de selección de imagen */\n  close(){\n    this.pictureModal?.dismiss();\n  }\n\n}\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            \n              \n            \n          \n        \n        \n            \n        \n      \n    \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n      \n  \n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture {\n    position: relative; /* \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player.html":{"url":"interfaces/Player.html","title":"interface - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/players.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthdate\n                                        \n                                \n                                \n                                        \n                                            dorsal\n                                        \n                                \n                                \n                                        \n                                            firstSurname\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nationality\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            secondSurname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            team\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthdate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dorsal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dorsal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSurname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nationality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nationality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondSurname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Player extends Model{\n  name: string;\n  firstSurname: string;\n  secondSurname?: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team?: string;\n  picture?:{\n    url: string | undefined,\n    large: string | undefined,\n    medium: string | undefined,\n    small: string | undefined,\n    thumbnail: string | undefined,\n  };\n  userId?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerAttributes.html":{"url":"interfaces/PlayerAttributes.html","title":"interface - PlayerAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthdate\n                                        \n                                \n                                \n                                        \n                                            dorsal\n                                        \n                                \n                                \n                                        \n                                            firstSurname\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nationality\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            secondSurname\n                                        \n                                \n                                \n                                        \n                                            team\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthdate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dorsal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dorsal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSurname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nationality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nationality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondSurname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team:     TeamRaw | number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TeamRaw | number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerCreateModalComponent.html":{"url":"components/PlayerCreateModalComponent.html","title":"component - PlayerCreateModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerCreateModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/player-create-modal/player-create-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player-create-modal\n            \n\n\n\n            \n                styleUrls\n                ./player-create-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-create-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                getBirthdate\n                            \n                            \n                                isDatePickerOpen\n                            \n                            \n                                isMobile\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChange\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDatePicker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                player\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    player\n                                \n                                \n                                    name\n                                \n                                \n                                    firstSurname\n                                \n                                \n                                    secondSurname\n                                \n                                \n                                    nationality\n                                \n                                \n                                    dorsal\n                                \n                                \n                                    birthdate\n                                \n                                \n                                    position\n                                \n                                \n                                    team\n                                \n                                \n                                    picture\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        player\n                    \n                \n                \n                    \n                        Type :         Player\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDateChange\n                        \n                    \n                \n            \n            \n                \nonDateChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDatePicker\n                        \n                    \n                \n            \n            \n                \nopenDatePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBirthdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDatePickerOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        player\n                    \n                \n\n\n                \n                    \n                        setplayer(_player: Player)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _player\n                                                    \n                                                            \n                                                                            Player\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:74\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstSurname\n                    \n                \n\n                \n                    \n                        getfirstSurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secondSurname\n                    \n                \n\n                \n                    \n                        getsecondSurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nationality\n                    \n                \n\n                \n                    \n                        getnationality()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dorsal\n                    \n                \n\n                \n                    \n                        getdorsal()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        birthdate\n                    \n                \n\n                \n                    \n                        getbirthdate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n\n                \n                    \n                        getposition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        team\n                    \n                \n\n                \n                    \n                        getteam()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        picture\n                    \n                \n\n                \n                    \n                        getpicture()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/player-create-modal/player-create-modal.component.ts:106\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { DatePipe } from '@angular/common';import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { Player } from 'src/app/core/models/players.model';\nimport { __param } from 'tslib';\n\n\n@Component({\n  selector: 'app-player-create-modal',\n  templateUrl: './player-create-modal.component.html',\n  styleUrls: ['./player-create-modal.component.scss'],\n})\nexport class PlayerCreateModalComponent  implements OnInit {\n  getBirthdate: FormControl;\n  formGroup:FormGroup;\n  mode:'new'|'edit' = 'new';\n  isMobile: boolean = false;\n  isDatePickerOpen = false;\n\n\n\n  @Input() set player(_player:Player){\n    if(_player && _player.id)\n      this.mode = 'edit';\n    \n    this.formGroup.controls['name'].setValue(_player.name);\n    this.formGroup.controls['firstSurname'].setValue(_player.firstSurname)\n    this.formGroup.controls['secondSurname'].setValue(_player.secondSurname);\n    this.formGroup.controls['nationality'].setValue(_player.nationality)\n    this.formGroup.controls['dorsal'].setValue(_player.dorsal);\n    this.formGroup.controls['birthdate'].setValue(_player.birthdate)\n    this.formGroup.controls['position'].setValue(_player.position);\n    this.formGroup.controls['team'].setValue(_player.team)\n    this.formGroup.controls['picture'].setValue(_player.picture?.url)\n  }\n\n  constructor(\n    private fb:FormBuilder,\n    private modalCtrl:ModalController,\n    private platform: Platform,\n    \n  ) { \n    this.getBirthdate = new FormControl('');\n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.formGroup = this.fb.group({\n      name:['', [Validators.required, Validators.minLength(2)]],\n      firstSurname:['', [Validators.required, Validators.minLength(2)]],\n      secondSurname:['', [Validators.required, Validators.minLength(2)]],\n      nationality:['', [Validators.required, Validators.minLength(3)]],\n      dorsal:['', [Validators.pattern(/^\\d+$/)]],\n      birthdate:['', [Validators.required]],\n      position:['', [Validators.required, Validators.minLength(2)]],\n      team:[null, [Validators.required]],\n      picture:['']\n    });\n  }\n  \n  openDatePicker() {\n    this.isDatePickerOpen = true;\n  }\n\n  onDateChange(event: any) {\n    const rawDate = new Date(event.detail.value); // Convierte el valor recibido a un objeto Date\n\n  // Si prefieres 'dd-MM-yyyy'\n  const formattedDate = `${rawDate.getDate().toString().padStart(2, '0')}-${(rawDate.getMonth() + 1).toString().padStart(2, '0')}-${rawDate.getFullYear()}`;\n\n  this.birthdate.setValue(formattedDate); // Asigna el valor formateado al control de formulario\n  this.isDatePickerOpen = false; // Cierra el modal del date picker\n  }\n\n  ngOnInit() {}\n\n  get name(){\n    return this.formGroup.controls['name'];\n  }\n\n  get firstSurname(){\n    return this.formGroup.controls['firstSurname']\n  }\n\n  get secondSurname(){\n    return this.formGroup.controls['secondSurname']\n  }\n\n  get nationality(){\n    return this.formGroup.controls['nationality']\n  }\n\n  get dorsal(){\n    return this.formGroup.controls['dorsal']\n  }\n\n  get birthdate(){\n    return this.formGroup.controls['birthdate']\n  }\n\n  get position(){\n    return this.formGroup.controls['position']\n  }\n\n  get team(){\n    return this.formGroup.controls['team']\n  }\n\n  get picture(){\n    return this.formGroup.controls['picture']\n  }\n  \n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n  \n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        dirtyValues[key] = control.value;\n      }\n    });\n  \n    return dirtyValues;\n  }\n\n  onSubmit(){\n    if (this.formGroup.valid) {\n      this.modalCtrl.dismiss(\n          (this.mode=='new'?\n            this.formGroup.value:\n            this.getDirtyValues(this.formGroup)), this.mode\n      );\n    } else {\n      console.log('Formulario inválido');\n    }\n\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n\n\n    \n\n    \n        \n  \n  \n    @if (mode=='edit') {\n      {{ 'PLAYERS.EDIT' | translate }}\n    }\n    @else {\n      {{ 'PLAYERS.NEW' | translate }}\n    }\n  \n \n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n  \n  \n  \n    \n  \n  \n    {{ 'PLAYERS.ERRORS.NAME_REQUIRED' | translate }}\n    {{ 'PLAYERS.ERRORS.NAME_MIN_LENGTH' | translate }}\n  \n\n  \n  \n    \n  \n  \n    {{ 'PLAYERS.ERRORS.SURNAME_REQUIRED' | translate }}\n    {{ 'PLAYERS.ERRORS.SURNAME_MIN_LENGTH' | translate }}\n  \n\n  \n    \n  \n  \n    {{ 'PLAYERS.ERRORS.SURNAME_REQUIRED' | translate }}\n    {{ 'PLAYERS.ERRORS.SURNAME_MIN_LENGTH' | translate }}\n  \n\n  \n  \n    \n  \n  \n    {{ 'PLAYERS.ERRORS.NATIONALITY_REQUIRED' | translate }}\n    {{ 'PLAYERS.ERRORS.NATIONALITY_INVALID' | translate }}\n  \n\n  \n  \n    \n  \n  \n    {{ 'PLAYERS.ERRORS.PATTERN' | translate }}\n  \n  \n  \n    \n    \n    {{ getBirthdate.value ? (getBirthdate.value | date:'dd-MM-yyyy') : 'PLAYERS.SELECT_DATE'|translate }}\n    \n   \n  \n    \n      \n        {{'PLAYERS.SELECT_DATE'|translate}}\n      \n    \n  \n    {{'PLAYERS.SELECT_DATE'|translate}}\n\n  \n    {{ 'PLAYERS.ERRORS.BIRTHDATE_REQUIRED' | translate }}\n  \n  \n  \n    {{ 'PLAYERS.POSITION' | translate }}\n    \n  \n  \n    {{ 'PLAYERS.TEAM' | translate }}\n      \n  \n  \n  \n    @if (mode=='edit') {\n      {{ 'PLAYERS.UPDATE' | translate }}\n    }\n    @else {\n      {{ 'PLAYERS.SUBMIT' | translate }}\n    }\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./player-create-modal.component.scss\n                \n                ion-content {\n  --background: none;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  --padding-top: 16px;\n  --padding-bottom: 16px;\n  --min-height: 100%;\n}\n\nion-toolbar {\n  --background: #355e38;\n  --color: white;\n  padding: 10px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nion-toolbar ion-title {\n  font-size: 18px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: white;\n  margin: 0;\n  text-align: center;\n}\n\nion-toolbar ion-icon {\n  font-size: 24px;\n  color: white;\n}\n\nion-buttons {\n  display: flex;\n  justify-content: flex-end;\n}\n\nion-button {\n  --background: transparent;\n  --border-radius: 50%;\n  --color: white;\n}\n\nion-button:hover {\n  --background: rgba(255, 255, 255, 0.1);\n}\n\n/* Modal form */\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 20px 16px;\n}\n\nion-item {\n  --background: transparent;\n  --border-color: #ccc;\n}\n\nion-input {\n  --padding-start: 10px;\n  --padding-end: 10px;\n}\n\nion-input label {\n  font-size: 14px;\n  font-weight: 500;\n}\n\nion-text {\n  font-size: 12px;\n  color: #ff3b30;\n  margin-top: -10px;\n}\n\n/* Responsive */\n@media (max-width: 600px) {\n  ion-toolbar {\n    padding: 8px 12px;\n  }\n\n  ion-title {\n    font-size: 16px;\n  }\n\n  ion-button {\n    --border-radius: 50%;\n  }\n\n  form {\n    padding: 10px 12px;\n  }\n}\n\n/* Custom button */\nion-button[type=\"submit\"] {\n  background: #28a745;\n  color: white;\n  font-weight: bold;\n  margin-top: 15px;\n  --border-radius: 6px;\n}\n\nion-button[type=\"submit\"]:disabled {\n  background: #ccc;\n}\n\nion-button[type=\"submit\"]:not(:disabled):hover {\n  background: #218838;\n}\n\n/* Modal content */\n.modal-content {\n  background: white;\n  padding: 16px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n\n/* Adjust form labels for better spacing */\nion-item ion-label {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n}\n\n/* Estilo del botón de fecha */\n.date-button {\n  --background: none !important;\n  --color: rgba(255, 255, 255) !important;\n  --border-color: rgba(255, 255, 255, 0.1);\n  --border-radius: 8px;\n  --border-width: 1px;\n  --border-style: solid;\n  --box-shadow: none;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  --padding-top: 12px;\n  --padding-bottom: 12px;\n  margin: 8px auto; /* Centro horizontal */\n  width: 80%; /* Reduce el ancho para centrarlo mejor */\n  max-width: 300px; /* Ancho máximo para pantallas más grandes */\n  font-size: 14px;\n  text-align: center; /* Centro del texto */\n  display: flex; /* Usar flexbox */\n  align-items: center; /* Centra verticalmente el contenido */\n  justify-content: center; /* Centro horizontal */\n}\n\n.date-button ion-icon {\n  margin-left: 8px;\n  color: #ffffff;\n}\n\n/* Estilo del modal del calendario */\n.date-picker-modal {\n  --height: auto;\n  --width: 90%;\n  --max-width: 350px;\n  --border-radius: 8px;\n}\n\n.date-picker-modal ion-datetime {\n  --background: rgb(0, 0, 0, 0.1);\n  --ion-color-primary: #355e38;\n  --ion-color-primary-contrast: rgb(0, 0, 0);\n  border-radius: 8px;\n  padding: 16px;\n}\n\n.date-picker-modal ion-datetime::part(active) {\n  background: #355e38;\n  color: rgb(0, 0, 0);\n}\n\n.date-picker-modal ion-datetime::part(button-clear),\n.date-picker-modal ion-datetime::part(button-done) {\n  color: #355e38;\n}\n\n/* Ajustes responsive */\n@media (max-width: 600px) {\n  .date-picker-modal {\n    --width: 95%;\n  }\n}\n\n/* Adjust form labels for better spacing */\nion-item ion-label {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n}\n\n.picture-button {\n  --border-radius: 4px; /* Adjust this value to control corner roundness */\n  border-radius: var(--border-radius);\n}\n\n.picture-button input[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n}\n\n.scrollable-content {\n  height: 300px;\n  overflow-y: auto;\n  \n  /* Firefox */\n  scrollbar-width: auto;\n  scrollbar-color: #355e38 rgba(255, 255, 255, 0.1);\n  \n  /* Chrome/Safari/Edge */\n  &::-webkit-scrollbar {\n    width: 2px; /* Reducir el ancho */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #355e38;\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #589e5c;\n    border-radius: 4px;\n  }\n  \n  /* Hover state */\n  &:hover {\n    &::-webkit-scrollbar {\n      width: 4px; /* Ligeramente más ancho en hover */\n    }\n\n    &::-webkit-scrollbar-track {\n      background: #589e5c;\n      border-radius: 4px;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      background: #589e5c;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        @if (mode==\\'edit\\') {      {{ \\'PLAYERS.EDIT\\' | translate }}    }    @else {      {{ \\'PLAYERS.NEW\\' | translate }}    }                                                         {{ \\'PLAYERS.ERRORS.NAME_REQUIRED\\' | translate }}    {{ \\'PLAYERS.ERRORS.NAME_MIN_LENGTH\\' | translate }}                  {{ \\'PLAYERS.ERRORS.SURNAME_REQUIRED\\' | translate }}    {{ \\'PLAYERS.ERRORS.SURNAME_MIN_LENGTH\\' | translate }}                {{ \\'PLAYERS.ERRORS.SURNAME_REQUIRED\\' | translate }}    {{ \\'PLAYERS.ERRORS.SURNAME_MIN_LENGTH\\' | translate }}                  {{ \\'PLAYERS.ERRORS.NATIONALITY_REQUIRED\\' | translate }}    {{ \\'PLAYERS.ERRORS.NATIONALITY_INVALID\\' | translate }}                  {{ \\'PLAYERS.ERRORS.PATTERN\\' | translate }}                  {{ getBirthdate.value ? (getBirthdate.value | date:\\'dd-MM-yyyy\\') : \\'PLAYERS.SELECT_DATE\\'|translate }}                           {{\\'PLAYERS.SELECT_DATE\\'|translate}}                {{\\'PLAYERS.SELECT_DATE\\'|translate}}      {{ \\'PLAYERS.ERRORS.BIRTHDATE_REQUIRED\\' | translate }}          {{ \\'PLAYERS.POSITION\\' | translate }}            {{ \\'PLAYERS.TEAM\\' | translate }}                @if (mode==\\'edit\\') {      {{ \\'PLAYERS.UPDATE\\' | translate }}    }    @else {      {{ \\'PLAYERS.SUBMIT\\' | translate }}    }  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerCreateModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerData.html":{"url":"interfaces/PlayerData.html","title":"interface - PlayerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         PlayerAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlayerAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerJsonServerStorageMapping.html":{"url":"injectables/PlayerJsonServerStorageMapping.html","title":"injectable - PlayerJsonServerStorageMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerJsonServerStorageMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-json-server.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-json-server.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-json-server.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: PlayerRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-json-server.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PlayerRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: PlayerRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-json-server.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        PlayerRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-json-server.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-json-server.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-json-server.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Player } from \"../../models/players.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\n\ninterface PlayerRaw{\n  id?: string\n  nombre: string\n  ape1: string;\n  ape2?: string;\n  fechNacimiento: Date;\n  nacionalidad: string\n  dorsal: number\n  posicion:string\n  idEquipo: string\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerJsonServerStorageMapping implements IBaseMapping {\n  setAdd(data: Player):PlayerRaw {\n      return{\n          nombre:data.name,\n          ape1:data.firstSurname,\n          ape2:data.secondSurname,\n          fechNacimiento:data.birthdate,\n          nacionalidad:data.nationality,\n          dorsal:data.dorsal,\n          posicion:data.position,\n          idEquipo:''\n      }\n  }\n  setUpdate(data: Player):PlayerRaw {\n      let toReturn:any = {};\n      Object.keys(data).forEach(key => {\n          switch (key) {\n              case 'name': toReturn['nombre']=data[key];\n                  break;\n              case 'firstSurname': toReturn['ape1']=data[key];\n                  break;\n              case 'secondSurname': toReturn['ape2']=data[key];\n                  break;\n              case 'birthdate': toReturn['fechNacimiento']=data[key];\n                  break;\n              case 'nationality': toReturn['nacionalidad']=data[key];\n                  break;\n              case 'dorsal': toReturn['dorsal']=data[key];\n                  break;\n              case 'position': toReturn['posicion']=data[key];\n                  break;\n              case 'team': toReturn['idEquipo']=data[key];\n                  break;\n          \n              default:\n                  break;\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:PlayerRaw[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:PlayerRaw)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: PlayerRaw):Player {\n      return {\n          id:data.id!, \n          name:data.nombre, \n          firstSurname:data.ape1,\n          secondSurname:data.ape2,\n          birthdate:data.fechNacimiento,\n          nationality:data.nacionalidad,\n          dorsal:data.dorsal,\n          position:data.posicion,\n          team:data.idEquipo,\n      };\n  }\n  getAdded(data: any):Player {\n      throw new Error(\"Method not implemented.\");\n  }\n  getUpdated(data: any):Player {\n      throw new Error(\"Method not implemented.\");\n  }\n  getDeleted(data: any):Player {\n      throw new Error(\"Method not implemented.\");\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerMappingFirebase.html":{"url":"injectables/PlayerMappingFirebase.html","title":"injectable - PlayerMappingFirebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerMappingFirebase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/player-mapping-firebase.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-firebase.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-firebase.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-firebase.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-firebase.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-firebase.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-firebase.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebasePlayer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-firebase.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebasePlayer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/player-mapping-firebase.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Player } from \"../../models/players.model\";\nimport { doc, Firestore, getFirestore } from \"firebase/firestore\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\nimport { FirebasePlayer } from \"../../models/firebase-player.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingFirebase implements IBaseMapping{\n  \n  private db: Firestore;\n  \n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig))\n  }\n  getPaginated(page: number, pageSize: number, total: number, data: ({ id: string } & FirebasePlayer)[]): Paginated {\n    return{\n      page,\n      pageSize,\n      pages: Math.ceil(total/pageSize),\n      data: data.map(item => this.getOne(item))\n    }\n  }\n  getOne(data: { id: string } & FirebasePlayer): Player {\n    return {\n      id: data.id,\n      name: data.name,\n      firstSurname: data.firstSurname,\n      secondSurname: data.secondSurname,\n      birthdate: data.birthdate,\n      nationality: data.nationality,\n      dorsal: data.dorsal,\n      position: data.position,\n      team: data.team?.id,\n      picture: data.picture ? {\n        url: data.picture,\n        large: data.picture,\n        medium: data.picture,\n        small: data.picture,\n        thumbnail: data.picture\n      }: undefined,\n      userId: data.userId?.id \n    };\n  }\n  getAdded(data: { id: string } & FirebasePlayer): Player {\n    return this.getOne(data)\n  }\n  getUpdated(data: { id: string } & FirebasePlayer): Player {\n    return this.getOne(data)\n  }\n  getDeleted(data: { id: string } & FirebasePlayer): Player {\n    return this.getOne(data)\n  }\n  setAdd(data: Player): FirebasePlayer {\n    let dataMapping:FirebasePlayer = {\n      name: data.name,\n      firstSurname: data.firstSurname,\n      secondSurname: data.secondSurname,\n      birthdate: data.birthdate,\n      nationality: data.nationality,\n      dorsal: data.dorsal,\n      position: data.position,\n      picture: data.picture?.url || ''\n    }\n    if(data.team){\n      dataMapping.team = doc(this.db, 'teams', data.team || '')\n    }\n    if(data.userId){\n      dataMapping.userId = doc(this.db, 'usuarios', data.userId || '')\n    }\n    return dataMapping;\n  }\n  setUpdate(data: Partial): FirebasePlayer {\n    const result: any = {};\n    if (data.name) result.name = data.name;\n    if (data.firstSurname) result.firstSurname = data.firstSurname;\n    if (data.secondSurname) result.secondSurname = data.secondSurname;\n    if (data.birthdate) result.birthdate = data.birthdate;\n    if (data.nationality) result.nationality = data.nationality;\n    if (data.dorsal) result.dorsal = data.dorsal;\n    if (data.position) result.position = data.position;\n    if (data.team) result.team = doc(this.db, 'teams', data.team || '');\n    if (data.picture) result.picture = data.picture?.url || '';\n    if (data.userId) result.userId = data.userId || '';\n    return result;\n  }\n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerMappingStrapi.html":{"url":"injectables/PlayerMappingStrapi.html","title":"injectable - PlayerMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: PlayerRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-strapi.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PlayerRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: PlayerRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-strapi.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PlayerRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: Data | PlayerRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-strapi.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Data | PlayerRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: Data[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-strapi.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Data[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: PlayerRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-strapi.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PlayerRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-strapi.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/player-mapping-strapi.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerModalComponent.html":{"url":"components/PlayerModalComponent.html","title":"component - PlayerModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/player-modal/player-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player-modal\n            \n\n\n\n            \n                styleUrls\n                ./player-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                img\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                player\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/player-modal/player-modal.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        player\n                    \n                \n                \n                    \n                        Type :         Player\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/player-modal/player-modal.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-modal/player-modal.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/player-modal/player-modal.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        img\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : './../../../assets/img/Player1.jpg'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/player-modal/player-modal.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Player } from 'src/app/core/models/players.model';\n\n@Component({\n  selector: 'app-player-modal',\n  templateUrl: './player-modal.component.html',\n  styleUrls: ['./player-modal.component.scss'],\n})\nexport class PlayerModalComponent  implements OnInit {\n  img: string|undefined = './../../../assets/img/Player1.jpg'\n  constructor(private modalCtrl: ModalController) { }\n\n  @Input() player!: Player;\n\n  ngOnInit() {}\n\n  closeModal(){\n    this.modalCtrl.dismiss()\n\n  }\n}\n\n    \n\n    \n        \n  \n    INFORMACIÓN DEL JUGADOR\n    \n      \n    \n      {{'PLAYERS.NAME' | translate}}:  {{ player.name }}\n      {{'PLAYERS.SURNAME1' | translate}}:  {{ player.firstSurname }}\n      \n      {{'PLAYERS.SURNAME2' | translate}}:  {{ player.secondSurname }}\n      \n      {{'PLAYERS.BIRTHDATE' | translate}}:  {{ player.birthdate }}\n      \n      {{'PLAYERS.DORSAL' | translate}}:  {{ player.dorsal }}\n      {{'PLAYERS.NATIONALITY' | translate}}:  {{ player.nationality }}\n      {{'PLAYERS.POSITION' | translate}}:  {{ player.position}}\n    \n  \n\n    \n\n    \n                \n                    ./player-modal.component.scss\n                \n                .card-modal {\n  --background: none; /* Evitar que el contenido tenga un fondo por defecto */\n  background-color: transparent;\n  padding: 20px; /* Agregar espacio alrededor del contenido */\n}\n\n.modal-content {\n  padding: 20px; /* Espaciado dentro del contenido */\n  border-radius: 10px; /* Bordes redondeados */\n  color: white; /* Asegura que el texto sea visible sobre el fondo oscuro */\n  margin-top: 20px;\n}\n\nh2 {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\nion-avatar {\n  margin: 0 auto; /* Centra el avatar */\n  display: block; /* Para que esté en el centro */\n  margin-bottom: 20px; /* Espacio entre el avatar y el contenido */\n}\n\n.player-info p {\n  margin: 10px 0; /* Espaciado entre los párrafos */\n}\n\n.player-info strong {\n  color: #f0f0f0; /* Asegura que los títulos sean visibles */\n}\n\nion-content {\n  padding: 0; /* Elimina cualquier padding adicional de ion-content */\n  --background: none; /* Para asegurar que no se aplique un fondo adicional */\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      INFORMACIÓN DEL JUGADOR                    {{\\'PLAYERS.NAME\\' | translate}}:  {{ player.name }}      {{\\'PLAYERS.SURNAME1\\' | translate}}:  {{ player.firstSurname }}            {{\\'PLAYERS.SURNAME2\\' | translate}}:  {{ player.secondSurname }}            {{\\'PLAYERS.BIRTHDATE\\' | translate}}:  {{ player.birthdate }}            {{\\'PLAYERS.DORSAL\\' | translate}}:  {{ player.dorsal }}      {{\\'PLAYERS.NATIONALITY\\' | translate}}:  {{ player.nationality }}      {{\\'PLAYERS.POSITION\\' | translate}}:  {{ player.position}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerRaw.html":{"url":"interfaces/PlayerRaw.html","title":"interface - PlayerRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-json-server.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ape1\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ape2\n                                        \n                                \n                                \n                                        \n                                            dorsal\n                                        \n                                \n                                \n                                        \n                                            fechNacimiento\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            idEquipo\n                                        \n                                \n                                \n                                        \n                                            nacionalidad\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            posicion\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ape1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ape1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ape2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ape2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dorsal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dorsal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechNacimiento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechNacimiento:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idEquipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idEquipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nacionalidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nacionalidad:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        posicion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        posicion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Player } from \"../../models/players.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\n\ninterface PlayerRaw{\n  id?: string\n  nombre: string\n  ape1: string;\n  ape2?: string;\n  fechNacimiento: Date;\n  nacionalidad: string\n  dorsal: number\n  posicion:string\n  idEquipo: string\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerJsonServerStorageMapping implements IBaseMapping {\n  setAdd(data: Player):PlayerRaw {\n      return{\n          nombre:data.name,\n          ape1:data.firstSurname,\n          ape2:data.secondSurname,\n          fechNacimiento:data.birthdate,\n          nacionalidad:data.nationality,\n          dorsal:data.dorsal,\n          posicion:data.position,\n          idEquipo:''\n      }\n  }\n  setUpdate(data: Player):PlayerRaw {\n      let toReturn:any = {};\n      Object.keys(data).forEach(key => {\n          switch (key) {\n              case 'name': toReturn['nombre']=data[key];\n                  break;\n              case 'firstSurname': toReturn['ape1']=data[key];\n                  break;\n              case 'secondSurname': toReturn['ape2']=data[key];\n                  break;\n              case 'birthdate': toReturn['fechNacimiento']=data[key];\n                  break;\n              case 'nationality': toReturn['nacionalidad']=data[key];\n                  break;\n              case 'dorsal': toReturn['dorsal']=data[key];\n                  break;\n              case 'position': toReturn['posicion']=data[key];\n                  break;\n              case 'team': toReturn['idEquipo']=data[key];\n                  break;\n          \n              default:\n                  break;\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:PlayerRaw[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:PlayerRaw)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: PlayerRaw):Player {\n      return {\n          id:data.id!, \n          name:data.nombre, \n          firstSurname:data.ape1,\n          secondSurname:data.ape2,\n          birthdate:data.fechNacimiento,\n          nationality:data.nacionalidad,\n          dorsal:data.dorsal,\n          position:data.posicion,\n          team:data.idEquipo,\n      };\n  }\n  getAdded(data: any):Player {\n      throw new Error(\"Method not implemented.\");\n  }\n  getUpdated(data: any):Player {\n      throw new Error(\"Method not implemented.\");\n  }\n  getDeleted(data: any):Player {\n      throw new Error(\"Method not implemented.\");\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerRaw-1.html":{"url":"interfaces/PlayerRaw-1.html","title":"interface - PlayerRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/player.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlayersByTeam\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IPlayerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/player.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IPlayerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayersByTeam\n                        \n                    \n                \n            \n            \n                \ngetPlayersByTeam(team: string, page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/player.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { Player } from \"../../models/players.model\";\nimport { PLAYER_REPOSITORY_TOKEN } from \"../../repositories/repository.tokens\";\nimport { IPlayerService } from \"../interfaces/player-service.interface\";\nimport { BaseService } from \"./base-service.service\";\nimport { IPlayerRepository } from \"../../repositories/intefaces/player-repository.interface\";\nimport { SearchParams } from \"../../repositories/intefaces/base-repository.interface\";\nimport { from, map, Observable } from \"rxjs\";\nimport { Paginated } from \"../../models/paginated.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService extends BaseService implements IPlayerService {\n  constructor(\n    @Inject(PLAYER_REPOSITORY_TOKEN) repository: IPlayerRepository\n  ) {\n    super(repository);\n  }\n\n  getPlayersByTeam(team: string, page: number, pageSize: number): Observable> {\n      const teamId = team.split('/').pop() ?? team;\n      const filters = { team: teamId };\n      return this.repository.getAll(page, pageSize, filters) as Observable>;\n    }\n\n  // Implementa métodos específicos si los hay\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayersPageModule.html":{"url":"modules/PlayersPageModule.html","title":"module - PlayersPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayersPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlayersPageModule\n\n\n\ncluster_PlayersPageModule_declarations\n\n\n\ncluster_PlayersPageModule_imports\n\n\n\n\nPlayersPage\n\nPlayersPage\n\n\n\nPlayersPageModule\n\nPlayersPageModule\n\nPlayersPageModule -->\n\nPlayersPage->PlayersPageModule\n\n\n\n\n\nPlayersPageRoutingModule\n\nPlayersPageRoutingModule\n\nPlayersPageModule -->\n\nPlayersPageRoutingModule->PlayersPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPlayersPageModule -->\n\nSharedModule->PlayersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/players/players.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PlayersPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PlayersPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlayersPageRoutingModule } from './players-routing.module';\n\nimport { PlayersPage } from './players.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    PlayersPageRoutingModule,\n    TranslateModule.forChild()],\n  declarations: [PlayersPage]\n})\nexport class PlayersPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayersPageRoutingModule.html":{"url":"modules/PlayersPageRoutingModule.html","title":"module - PlayersPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayersPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/players/players-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlayersPage } from './players.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlayersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlayersPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PositionSelectableComponent.html":{"url":"components/PositionSelectableComponent.html","title":"component - PositionSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PositionSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/position-selectable/position-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => PositionSelectableComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                app-position-selectable\n            \n\n\n\n\n\n            \n                template\n                \n  {{ 'PLAYERS.POSITION_GOALKEEPER' | translate }}\n  {{ 'PLAYERS.POSITION_DEFENDER' | translate }}\n  {{ 'PLAYERS.POSITION_MIDFIELDER' | translate }}\n  {{ 'PLAYERS.POSITION_FORWARD' | translate }}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                onChangeCallback\n                            \n                            \n                                    Private\n                                onTouchedCallback\n                            \n                            \n                                selectedPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (_: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onTouchedCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/position-selectable/position-selectable.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-position-selectable',\n  template: `\n    \n      {{ 'PLAYERS.POSITION_GOALKEEPER' | translate }}\n      {{ 'PLAYERS.POSITION_DEFENDER' | translate }}\n      {{ 'PLAYERS.POSITION_MIDFIELDER' | translate }}\n      {{ 'PLAYERS.POSITION_FORWARD' | translate }}\n    \n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PositionSelectableComponent),\n      multi: true\n    }\n  ]\n})\nexport class PositionSelectableComponent implements ControlValueAccessor, OnInit {\n  @Input() placeholder: string = '';\n  selectedPosition: string | null = null;\n  private onChangeCallback: (_: any) => void = () => {};\n  private onTouchedCallback: () => void = () => {};\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  writeValue(value: string): void {\n    if (value !== undefined) {\n      this.selectedPosition = value;\n    }\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouchedCallback = fn;\n  }\n\n  onChange(event: any): void {\n    this.onChangeCallback(event.detail.value);\n  }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'PLAYERS.POSITION_GOALKEEPER\\' | translate }}  {{ \\'PLAYERS.POSITION_DEFENDER\\' | translate }}  {{ \\'PLAYERS.POSITION_MIDFIELDER\\' | translate }}  {{ \\'PLAYERS.POSITION_FORWARD\\' | translate }}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'PositionSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/profile/profile.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    surname\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userSvc: UsersService, authSvc: BaseAuthenticationService, mediaSvc: BaseMediaService, loadingCtrl: LoadingController, toastCtrl: ToastController, translateSvc: TranslateService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/profile/profile.page.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaSvc\n                                                  \n                                                        \n                                                                        BaseMediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateSvc\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Users | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:131\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:135\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/profile/profile.page.ts:139\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\nimport { Users } from 'src/app/core/models/users.model';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { BaseMediaService } from 'src/app/core/services/impl/base-media.service';\nimport { UsersService } from 'src/app/core/services/impl/users.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  formGroup: FormGroup;\n  user?: Users | null;\n\n  constructor(\n    private fb: FormBuilder,\n    private userSvc: UsersService,\n    private authSvc:BaseAuthenticationService,\n    private mediaSvc:BaseMediaService,\n    private loadingCtrl: LoadingController,\n    private toastCtrl: ToastController,\n    private translateSvc: TranslateService,\n    private router: Router\n    \n  ) {\n    this.formGroup = this.fb.group({\n      name: ['', [Validators.required]],\n      surname: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      picture: ['']\n    });\n  }\n\n  async ngOnInit() {\n    const loading = await this.loadingCtrl.create();\n    await loading.present();\n\n    try {\n      const user = await this.authSvc.getCurrentUser();\n      if(user){\n        console.log(user.id)\n          this.user = await lastValueFrom(this.userSvc.getByUserId(user.id));\n          console.log(this.user, \"Usuario\");\n          if (this.user) {\n            const updatedPerson: any = {\n              ...this.user,\n              email:user.email,\n              userId:user.id,\n              picture: typeof this.user.picture === 'object' ? \n                            this.user.picture.url : \n                            undefined\n            };\n            this.formGroup.patchValue(updatedPerson);\n          }\n      }\n    } catch (error) {\n      console.error(error);\n      const toast = await this.toastCtrl.create({\n        message: await lastValueFrom(this.translateSvc.get('COMMON.ERROR.LOAD')),\n        duration: 3000,\n        position: 'bottom'\n      });\n      await toast.present();\n    } finally {\n      await loading.dismiss();\n    }\n  }\n\n  logout() {\n    this.authSvc.signOut().subscribe(()=>{\n      this.router.navigate(['/login']);\n    });\n  }\n\n  async onSubmit() {\n    if (this.formGroup.valid && this.user) {\n      const loading = await this.loadingCtrl.create();\n      await loading.present();\n\n      try {\n        const changedValues = {} as Record;\n        Object.keys(this.formGroup.controls).forEach(key => {\n          if (this.formGroup.get(key)?.dirty) {\n            changedValues[key as keyof Users] = this.formGroup.get(key)?.value;\n          }\n        });\n\n        if (changedValues.picture) {\n          const base64Response = await fetch(changedValues.picture);\n          const blob = await base64Response.blob();\n          const uploadedBlob = await lastValueFrom(this.mediaSvc.upload(blob));\n        \n          changedValues.picture = {\n            url: uploadedBlob[0],\n            large: uploadedBlob[0],\n            medium: uploadedBlob[0],\n            small: uploadedBlob[0],\n            thumbnail: uploadedBlob[0]\n          };\n        }\n        \n        await lastValueFrom(this.userSvc.update(this.user.id, changedValues));\n        \n        const toast = await this.toastCtrl.create({\n          message: await this.translateSvc.get('COMMON.SUCCESS.SAVE').toPromise(),\n          duration: 3000,\n          position: 'bottom'\n        });\n        await toast.present();\n      } catch (error) {\n        console.error(error);\n        const toast = await this.toastCtrl.create({\n          message: await this.translateSvc.get('COMMON.ERROR.SAVE').toPromise(),\n          duration: 3000,\n          position: 'bottom'\n        });\n        await toast.present();\n      } finally {\n        await loading.dismiss();\n      }\n    }\n  }\n\n  get name(){\n    return this.formGroup.controls['name'];\n  }\n\n  get surname(){\n    return this.formGroup.controls['surname'];\n  }\n\n  get email(){\n    return this.formGroup.controls['email'];\n  }\n\n}\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        {{\"PROFILE.TITLE\"  | translate}}\n      \n    \n  \n\n  \n    \n\n      \n\n        \n          {{ 'PROFILE.PICTURE' | translate }}\n          \n            \n          \n        \n\n        \n\n          \n            \n              \n            \n          \n\n          \n            \n              \n            \n          \n\n          \n            \n              \n            \n          \n        \n\n        \n          \n            {{ 'MENU.LOGOUT' | translate }}\n          \n\n          \n            {{ 'PROFILE.UPDATE' | translate }}\n          \n        \n\n      \n    \n  \n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{\"PROFILE.TITLE\"  | translate}}                                          {{ \\'PROFILE.PICTURE\\' | translate }}                                                                                                                                                                                                                                                                    {{ \\'MENU.LOGOUT\\' | translate }}                                {{ \\'PROFILE.UPDATE\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    ProfilePageRoutingModule,\n    TranslateModule.forChild(),\n    ReactiveFormsModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProviderMetadata.html":{"url":"interfaces/ProviderMetadata.html","title":"interface - ProviderMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProviderMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            public_id\n                                        \n                                \n                                \n                                        \n                                            resource_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                img\n                            \n                            \n                                isConfirmPasswordVisible\n                            \n                            \n                                isPasswordVisible\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                onLogin\n                            \n                            \n                                onSubmit\n                            \n                            \n                                toggleConfirmVisibility\n                            \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    surname\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, authSvc: BaseAuthenticationService, userSvc: UsersService, languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/register/register.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleConfirmVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleConfirmVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        img\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : './../../../assets/img/campo-futbol2.jpg'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isConfirmPasswordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:106\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:110\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/core/models/auth.model';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { UsersService } from 'src/app/core/services/impl/users.service';\nimport { LanguageService } from 'src/app/core/services/language.service';\nimport { passwordValidator, passwordsMatchValidator } from 'src/app/core/utils/validators';\nimport { PasswordTogglePipe } from 'src/app/shared/pipes/password-toggle/password-toggle.pipe';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n  \n  currentLang:string  \n  registerForm: FormGroup;\n  img: string|undefined = './../../../assets/img/campo-futbol2.jpg';\n  isPasswordVisible: boolean = false\n  isConfirmPasswordVisible: boolean = false\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route:ActivatedRoute,\n    private authSvc:BaseAuthenticationService,\n    private userSvc:UsersService,\n    private languageService: LanguageService\n  ) {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      surname: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, passwordValidator]],\n      confirmPassword: ['', [Validators.required]]\n    },\n    { validators: passwordsMatchValidator });\n\n    this.currentLang = this.languageService.getStoredLanguage();\n  \n  }\n\n  toggleVisibility(){\n    this.isPasswordVisible = !this.isPasswordVisible\n  }\n\n  toggleConfirmVisibility(){\n    this.isConfirmPasswordVisible = !this.isConfirmPasswordVisible\n  }\n\n  changeLanguage(lang: string) {\n    this.languageService.changeLanguage(lang);\n    this.currentLang = lang;\n    this.languageService.storeLanguage(lang);\n  }\n\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.authSvc.signUp(this.registerForm.value).subscribe({\n        next: (resp:User) => {\n          const userData = {\n            ...this.registerForm.value,\n            role: \"User\",\n            userId: resp.id.toString()\n          };\n          \n          this.userSvc.add(userData).subscribe({\n            next: resp => {\n              const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n              this.authSvc.emitLoginSuccess();\n              this.router.navigateByUrl(returnUrl);\n            },\n            error: err => {}\n          });\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    } else {\n      console.log('Formulario no válido');\n    }\n  }\n\n  onLogin(){\n    this.registerForm.reset();\n    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n    this.router.navigate(['/login'], {queryParams:{ returnUrl:returnUrl}, replaceUrl:true});\n  }\n\n  get name(){\n    return this.registerForm.controls['name'];\n  }\n\n  get surname(){\n    return this.registerForm.controls['surname'];\n  }\n\n  get email(){\n    return this.registerForm.controls['email'];\n  }\n\n  get password(){\n    return this.registerForm.controls['password'];\n  }\n\n  get confirmPassword(){\n    return this.registerForm.controls['confirmPassword'];\n  }\n\n}\n    \n\n    \n        \n  \n    \n\n      \n        ⚽ {{ 'REGISTER.TITLE' | translate }} ⚽\n      \n\n      \n\n        \n          \n            {{ 'REGISTER.NAME' | translate }}\n          \n          \n        \n\n        \n          \n            {{ 'REGISTER.SURNAMES' | translate }}\n          \n          \n        \n\n        \n          \n            {{ 'REGISTER.EMAIL' | translate }}\n          \n          \n        \n\n        \n          \n            {{ 'REGISTER.PASSWORD' | translate }}\n          \n          \n            \n            \n              \n            \n          \n        \n\n        \n          \n            {{ 'REGISTER.REPEAT_PASSWORD' | translate }}\n          \n          \n            \n            \n              \n            \n          \n        \n\n        \n          \n            {{ 'REGISTER.ERRORS.NAME_REQUIRED' | translate }}\n          \n\n          \n            {{ 'REGISTER.ERRORS.SURNAME_REQUIRED' | translate }}\n          \n\n          \n            {{ 'REGISTER.ERRORS.EMAIL_REQUIRED' | translate }}\n            {{ 'REGISTER.ERRORS.INCORRECT_EMAIL' | translate }}\n          \n\n          \n            {{ 'REGISTER.ERRORS.PASSWORD_REQUIRED' | translate }}\n            {{ 'REGISTER.ERRORS.INCORRECT_PASSWORD_REQUIREMENTS' | translate }}\n          \n\n          \n            {{ 'REGISTER.ERRORS.PASSWORD_REQUIRED' | translate }}\n          \n\n          \n            {{ 'REGISTER.ERRORS.MISMATCH_PASSWORD' | translate }}\n          \n        \n\n\n        \n          {{ 'REGISTER.BUTTON_REGISTER' | translate }}\n        \n      \n\n      \n        {{ 'REGISTER.HAVE_ACCOUNT' | translate }}\n        \n          {{ 'REGISTER.BUTTON_LOGIN' | translate }}\n        \n      \n\n      \n        {{ currentLang === 'es' ? 'Español' : 'English' }}\n        \n        \n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ⚽ {{ \\'REGISTER.TITLE\\' | translate }} ⚽                                          {{ \\'REGISTER.NAME\\' | translate }}                                                          {{ \\'REGISTER.SURNAMES\\' | translate }}                                                          {{ \\'REGISTER.EMAIL\\' | translate }}                                                          {{ \\'REGISTER.PASSWORD\\' | translate }}                                                                                                                      {{ \\'REGISTER.REPEAT_PASSWORD\\' | translate }}                                                                                                                      {{ \\'REGISTER.ERRORS.NAME_REQUIRED\\' | translate }}                                {{ \\'REGISTER.ERRORS.SURNAME_REQUIRED\\' | translate }}                                {{ \\'REGISTER.ERRORS.EMAIL_REQUIRED\\' | translate }}            {{ \\'REGISTER.ERRORS.INCORRECT_EMAIL\\' | translate }}                                {{ \\'REGISTER.ERRORS.PASSWORD_REQUIRED\\' | translate }}            {{ \\'REGISTER.ERRORS.INCORRECT_PASSWORD_REQUIREMENTS\\' | translate }}                                {{ \\'REGISTER.ERRORS.PASSWORD_REQUIRED\\' | translate }}                                {{ \\'REGISTER.ERRORS.MISMATCH_PASSWORD\\' | translate }}                                    {{ \\'REGISTER.BUTTON_REGISTER\\' | translate }}                            {{ \\'REGISTER.HAVE_ACCOUNT\\' | translate }}                  {{ \\'REGISTER.BUTTON_LOGIN\\' | translate }}                            {{ currentLang === \\'es\\' ? \\'Español\\' : \\'English\\' }}                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRegisterPageModule -->\n\nSharedModule->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PasswordTogglePipe } from 'src/app/shared/pipes/password-toggle/password-toggle.pipe';\nimport { share } from 'rxjs';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageRoutingModule.html":{"url":"modules/RegisterPageRoutingModule.html","title":"module - RegisterPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchParams.html":{"url":"interfaces/SearchParams.html","title":"interface - SearchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nexport interface SearchParams {\n  [key: string]: string; // O el tipo que necesites para los valores\n}\nexport interface IBaseRepository {\n  getAll(page:number, pageSize:number, filters:SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable; // Retorna el ID generado\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nDragDropDirective\n\nDragDropDirective\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDragDropDirective->SharedModule\n\n\n\n\n\nFilterByTeamDirective\n\nFilterByTeamDirective\n\nSharedModule -->\n\nFilterByTeamDirective->SharedModule\n\n\n\n\n\nHighLightDirective\n\nHighLightDirective\n\nSharedModule -->\n\nHighLightDirective->SharedModule\n\n\n\n\n\nLanguageSelectorComponent\n\nLanguageSelectorComponent\n\nSharedModule -->\n\nLanguageSelectorComponent->SharedModule\n\n\n\n\n\nLeagueCreateModalComponent\n\nLeagueCreateModalComponent\n\nSharedModule -->\n\nLeagueCreateModalComponent->SharedModule\n\n\n\n\n\nLeagueSelectableComponent\n\nLeagueSelectableComponent\n\nSharedModule -->\n\nLeagueSelectableComponent->SharedModule\n\n\n\n\n\nMatchCreateComponent\n\nMatchCreateComponent\n\nSharedModule -->\n\nMatchCreateComponent->SharedModule\n\n\n\n\n\nMatchMenuComponent\n\nMatchMenuComponent\n\nSharedModule -->\n\nMatchMenuComponent->SharedModule\n\n\n\n\n\nPasswordTogglePipe\n\nPasswordTogglePipe\n\nSharedModule -->\n\nPasswordTogglePipe->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nPlayerCreateModalComponent\n\nPlayerCreateModalComponent\n\nSharedModule -->\n\nPlayerCreateModalComponent->SharedModule\n\n\n\n\n\nPlayerModalComponent\n\nPlayerModalComponent\n\nSharedModule -->\n\nPlayerModalComponent->SharedModule\n\n\n\n\n\nPositionSelectableComponent\n\nPositionSelectableComponent\n\nSharedModule -->\n\nPositionSelectableComponent->SharedModule\n\n\n\n\n\nTeamCreateModalComponent\n\nTeamCreateModalComponent\n\nSharedModule -->\n\nTeamCreateModalComponent->SharedModule\n\n\n\n\n\nTeamSelectableComponent\n\nTeamSelectableComponent\n\nSharedModule -->\n\nTeamSelectableComponent->SharedModule\n\n\n\n\n\nTimeDirectiveDirective\n\nTimeDirectiveDirective\n\nSharedModule -->\n\nTimeDirectiveDirective->SharedModule\n\n\n\n\n\nDragDropDirective \n\nDragDropDirective \n\nDragDropDirective  -->\n\nSharedModule->DragDropDirective \n\n\n\n\n\nFilterByTeamDirective \n\nFilterByTeamDirective \n\nFilterByTeamDirective  -->\n\nSharedModule->FilterByTeamDirective \n\n\n\n\n\nHighLightDirective \n\nHighLightDirective \n\nHighLightDirective  -->\n\nSharedModule->HighLightDirective \n\n\n\n\n\nLanguageSelectorComponent \n\nLanguageSelectorComponent \n\nLanguageSelectorComponent  -->\n\nSharedModule->LanguageSelectorComponent \n\n\n\n\n\nLeagueCreateModalComponent \n\nLeagueCreateModalComponent \n\nLeagueCreateModalComponent  -->\n\nSharedModule->LeagueCreateModalComponent \n\n\n\n\n\nLeagueSelectableComponent \n\nLeagueSelectableComponent \n\nLeagueSelectableComponent  -->\n\nSharedModule->LeagueSelectableComponent \n\n\n\n\n\nMatchCreateComponent \n\nMatchCreateComponent \n\nMatchCreateComponent  -->\n\nSharedModule->MatchCreateComponent \n\n\n\n\n\nMatchMenuComponent \n\nMatchMenuComponent \n\nMatchMenuComponent  -->\n\nSharedModule->MatchMenuComponent \n\n\n\n\n\nPasswordTogglePipe \n\nPasswordTogglePipe \n\nPasswordTogglePipe  -->\n\nSharedModule->PasswordTogglePipe \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nPlayerCreateModalComponent \n\nPlayerCreateModalComponent \n\nPlayerCreateModalComponent  -->\n\nSharedModule->PlayerCreateModalComponent \n\n\n\n\n\nPlayerModalComponent \n\nPlayerModalComponent \n\nPlayerModalComponent  -->\n\nSharedModule->PlayerModalComponent \n\n\n\n\n\nPositionSelectableComponent \n\nPositionSelectableComponent \n\nPositionSelectableComponent  -->\n\nSharedModule->PositionSelectableComponent \n\n\n\n\n\nTeamCreateModalComponent \n\nTeamCreateModalComponent \n\nTeamCreateModalComponent  -->\n\nSharedModule->TeamCreateModalComponent \n\n\n\n\n\nTeamSelectableComponent \n\nTeamSelectableComponent \n\nTeamSelectableComponent  -->\n\nSharedModule->TeamSelectableComponent \n\n\n\n\n\nTimeDirectiveDirective \n\nTimeDirectiveDirective \n\nTimeDirectiveDirective  -->\n\nSharedModule->TimeDirectiveDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DragDropDirective\n                        \n                        \n                            FilterByTeamDirective\n                        \n                        \n                            HighLightDirective\n                        \n                        \n                            LanguageSelectorComponent\n                        \n                        \n                            LeagueCreateModalComponent\n                        \n                        \n                            LeagueSelectableComponent\n                        \n                        \n                            MatchCreateComponent\n                        \n                        \n                            MatchMenuComponent\n                        \n                        \n                            PasswordTogglePipe\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            PlayerCreateModalComponent\n                        \n                        \n                            PlayerModalComponent\n                        \n                        \n                            PositionSelectableComponent\n                        \n                        \n                            TeamCreateModalComponent\n                        \n                        \n                            TeamSelectableComponent\n                        \n                        \n                            TimeDirectiveDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DragDropDirective\n                        \n                        \n                            FilterByTeamDirective\n                        \n                        \n                            HighLightDirective\n                        \n                        \n                            LanguageSelectorComponent\n                        \n                        \n                            LeagueCreateModalComponent\n                        \n                        \n                            LeagueSelectableComponent\n                        \n                        \n                            MatchCreateComponent\n                        \n                        \n                            MatchMenuComponent\n                        \n                        \n                            PasswordTogglePipe\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            PlayerCreateModalComponent\n                        \n                        \n                            PlayerModalComponent\n                        \n                        \n                            PositionSelectableComponent\n                        \n                        \n                            TeamCreateModalComponent\n                        \n                        \n                            TeamSelectableComponent\n                        \n                        \n                            TimeDirectiveDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlayerModalComponent } from './components/player-modal/player-modal.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PlayerCreateModalComponent } from './components/player-create-modal/player-create-modal.component';\nimport { TeamCreateModalComponent } from './components/team-create-modal/team-create-modal.component';\nimport { TeamSelectableComponent } from './components/team-selectable/team-selectable.component';\nimport { LeagueCreateModalComponent } from './components/league-create-modal/league-create-modal.component';\nimport { LeagueSelectableComponent } from './components/league-selectable/league-selectable.component';\nimport { PositionSelectableComponent } from './components/position-selectable/position-selectable.component';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { PasswordTogglePipe } from './pipes/password-toggle/password-toggle.pipe';\nimport { MatchCreateComponent } from './components/match-create/match-create.component'\nimport { LanguageSelectorComponent } from './components/language-selector/language-selector.component';\nimport { TimeDirectiveDirective } from './directives/time-directive/time-directive.directive';\nimport { FilterByTeamDirective } from './directives/filterByTeams/filter-by-teams.directive';\nimport { HighLightDirective } from './directives/high-light-directive/high-light.directive';\nimport { DragDropDirective } from './directives/drag-and-drop/drag-drop.directive';\nimport { MatchMenuComponent } from './components/match-menu/match-menu.component';\n\n\n\n@NgModule({\n  declarations: [PlayerModalComponent, \n    PlayerCreateModalComponent, \n    TeamCreateModalComponent, \n    TeamSelectableComponent, \n    LeagueCreateModalComponent, \n    LeagueSelectableComponent, \n    PositionSelectableComponent,\n    PictureSelectableComponent,\n    PasswordTogglePipe,\n    MatchCreateComponent,\n    LanguageSelectorComponent,\n    TimeDirectiveDirective,\n    FilterByTeamDirective,\n    HighLightDirective,\n    DragDropDirective,\n    MatchMenuComponent\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    TranslateModule.forChild(),\n    FormsModule,\n  ],\n  exports:[PlayerModalComponent,\n    PlayerCreateModalComponent, \n    TeamCreateModalComponent, \n    TeamSelectableComponent, \n    LeagueCreateModalComponent, \n    LeagueSelectableComponent,\n    PositionSelectableComponent,\n    PictureSelectableComponent,\n    PasswordTogglePipe,\n    MatchCreateComponent,\n    LanguageSelectorComponent,\n    TimeDirectiveDirective,\n    FilterByTeamDirective,\n    HighLightDirective,\n    DragDropDirective,\n    MatchMenuComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignInPayload.html":{"url":"interfaces/SignInPayload.html","title":"interface - SignInPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignInPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload{\n    email:string,\n    password:string\n}\n\nexport interface SignUpPayload{\n    email:string,\n    password:string,\n    name:string,\n    surname:string,\n    birthDate:string,\n    gender:string,\n    group:string,\n    user:string\n}\n\nexport interface User{\n    id:string,\n    username:string,\n    email:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpPayload.html":{"url":"interfaces/SignUpPayload.html","title":"interface - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthDate\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload{\n    email:string,\n    password:string\n}\n\nexport interface SignUpPayload{\n    email:string,\n    password:string,\n    name:string,\n    surname:string,\n    birthDate:string,\n    gender:string,\n    group:string,\n    user:string\n}\n\nexport interface User{\n    id:string,\n    username:string,\n    email:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Small.html":{"url":"interfaces/Small.html","title":"interface - Small","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Small\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SplashPage.html":{"url":"components/SplashPage.html","title":"component - SplashPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SplashPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/splash/splash.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-splash\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            LottieComponent\n                \n            \n\n            \n                styleUrls\n                ./splash.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./splash.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAnimationCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authSvc: BaseAuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/splash/splash.page.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAnimationCreated\n                        \n                    \n                \n            \n            \n                \nonAnimationCreated(animationItem: AnimationItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animationItem\n                                            \n                                                        AnimationItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnimationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    path: '/assets/lotties/lottie.json',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/splash/splash.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { AnimationItem } from 'lottie-web';\nimport { AnimationOptions, LottieComponent } from 'ngx-lottie';\nimport { timer } from 'rxjs';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\n\n@Component({\n  selector: 'app-splash',\n  templateUrl: './splash.page.html',\n  styleUrls: ['./splash.page.scss'],\n  standalone:true,\n  imports:[IonicModule, LottieComponent]\n})\nexport class SplashPage implements OnInit {\n\n  options: AnimationOptions = {\n    path: '/assets/lotties/lottie.json',\n  }\n\n  onAnimationCreated(animationItem: AnimationItem): void {\n    console.log('Animación creada:', animationItem);\n  }\n  \n  constructor(\n    private router:Router,\n    private authSvc:BaseAuthenticationService\n  ) { }\n\n  ngOnInit() {\n    timer(2500).subscribe(_=>{\n      this.router.navigate(['/home']);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./splash.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'SplashPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SplashPageModule.html":{"url":"modules/SplashPageModule.html","title":"module - SplashPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SplashPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SplashPageModule\n\n\n\ncluster_SplashPageModule_imports\n\n\n\n\nSplashPageRoutingModule\n\nSplashPageRoutingModule\n\n\n\nSplashPageModule\n\nSplashPageModule\n\nSplashPageModule -->\n\nSplashPageRoutingModule->SplashPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/splash/splash.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SplashPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SplashPageRoutingModule } from './splash-routing.module';\nimport player from 'lottie-web';\nimport { SplashPage } from './splash.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SplashPageRoutingModule\n  ]\n})\nexport class SplashPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SplashPageRoutingModule.html":{"url":"modules/SplashPageRoutingModule.html","title":"module - SplashPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SplashPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/splash/splash-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SplashPage } from './splash.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SplashPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SplashPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsPage.html":{"url":"components/StatisticsPage.html","title":"component - StatisticsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatisticsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/statistics/statistics.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-statistics\n            \n\n\n\n            \n                styleUrls\n                ./statistics.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                errorMessage\n                            \n                            \n                                generatedStats\n                            \n                            \n                                loadingStats\n                            \n                            \n                                localGoals\n                            \n                            \n                                localTeam\n                            \n                            \n                                match\n                            \n                            \n                                matchId\n                            \n                            \n                                stats\n                            \n                            \n                                visitorGoals\n                            \n                            \n                                visitorTeam\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doRefresh\n                            \n                            \n                                generateStatsBasedOnStatus\n                            \n                            \n                                generateValue\n                            \n                            \n                                isGreater\n                            \n                            \n                                loadMatchData\n                            \n                            \n                                loadTeams\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                parseStatValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, matchSvc: MatchService, teamSvc: TeamService, statsSvc: MatchStatsService, translate: TranslateService, languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/statistics/statistics.page.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchSvc\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamSvc\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statsSvc\n                                                  \n                                                        \n                                                                        MatchStatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        doRefresh\n                        \n                    \n                \n            \n            \n                \ndoRefresh(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/statistics/statistics.page.ts:255\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateStatsBasedOnStatus\n                        \n                    \n                \n            \n            \n                \ngenerateStatsBasedOnStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/statistics/statistics.page.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateValue\n                        \n                    \n                \n            \n            \n                \ngenerateValue(baseValue: number | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/statistics/statistics.page.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                baseValue\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     number | string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGreater\n                        \n                    \n                \n            \n            \n                \nisGreater(a: any, b: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/statistics/statistics.page.ts:241\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMatchData\n                        \n                    \n                \n            \n            \n                \nloadMatchData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/statistics/statistics.page.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeams\n                        \n                    \n                \n            \n            \n                \nloadTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/statistics/statistics.page.ts:222\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/statistics/statistics.page.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseStatValue\n                        \n                    \n                \n            \n            \n                \nparseStatValue(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/statistics/statistics.page.ts:247\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatedStats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localGoals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchWithTeams\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: 'Tiros', local: 18, visitor: 13 },\n    { name: 'Tiros a puerta', local: 10, visitor: 3 },\n    { name: 'Posesión', local: '61%', visitor: '39%' },\n    { name: 'Pases', local: 545, visitor: 349 },\n    { name: 'Precisión de pases', local: '88%', visitor: '82%' },\n    { name: 'Faltas', local: 5, visitor: 12 },\n    { name: 'Tarjetas amarillas', local: 0, visitor: 2 },\n    { name: 'Tarjetas rojas', local: 0, visitor: 0 },\n    { name: 'Fueras de juego', local: 1, visitor: 4 },\n    { name: 'Saques de esquina', local: 4, visitor: 6 }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visitorGoals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visitorTeam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/statistics/statistics.page.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Match } from 'src/app/core/models/matches.model';\nimport { MatchStatistics } from 'src/app/core/models/matchStatistics.model';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Team } from 'src/app/core/models/teams.model';\nimport { MatchService } from 'src/app/core/services/impl/match.service';\nimport { MatchStatsService } from 'src/app/core/services/impl/matchStats.service';\nimport { TeamService } from 'src/app/core/services/impl/team.service';\nimport { LanguageService } from 'src/app/core/services/language.service';\n\ninterface MatchWithTeams extends Match {\n  localTeam?: Team;\n  visitorTeam?: Team;\n}\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.page.html',\n  styleUrls: ['./statistics.page.scss'],\n})\nexport class StatisticsPage implements OnInit {\n  matchId!: string;\n  match!: MatchWithTeams;\n  localGoals!: string;\n  visitorGoals!: string;\n  localTeam!: Team | null;\n  visitorTeam!: Team | null;\n  generatedStats!: any;\n  loadingStats = true;\n  errorMessage: string | null = null;\n  currentLang: string\n\n  stats = [\n    { name: 'Tiros', local: 18, visitor: 13 },\n    { name: 'Tiros a puerta', local: 10, visitor: 3 },\n    { name: 'Posesión', local: '61%', visitor: '39%' },\n    { name: 'Pases', local: 545, visitor: 349 },\n    { name: 'Precisión de pases', local: '88%', visitor: '82%' },\n    { name: 'Faltas', local: 5, visitor: 12 },\n    { name: 'Tarjetas amarillas', local: 0, visitor: 2 },\n    { name: 'Tarjetas rojas', local: 0, visitor: 0 },\n    { name: 'Fueras de juego', local: 1, visitor: 4 },\n    { name: 'Saques de esquina', local: 4, visitor: 6 }\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private matchSvc: MatchService,\n    private teamSvc: TeamService,\n    private statsSvc: MatchStatsService,\n    private translate: TranslateService,\n    private languageService: LanguageService) {\n      this.currentLang = this.languageService.getStoredLanguage();\n    }\n\n  ngOnInit() {\n    this.matchId = this.route.snapshot.paramMap.get('id')!;\n    this.loadMatchData();\n  }\n\n  loadMatchData() {\n    this.loadingStats = true;\n    this.errorMessage = null;\n\n    this.matchSvc.getById(this.matchId).subscribe({\n      next: async (match) => {\n        try {\n          const [localTeamRaw, visitorTeamRaw] = await Promise.all([\n            match!.localTeamId ? firstValueFrom(this.teamSvc.getById(match!.localTeamId)) : Promise.resolve(undefined),\n            match!.visitorTeamId ? firstValueFrom(this.teamSvc.getById(match!.visitorTeamId)) : Promise.resolve(undefined)\n          ]);\n\n          // Asegurar que sean undefined si venían como null\n          const localTeam = localTeamRaw ?? undefined;\n          const visitorTeam = visitorTeamRaw ?? undefined;\n\n          this.match = {\n            ...(match as Match),\n            localTeam,\n            visitorTeam\n          };\n          \n          if (typeof this.match.result === 'string' && this.match.result.includes('-')) {\n            const [local, visitor] = this.match.result.split('-');\n            this.localGoals = local?.trim();\n            this.visitorGoals = visitor?.trim();\n          } else {\n            this.localGoals = '0';\n            this.visitorGoals = '0';\n          }\n          \n          this.loadTeams();\n          this.generateStatsBasedOnStatus();\n        } catch (error) {\n          console.error('Error fetching team data:', error);\n          this.errorMessage = 'Error al cargar los datos de los equipos.';\n          this.loadingStats = false;\n        }\n      },\n      error: (err) => {\n        console.error('Error fetching match:', err);\n        this.errorMessage = 'Error al cargar el partido.';\n        this.loadingStats = false;\n      }\n    });\n  }\n\n  generateStatsBasedOnStatus() {\n    if (!this.match || !this.match.status) {\n      this.loadingStats = false;\n      return;\n    }\n  \n    const baseStats = this.stats.map(stat => ({\n      name: stat.name,\n      localValue: 0,\n      visitorValue: 0,\n    }));\n  \n    const statsId = this.generatedStats?.id || this.match.id + '_stats';\n  \n    if (this.match.status.toLowerCase() === 'finalizado') {\n      // Verificamos si ya existen stats en Firebase\n      this.statsSvc.getAll().subscribe({\n        next: (allStatsResult: any[] | Paginated) => {\n          const statsArray = Array.isArray(allStatsResult)\n            ? allStatsResult\n            : allStatsResult.data ?? [];\n      \n          const existingStats = statsArray.find(s => s.matchId === this.match.id);\n      \n          if (existingStats) {\n            this.generatedStats = existingStats;\n          } else {\n            const newStats: any = {\n              matchId: this.match.id,\n              userId: '', // Si es vacío, considera no incluirlo\n              stats: this.stats.map(stat => ({\n                name: stat.name,\n                localValue: this.generateValue(stat.local),\n                visitorValue: this.generateValue(stat.visitor),\n              }))\n            };\n            \n            // Si userId está vacío, elimínalo para que no cause problemas\n            if (!newStats.userId) {\n              delete newStats.userId;\n            }\n            \n            // Validar que no haya propiedades con valores undefined\n            Object.keys(newStats).forEach(key => {\n              if (newStats[key] === undefined) {\n                delete newStats[key];\n              }\n            });\n      \n            this.statsSvc.add(newStats).subscribe({\n              next: () => {\n                this.generatedStats = newStats;\n              },\n              error: (err) => {\n                console.error('Error saving stats to Firebase:', err);\n                this.errorMessage = 'Error al guardar las estadísticas en Firebase.';\n              }\n            });\n          }\n      \n          this.loadingStats = false;\n        },\n        error: err => {\n          console.error('Error loading stats from Firebase:', err);\n          this.errorMessage = 'Error al cargar estadísticas desde Firebase.';\n          this.loadingStats = false;\n        }\n      });\n    } else if (this.match.status.toLowerCase() === 'por jugar') {\n      // Partido no ha comenzado\n      this.generatedStats = {\n        id: statsId,\n        matchId: this.match.id,\n        userId: '',\n        stats: baseStats\n      };\n      this.loadingStats = false;\n    } else {\n      // Jugando u otro estado, estadísticas generadas al vuelo\n      this.generatedStats = {\n        id: statsId,\n        matchId: this.match.id,\n        userId: '',\n        stats: this.stats.map(stat => ({\n          name: stat.name,\n          localValue: this.generateValue(stat.local),\n          visitorValue: this.generateValue(stat.visitor),\n        }))\n      };\n      this.loadingStats = false;\n    }\n  }\n  \n\n  generateValue(baseValue: number | string): number | string {\n    const base = typeof baseValue === 'string' && baseValue.includes('%')\n      ? parseFloat(baseValue.replace('%', ''))\n      : Number(baseValue);\n  \n    if (isNaN(base)) return 0;\n  \n    const variation = base * 0.3; // hasta un 30% de variación\n    let randomValue = base + (Math.random() * variation - variation / 2);\n  \n    if (typeof baseValue === 'string' && baseValue.includes('%')) {\n      return `${Math.max(0, Math.min(100, Number(randomValue.toFixed(0))))}%`;\n    }\n  \n    return Math.max(0, Math.round(randomValue));\n  }\n\n  loadTeams() {\n    // Verificar que `this.match` no es undefined antes de intentar acceder a sus propiedades\n    if (this.match) {\n      if (this.match.localTeamId) {\n        this.teamSvc.getById(this.match.localTeamId).subscribe({\n          next: (team) => this.localTeam = team!,\n          error: err => console.error('Error loading local team:', err)\n        });\n      }\n    \n      if (this.match.visitorTeamId) {\n        this.teamSvc.getById(this.match.visitorTeamId).subscribe({\n          next: (team) => this.visitorTeam = team!,\n          error: err => console.error('Error loading visitor team:', err)\n        });\n      }\n    }\n  }\n\n  isGreater(a: any, b: any): boolean {\n    const valA = this.parseStatValue(a);\n    const valB = this.parseStatValue(b);\n    return valA > valB;\n  }\n  \n  parseStatValue(value: any): number {\n    if (typeof value === 'string' && value.includes('%')) {\n      return parseFloat(value.replace('%', ''));\n    }\n    return typeof value === 'number' ? value : parseFloat(value) || 0;\n  }\n  \n  // Método para refrescar los datos\n  doRefresh(event: any) {\n    this.loadMatchData();\n    setTimeout(() => {\n      event.target.complete();\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      \n        \n          {{\"STATS.TITLE\" | translate}}\n        \n      \n    \n  \n\n  \n\n    \n      \n    \n\n    \n      {{\"STATS.ERROR\"}}\n    \n\n    \n\n      \n        \n          {{ localTeam?.name || 'Local' }}\n          {{ localGoals }}\n          -\n          {{ visitorGoals }}\n          {{ visitorTeam?.name || 'Visitante' }}\n        \n        \n          {{ match.status || 'Finalizado' }}\n        \n      \n\n      \n        \n        \n      \n\n      \n        \n          \n            {{ stat.localValue }}\n          \n          {{ stat.name }}\n          \n            {{ stat.visitorValue }}\n          \n        \n      \n\n    \n\n  \n\n\n    \n\n    \n                \n                    ./statistics.page.scss\n                \n                :host {\n  --primary-color: #00ff88;\n  --secondary-color: #5050db;\n  --accent-color: #ff3366;\n  --background-dark: #131313;\n  --card-bg: rgba(255, 255, 255, 0.05);\n  --card-border: rgba(255, 255, 255, 0.2);\n  --input-bg: rgba(255, 255, 255, 0);\n  --input-border: rgba(255, 255, 255, 0.192);\n}\n\n// Header Styles\nion-header {\n  ion-toolbar {\n    --background: transparent;\n    backdrop-filter: blur(10px);\n    \n    ion-title {\n      font-weight: 700;\n      background: linear-gradient(45deg, var(--primary-color), #00ffcc);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      font-size: 1.5rem;\n    }\n  }\n}\n\n// statistics.page.scss actualizado\n.stats-container {\n  text-align: center;\n  padding: 16px;\n  color: #fff;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.result {\n  font-size: 2.5rem;\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #fff;\n}\n\n.match-state {\n  font-size: 1.2rem;\n  color: #F97316; // Color naranja para \"Por jugar\" o verde para \"Finalizado\"\n  margin-bottom: 24px;\n  font-weight: 500;\n  \n  &.finalizado {\n    color: #FF3B30;\n  }\n\n  &.jugando {\n    color: #4da841;\n  }\n  \n  &.por-jugar {\n    color: #F97316;\n  }\n}\n\n.stats-table {\n  display: grid;\n  grid-template-columns:5fr auto 5fr;\n  row-gap: 16px;\n  align-items: center;\n  justify-items: center;\n  margin-top: 20px;\n  padding: 16px;\n  border-radius: 16px;\n  background-color: #0c4a2a00; // Un tono más claro del verde para la tabla\n}\n\n.team-logos {\n  display: grid;\n  grid-template-columns: 0.5fr 0.5fr;\n  margin-bottom: 20px;\n}\n\n.team-logo {\n  margin: 10px 20px;\n  \n  img {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    background-color: #0C4A2A; // Fondo para los logos\n    padding: 5px;\n  }\n}\n\n.stat-value {\n  font-size: 1.1rem;\n  font-weight: bold;\n  padding: 6px 12px;\n  border-radius: 50px;\n  min-width: 50px;\n  display:flex;\n}\n\n.stat-value.left {\n  justify-self: end;\n  background-color: rgba(85, 235, 55, 0.2); // Verde más transparente\n  color: #fff;\n  &.highlight {\n    background-color: #10B981; // Verde más brillante cuando es mayor\n    color: #fff;\n  }\n}\n\n.stat-value.right {\n  justify-self: start;\n  background-color: rgba(150, 150, 150, 0.2); // Gris más transparente\n  color: #fff;\n  &.highlight {\n    background-color: #10B981; // Verde más brillante cuando es mayor\n    color: #fff;\n  }\n}\n\n.stat-name {\n  font-size: 1rem;\n  color: #D1D5DB; // Color más claro para los nombres de las estadísticas\n  font-weight: 500;\n  min-width: 120px;\n}\n\n\nion-toolbar {\n  --background: #0C4A2A;\n  --color: #fff;\n  --border-color: transparent;\n}\n\nion-title {\n  font-weight: bold;\n  color: #fff;\n}\n\n// Estilos para el spinner de carga\n.loading-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n// Estilos para el mensaje de error\n.error-message {\n  text-align: center;\n  color: #FF3B30;\n  padding: 20px;\n}\n\n// Estilos específicos para vs\n.vs {\n  color: #10B981;\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin: 0 10px;\n}\n\n// Estilos para el resultado\n.score {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 20px 0;\n  \n  .team-name {\n    font-size: 1.3rem;\n    font-weight: 500;\n  }\n  \n  .goals {\n    font-size: 2rem;\n    font-weight: bold;\n    color: #10B981;\n    margin: 0 10px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{\"STATS.TITLE\" | translate}}                                              {{\"STATS.ERROR\"}}                                {{ localTeam?.name || \\'Local\\' }}          {{ localGoals }}          -          {{ visitorGoals }}          {{ visitorTeam?.name || \\'Visitante\\' }}                          {{ match.status || \\'Finalizado\\' }}                                                                              {{ stat.localValue }}                    {{ stat.name }}                      {{ stat.visitorValue }}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatisticsPageModule.html":{"url":"modules/StatisticsPageModule.html","title":"module - StatisticsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    StatisticsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatisticsPageModule\n\n\n\ncluster_StatisticsPageModule_imports\n\n\n\ncluster_StatisticsPageModule_declarations\n\n\n\n\nStatisticsPage\n\nStatisticsPage\n\n\n\nStatisticsPageModule\n\nStatisticsPageModule\n\nStatisticsPageModule -->\n\nStatisticsPage->StatisticsPageModule\n\n\n\n\n\nStatisticsPageRoutingModule\n\nStatisticsPageRoutingModule\n\nStatisticsPageModule -->\n\nStatisticsPageRoutingModule->StatisticsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/statistics/statistics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatisticsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StatisticsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StatisticsPageRoutingModule } from './statistics-routing.module';\n\nimport { StatisticsPage } from './statistics.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StatisticsPageRoutingModule,\n        TranslateModule.forChild()\n  ],\n  declarations: [StatisticsPage]\n})\nexport class StatisticsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatisticsPageRoutingModule.html":{"url":"modules/StatisticsPageRoutingModule.html","title":"module - StatisticsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StatisticsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/statistics/statistics-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StatisticsPage } from './statistics.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StatisticsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StatisticsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiAuthMappingService.html":{"url":"injectables/StrapiAuthMappingService.html","title":"injectable - StrapiAuthMappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiAuthMappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signInPayload\n                            \n                            \n                                signUp\n                            \n                            \n                                signUpPayload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: StrapiMeResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiMeResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: StrapiSignInResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiSignInResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StrapiSignIn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: StrapiSignUpResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiSignUpResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StrapiSignUp\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    email:string,\n    password:string,\n    username:string\n}\nexport interface GroupRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload):StrapiSignUp {\n        return {\n            email:payload.email,\n            password:payload.password,\n            username:payload.name + \" \"+ payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username:response.username,\n            email:response.email\n        };\n    }\n    \n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiAuthenticationService.html":{"url":"injectables/StrapiAuthenticationService.html","title":"injectable - StrapiAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAuthenticationService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwt_token\n                            \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Private\n                                loginSuccess$\n                            \n                            \n                                loginSuccessObs$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                getToken\n                            \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                            \n                                emitLoginSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInUrl: string, signUpUrl: string, meUrl: string, authMapping: IAuthMapping, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:49\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-authentication.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:85\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:54\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:77\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:66\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emitLoginSuccess\n                        \n                    \n                \n            \n            \n                \nemitLoginSuccess()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwt_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginSuccessObs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loginSuccess$.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:16\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { filter, map, Observable, of, switchMap, take, tap, firstValueFrom } from 'rxjs';\nimport { BaseAuthenticationService } from './base-authentication.service';\nimport { AUTH_MAPPING_TOKEN, AUTH_ME_API_URL_TOKEN, AUTH_SIGN_IN_API_URL_TOKEN, AUTH_SIGN_UP_API_URL_TOKEN } from '../../repositories/repository.tokens';\nimport { HttpClient } from '@angular/common/http';\nimport { IAuthMapping } from '../interfaces/auth-mapping.interface';\nimport { StrapiMeResponse, StrapiSignInResponse, StrapiSignUpResponse } from './strapi-auth-mapping.service';\nimport { IStrapiAuthentication } from '../interfaces/strapi-authentication.interface';\nimport { User } from '../../models/auth.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiAuthenticationService extends BaseAuthenticationService implements IStrapiAuthentication {\n\n  private jwt_token:string|null = null;\n  constructor(\n    @Inject(AUTH_SIGN_IN_API_URL_TOKEN) protected signInUrl: string,\n    @Inject(AUTH_SIGN_UP_API_URL_TOKEN) protected signUpUrl: string,\n    @Inject(AUTH_ME_API_URL_TOKEN) protected meUrl: string,\n    @Inject(AUTH_MAPPING_TOKEN) authMapping: IAuthMapping,\n    private httpClient:HttpClient\n  ) {\n    super(authMapping);\n    this.jwt_token = localStorage.getItem('people-jwt-token');\n    if (this.jwt_token) {\n      this.me().subscribe({\n        next:(resp) => {\n          this._authenticated.next(true);\n          this._user.next(this.authMapping.me(resp));\n        },\n        error: (err) => {\n          this._authenticated.next(false);\n          this._user.next(undefined);\n        },\n        complete:() => {\n          this._ready.next(true); // Completar inicialización\n        }\n      });\n    } else {\n      this._ready.next(true); // Completar inicialización\n    }\n    \n  }\n  getToken(): string | null {\n    return this.jwt_token;\n  }\n\n  async getCurrentUser(): Promise {\n    await firstValueFrom(this._ready.pipe(filter(ready => ready === true)));\n    return firstValueFrom(this._user);\n  }\n\n  signIn(authPayload: any): Observable {\n    return this.httpClient.post(\n      `${this.signInUrl}`, \n      this.authMapping.signInPayload(authPayload)).pipe(map((resp:StrapiSignInResponse)=>{\n      localStorage.setItem(\"people-jwt-token\",resp.jwt);\n      this.jwt_token = resp.jwt;\n      this._authenticated.next(true);\n      this._user.next(this.authMapping.signIn(resp));\n      return this.authMapping.signIn(resp);\n    }));\n  }\n\n  signUp(signUpPayload: any): Observable {\n    return this.httpClient.post(\n      `${this.signUpUrl}`, \n      this.authMapping.signUpPayload(signUpPayload)).pipe(map((resp:StrapiSignUpResponse)=>{\n        localStorage.setItem(\"people-jwt-token\",resp.jwt);\n        this.jwt_token = resp.jwt;\n        this._authenticated.next(true);\n        return this.authMapping.signUp(resp);\n      }));\n  }\n\n  signOut(): Observable {\n    return of(true).pipe(tap(_=>{\n      localStorage.removeItem('people-jwt-token');\n      this._authenticated.next(false);\n      this._user.next(undefined);\n    }));\n  }\n\n  me():Observable{\n    return this.httpClient.get(\n      `${this.meUrl}`,{headers:{Authorization: `Bearer ${this.jwt_token}`}});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMeResponse.html":{"url":"interfaces/StrapiMeResponse.html","title":"interface - StrapiMeResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMeResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    email:string,\n    password:string,\n    username:string\n}\nexport interface GroupRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload):StrapiSignUp {\n        return {\n            email:payload.email,\n            password:payload.password,\n            username:payload.name + \" \"+ payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username:response.username,\n            email:response.email\n        };\n    }\n    \n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMedia.html":{"url":"interfaces/StrapiMedia.html","title":"interface - StrapiMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         StrapiMediaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMediaData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMediaData.html":{"url":"interfaces/StrapiMediaData.html","title":"interface - StrapiMediaData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMediaData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alternativeText\n                                        \n                                \n                                \n                                        \n                                            caption\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            previewUrl\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternativeText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alternativeText:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caption:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:         Formats\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Formats\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previewUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previewUrl:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrapiMediaService.html":{"url":"classes/StrapiMediaService.html","title":"class - StrapiMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrapiMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseMediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadUrl: string, auth: IStrapiAuthentication, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/strapi-media.service.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IStrapiAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-media.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { headers: { Authorization: string; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseMediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseMediaService:116\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiRepositoryService.html":{"url":"injectables/StrapiRepositoryService.html","title":"injectable - StrapiRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepositoryHttpService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IStrapiAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/strapi-repository.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IStrapiAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:81\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:97\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/strapi-repository.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { headers: { Authorization: string; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:89\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { BaseAuthenticationService } from '../../services/impl/base-authentication.service';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\nexport interface PaginatedRaw {\n  data: Data[]\n  meta: Meta\n}\n\nexport interface Data {\n  id: number\n  attributes: T\n}\n\n\nexport interface Meta {\n  pagination: Pagination\n}\n\nexport interface Pagination {\n  page: number\n  pageSize: number\n  pageCount: number\n  total: number\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) override auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) resource:string, //nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping:IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  private getHeaders() {\n    const token = this.auth.getToken();\n    return {\n      headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n    };\n  }\n\n  override getAll(page:number, pageSize:number, filters:SearchParams = {}): Observable> {\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `filters[${k}]=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n    if(page!=-1){\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${search}&populate=league,teams,team,players`, \n        this.getHeaders()).pipe(map(res=>{\n          return this.mapping.getPaginated(page, pageSize, res.meta.pagination.total, res.data);\n        }));\n    }\n    else{\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}?&${search}`, \n        this.getHeaders()).pipe(map((res:PaginatedRaw)=>{\n          return res.data.map((elem:Data)=>{\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, this.mapping.setAdd(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getAdded(res);\n      }));\n  }\n\n  override update(id: string, entity: T): Observable {\n    return this.http.put(\n      `${this.apiUrl}/${this.resource}/${id}`, this.mapping.setUpdate(entity), \n      this.getHeaders()).pipe(map(res=>{\n        return this.mapping.getUpdated(res);\n      }));\n  }\n\n  override delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`, \n      this.getHeaders()).pipe(map(res=>this.mapping.getDeleted(res)));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignIn.html":{"url":"interfaces/StrapiSignIn.html","title":"interface - StrapiSignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            identifier\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    email:string,\n    password:string,\n    username:string\n}\nexport interface GroupRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload):StrapiSignUp {\n        return {\n            email:payload.email,\n            password:payload.password,\n            username:payload.name + \" \"+ payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username:response.username,\n            email:response.email\n        };\n    }\n    \n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignInResponse.html":{"url":"interfaces/StrapiSignInResponse.html","title":"interface - StrapiSignInResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignInResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    email:string,\n    password:string,\n    username:string\n}\nexport interface GroupRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload):StrapiSignUp {\n        return {\n            email:payload.email,\n            password:payload.password,\n            username:payload.name + \" \"+ payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username:response.username,\n            email:response.email\n        };\n    }\n    \n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignUp.html":{"url":"interfaces/StrapiSignUp.html","title":"interface - StrapiSignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    email:string,\n    password:string,\n    username:string\n}\nexport interface GroupRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload):StrapiSignUp {\n        return {\n            email:payload.email,\n            password:payload.password,\n            username:payload.name + \" \"+ payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username:response.username,\n            email:response.email\n        };\n    }\n    \n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignUpResponse.html":{"url":"interfaces/StrapiSignUpResponse.html","title":"interface - StrapiSignUpResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignUpResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    email:string,\n    password:string,\n    username:string\n}\nexport interface GroupRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload):StrapiSignUp {\n        return {\n            email:payload.email,\n            password:payload.password,\n            username:payload.name + \" \"+ payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username:response.username,\n            email:response.email\n        };\n    }\n    \n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiUser.html":{"url":"interfaces/StrapiUser.html","title":"interface - StrapiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload, User } from \"../../models/auth.model\";\n\n\nexport interface StrapiMeResponse {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string\n    user: StrapiUser\n  }\n\nexport interface StrapiSignUpResponse {\n    jwt: string\n    user: StrapiUser\n  }\n  \n  export interface StrapiUser {\n    id: number\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  \n\ninterface StrapiSignIn{\n    identifier:string,\n    password:string\n}\n\ninterface StrapiSignUp{\n    email:string,\n    password:string,\n    username:string\n}\nexport interface GroupRaw {\n    id: string\n    nombre: string\n}\n@Injectable({\n    providedIn: 'root'\n  })\n  export class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload):StrapiSignIn{\n        return {\n            identifier:payload.email,\n            password:payload.password\n        };\n    }\n    signUpPayload(payload: SignUpPayload):StrapiSignUp {\n        return {\n            email:payload.email,\n            password:payload.password,\n            username:payload.name + \" \"+ payload.surname\n        };\n    }\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id:response.user.id.toString(),\n            username:response.user.username,\n            email:response.user.email\n        };\n    }\n\n    me(response: StrapiMeResponse): User {\n        return {\n            id:response.id.toString(),\n            username:response.username,\n            email:response.email\n        };\n    }\n    \n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/task.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         Users\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Users\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\nimport { Users } from \"./users.model\";\n\nexport interface Task extends Model{\n    owner:Users,\n    date:Date\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Team.html":{"url":"interfaces/Team.html","title":"interface - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/teams.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            league\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nMatches\n                                        \n                                \n                                \n                                        \n                                            numberOfPlayers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            pts\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        league\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        league:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nMatches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nMatches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Team extends Model{\n  name: string;\n  numberOfPlayers: number;\n  pts: number,\n  nMatches: number;\n  league?: string;\n  userId?: string;\n  picture?:{\n    url: string | undefined,\n    large: string | undefined,\n    medium: string | undefined,\n    small: string | undefined,\n    thumbnail: string | undefined,\n  };\n  \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamAttributes.html":{"url":"interfaces/TeamAttributes.html","title":"interface - TeamAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            league\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numberOfPlayers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            publishedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        league\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        league:     LeagueRaw | number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LeagueRaw | number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publishedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publishedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamAttributes-1.html":{"url":"interfaces/TeamAttributes-1.html","title":"interface - TeamAttributes-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            league\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nMatches\n                                        \n                                \n                                \n                                        \n                                            numberOfPlayers\n                                        \n                                \n                                \n                                        \n                                            pts\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            publishedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        league\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        league:     LeagueRaw | number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LeagueRaw | number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nMatches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nMatches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfPlayers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publishedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publishedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamCreateModalComponent.html":{"url":"components/TeamCreateModalComponent.html","title":"component - TeamCreateModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamCreateModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/team-create-modal/team-create-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team-create-modal\n            \n\n\n\n            \n                styleUrls\n                ./team-create-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./team-create-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                isMobile\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                team\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    team\n                                \n                                \n                                    name\n                                \n                                \n                                    numberOfPlayers\n                                \n                                \n                                    league\n                                \n                                \n                                    picture\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        team\n                    \n                \n                \n                    \n                        Type :         Team\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        team\n                    \n                \n\n\n                \n                    \n                        setteam(_team: Team)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _team\n                                                    \n                                                            \n                                                                            Team\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        numberOfPlayers\n                    \n                \n\n                \n                    \n                        getnumberOfPlayers()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        league\n                    \n                \n\n                \n                    \n                        getleague()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        picture\n                    \n                \n\n                \n                    \n                        getpicture()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/team-create-modal/team-create-modal.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { Team } from 'src/app/core/models/teams.model';\n\n@Component({\n  selector: 'app-team-create-modal',\n  templateUrl: './team-create-modal.component.html',\n  styleUrls: ['./team-create-modal.component.scss'],\n})\nexport class TeamCreateModalComponent  implements OnInit {\n  formGroup:FormGroup;\n  mode:'new'|'edit' = 'new';\n  isMobile: boolean = false;\n\n\n  @Input() set team(_team:Team){\n    if(_team && _team.id)\n      this.mode = 'edit';\n    \n    this.formGroup.controls['name'].setValue(_team.name);\n    this.formGroup.controls['numberOfPlayers'].setValue(_team.numberOfPlayers)\n    this.formGroup.controls['league'].setValue(_team.league)\n    this.formGroup.controls['picture'].setValue(_team.picture?.url)\n  }\n\n  constructor(\n    private fb:FormBuilder,\n    private modalCtrl:ModalController,\n    private platform: Platform\n  ) { \n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.formGroup = this.fb.group({\n      name:['', [Validators.required, Validators.minLength(2)]],\n      numberOfPlayers:[''  ,[Validators.pattern(/^\\d+$/)]],\n      league:['', [Validators.required]],\n      picture:['']\n    });\n  }\n  \n\n  ngOnInit() {}\n\n  get name(){\n    return this.formGroup.controls['name'];\n  }\n  \n  get numberOfPlayers(){\n    return this.formGroup.controls['numberOfPlayers']\n  }\n\n  get league(){\n    return this.formGroup.controls['league']\n  }\n\n  get picture(){\n    return this.formGroup.controls['picture']\n  }\n\n  \n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n  \n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        dirtyValues[key] = control.value;\n      }\n    });\n  \n    return dirtyValues;\n  }\n\n  onSubmit(){\n    if (this.formGroup.valid) {\n      this.modalCtrl.dismiss(\n          (this.mode=='new'?\n            this.formGroup.value:\n            this.getDirtyValues(this.formGroup)), this.mode\n      );\n    } else {\n      console.log('Formulario inválido');\n    }\n\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n    \n      @if (mode=='edit') {\n        {{ 'TEAMS.EDIT' | translate }}\n      }\n      @else {\n        {{ 'TEAMS.NEW' | translate }}\n      }\n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n    \n\n    \n      \n    \n    \n      {{ 'LEAGUES.ERRORS.NAME_REQUIRED' | translate }}\n      {{ 'LEAGUES.ERRORS.NAME_MIN_LENGTH' | translate }}\n    \n\n    \n      \n    \n    \n      {{ 'LEAGUES.ERRORS.PATTERN' | translate }}\n    \n    \n      {{ 'TEAMS.LEAGUE' | translate }}\n      \n      \n    \n    \n      @if (mode=='edit') {\n        {{ 'TEAMS.UPDATE' | translate }}\n      }\n      @else {\n        {{ 'TEAMS.SUBMIT' | translate }}\n      }\n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./team-create-modal.component.scss\n                \n                ion-content {\n  --background: none;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  --padding-top: 16px;\n  --padding-bottom: 16px;\n  --min-height: 100%;\n}\n\nion-toolbar {\n  --background: #355e38;\n  --color: white;\n  padding: 10px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nion-toolbar ion-title {\n  font-size: 18px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: white;\n  margin: 0;\n  text-align: center;\n}\n\nion-toolbar ion-icon {\n  font-size: 24px;\n  color: white;\n}\n\nion-buttons {\n  display: flex;\n  justify-content: flex-end;\n}\n\nion-button {\n  --background: transparent;\n  --border-radius: 50%;\n  --color: white;\n}\n\nion-button:hover {\n  --background: rgba(255, 255, 255, 0.1);\n}\n\n/* Modal form */\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 20px 16px;\n}\n\nion-item {\n  --background: transparent;\n  --border-color: #ccc;\n}\n\nion-input {\n  --padding-start: 10px;\n  --padding-end: 10px;\n}\n\nion-input label {\n  font-size: 14px;\n  font-weight: 500;\n}\n\nion-text {\n  font-size: 12px;\n  color: #ff3b30;\n  margin-top: -10px;\n}\n\n/* Responsive */\n@media (max-width: 600px) {\n  ion-toolbar {\n    padding: 8px 12px;\n  }\n\n  ion-title {\n    font-size: 16px;\n  }\n\n  ion-button {\n    --border-radius: 50%;\n  }\n\n  form {\n    padding: 10px 12px;\n  }\n}\n\n/* Custom button */\nion-button[type=\"submit\"] {\n  background: #28a745;\n  color: white;\n  font-weight: bold;\n  margin-top: 15px;\n  --border-radius: 6px;\n}\n\nion-button[type=\"submit\"]:disabled {\n  background: #ccc;\n}\n\nion-button[type=\"submit\"]:not(:disabled):hover {\n  background: #218838;\n}\n\n/* Modal content */\n.modal-content {\n  background: white;\n  padding: 16px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n\n/* Adjust form labels for better spacing */\nion-item ion-label {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n}\n\n.picture-button {\n  --border-radius: 4px; /* Adjust this value to control corner roundness */\n  border-radius: var(--border-radius);\n}\n\n.picture-button input[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n}\n\n.scrollable-content {\n  height: 300px;\n  overflow-y: auto;\n  \n  /* Firefox */\n  scrollbar-width: auto;\n  scrollbar-color: #355e38 rgba(255, 255, 255, 0.1);\n  \n  /* Chrome/Safari/Edge */\n  &::-webkit-scrollbar {\n    width: 2px; /* Reducir el ancho */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #355e38;\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #589e5c;\n    border-radius: 4px;\n  }\n  \n  /* Hover state */\n  &:hover {\n    &::-webkit-scrollbar {\n      width: 4px; /* Ligeramente más ancho en hover */\n    }\n\n    &::-webkit-scrollbar-track {\n      background: #589e5c;\n      border-radius: 4px;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      background: #589e5c;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @if (mode==\\'edit\\') {        {{ \\'TEAMS.EDIT\\' | translate }}      }      @else {        {{ \\'TEAMS.NEW\\' | translate }}      }                                                                          {{ \\'LEAGUES.ERRORS.NAME_REQUIRED\\' | translate }}      {{ \\'LEAGUES.ERRORS.NAME_MIN_LENGTH\\' | translate }}                            {{ \\'LEAGUES.ERRORS.PATTERN\\' | translate }}              {{ \\'TEAMS.LEAGUE\\' | translate }}                          @if (mode==\\'edit\\') {        {{ \\'TEAMS.UPDATE\\' | translate }}      }      @else {        {{ \\'TEAMS.SUBMIT\\' | translate }}      }          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TeamCreateModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamData.html":{"url":"interfaces/TeamData.html","title":"interface - TeamData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         TeamAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TeamAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamData-1.html":{"url":"interfaces/TeamData-1.html","title":"interface - TeamData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         TeamAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TeamAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamJsonServerStorageMapping.html":{"url":"injectables/TeamJsonServerStorageMapping.html","title":"injectable - TeamJsonServerStorageMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamJsonServerStorageMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-json-server.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-json-server.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-json-server.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: TeamRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-json-server.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            TeamRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: TeamRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-json-server.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TeamRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-json-server.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-json-server.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TeamRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-json-server.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TeamRaw\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Team } from \"../../models/teams.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\n\ninterface TeamRaw{\n  id: string\n  nombre: string\n  pts: number\n  nMatches: number\n  jugadoresEnPlantilla: number\n  idLiga: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamJsonServerStorageMapping implements IBaseMapping {\n  setAdd(data: Team):TeamRaw {\n      return {\n          id:data.id, \n          nombre:data.name, \n          pts: data.pts,\n          nMatches: data.nMatches,\n          jugadoresEnPlantilla:data.numberOfPlayers,\n          idLiga:data.league!,\n      };\n  }\n  setUpdate(data: Team):TeamRaw {\n      let toReturn:any = {};\n      Object.keys(data).forEach(key => {\n          switch (key) {\n              case 'name': toReturn['nombre']=data[key];\n                  break;\n              case 'numberOfPlayers': toReturn['jugadoresEnPlantilla']=data[key];\n                  break;\n              case 'pts': toReturn['pts']=data[key];\n                  break;\n              case 'nMatches': toReturn['nMatches']=data[key];\n                  break;\n              case 'league': toReturn['idLiga']=data[key];\n                  break;\n              default:\n                  break;\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:TeamRaw[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:TeamRaw)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: TeamRaw):Team {\n      return {\n          id:data.id, \n          name:data.nombre, \n          numberOfPlayers:data.jugadoresEnPlantilla,\n          pts: data.pts,\n          nMatches: data.nMatches,\n          league:data.idLiga,\n      };\n  }\n  getAdded(data: any):Team {\n      throw new Error(\"Method not implemented.\");\n  }\n  getUpdated(data: any):Team {\n      throw new Error(\"Method not implemented.\");\n  }\n  getDeleted(data: any):Team {\n      throw new Error(\"Method not implemented.\");\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamMappingFirebase.html":{"url":"injectables/TeamMappingFirebase.html","title":"injectable - TeamMappingFirebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamMappingFirebase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/team-mapping-firebase.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-firebase.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-firebase.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-firebase.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-firebase.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-firebase.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-firebase.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseTeam\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-firebase.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseTeam\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/team-mapping-firebase.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { initializeApp } from \"firebase/app\";\nimport { Firestore, getFirestore, doc } from \"firebase/firestore\";\nimport { FirebaseTeam } from \"../../models/firebase-team.model\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Team } from \"../../models/teams.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingFirebase implements IBaseMapping{\n  \n  private db: Firestore;\n  \n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig))\n  }\n  getPaginated(page: number, pageSize: number, total: number, data: ({ id: string } & FirebaseTeam)[]): Paginated {\n    return{\n      page,\n      pageSize,\n      pages: Math.ceil(total/pageSize),\n      data: data.map(item => this.getOne(item))\n    }\n  }\n  getOne(data: { id: string } & FirebaseTeam): Team {\n    return {\n      id: data.id,\n      name: data.name,\n      numberOfPlayers: data.numberOfPlayers,\n      pts: data.pts,\n      nMatches: data.nMatches,\n      league: data.league?.id,\n      userId: data.userId?.id,\n      picture: data.picture ? {\n        url: data.picture,\n        large: data.picture,\n        medium: data.picture,\n        small: data.picture,\n        thumbnail: data.picture\n      }: undefined\n    };\n  }\n  getAdded(data: { id: string } & FirebaseTeam): Team {\n    return this.getOne(data)\n  }\n  getUpdated(data: { id: string } & FirebaseTeam): Team {\n    return this.getOne(data)\n  }\n  getDeleted(data: { id: string } & FirebaseTeam): Team {\n    return this.getOne(data)\n  }\n  setAdd(data: Team): FirebaseTeam {\n    let dataMapping:FirebaseTeam = {\n      name: data.name,\n      numberOfPlayers: data.numberOfPlayers,\n      pts: data.pts,\n      nMatches: data.nMatches,\n      picture: data.picture?.url || ''\n    }\n    if(data.league){\n      dataMapping.league = doc(this.db, 'leagues', data.league || '')\n    }\n    if(data.userId){\n      dataMapping.userId = doc(this.db, 'usuarios', data.userId || '')\n    }\n    return dataMapping;\n  }\n  setUpdate(data: Partial): FirebaseTeam {\n    const result: any = {};\n    if (data.name) result.name = data.name;\n    if (data.numberOfPlayers) result.numberOfPlayers = data.numberOfPlayers;\n    if (data.pts) result.pts = data.pts\n    if (data.nMatches) result.nMatches = data.nMatches\n    if (data.league) result.league = doc(this.db, 'leagues', data.league || '');\n    if (data.userId) result.userId = data.userId || '';\n    if (data.picture) result.picture = data.picture?.url || '';\n    return result;\n  }\n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamMappingStrapi.html":{"url":"injectables/TeamMappingStrapi.html","title":"injectable - TeamMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: TeamRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-strapi.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            TeamRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: TeamRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-strapi.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            TeamRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: Data | TeamRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-strapi.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Data | TeamRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: Data[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-strapi.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Data[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: TeamRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-strapi.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            TeamRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Team\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-strapi.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TeamData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/team-mapping-strapi.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TeamData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamRaw.html":{"url":"interfaces/TeamRaw.html","title":"interface - TeamRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/player-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Player } from \"../../models/players.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\nimport { LeagueRaw } from \"./league-mapping-strapi.service\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface TeamData{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface PlayerRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: PlayerAttributes\n}\n\ninterface PlayerData{\n  data: PlayerAttributes\n}\n\ninterface PlayerAttributes{\n  name: string\n  firstSurname: string;\n  secondSurname: string;\n  birthdate: Date;\n  nationality: string;\n  dorsal: number;\n  position: string;\n  team: TeamRaw | number | null;\n}\n\nexport interface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerMappingStrapi implements IBaseMapping {\n\n\n  setAdd(data: Player):PlayerData {\n      return {\n          data:{\n              name: data.name,\n              firstSurname: data.firstSurname,\n              secondSurname: data .secondSurname?String(data.secondSurname):\"\",\n              birthdate: data.birthdate,\n              nationality: data.nationality,\n              dorsal: data.dorsal,\n              position: data.position,\n              team: data.team?Number(data.team):null\n          }\n      };\n  }\n  setUpdate(data: Player):PlayerData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'firstSurname': mappedData.firstSurname=data[key];\n              break;\n              case 'secondSurname': mappedData.secondSurname=data[key] ? String(data[key]): \"\";\n              break;\n              case 'birthdate': mappedData.birthdate=data[key];\n              break;\n              case 'nationality': mappedData.nationality=data[key];\n              break;\n              case 'dorsal': mappedData.dorsal=data[key];\n              break;\n              case 'position': mappedData.position=data[key];\n              break;\n              case 'team': mappedData.team=data[key] ? Number(data[key]): null;\n              break;\n              default:\n          }\n      });\n      return {data: mappedData as PlayerAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | PlayerRaw): Player {\n      const isPlayerRaw = (data: Data | PlayerRaw): data is PlayerRaw => 'meta' in data;\n      \n      const attributes = isPlayerRaw(data) ? data.data.attributes : data.attributes;\n      const id = isPlayerRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          firstSurname: attributes.firstSurname,\n          secondSurname: attributes.secondSurname,\n          birthdate: attributes.birthdate,\n          nationality: attributes.nationality,\n          dorsal: attributes.dorsal,\n          position: attributes.position,\n          team: typeof attributes.team === 'object' ? attributes.team?.data?.id.toString() : undefined,\n      };\n  }\n  getAdded(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: PlayerRaw):Player {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamRaw-1.html":{"url":"interfaces/TeamRaw-1.html","title":"interface - TeamRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-json-server.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            idLiga\n                                        \n                                \n                                \n                                        \n                                            jugadoresEnPlantilla\n                                        \n                                \n                                \n                                        \n                                            nMatches\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            pts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idLiga\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idLiga:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jugadoresEnPlantilla\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jugadoresEnPlantilla:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nMatches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nMatches:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Team } from \"../../models/teams.model\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\n\ninterface TeamRaw{\n  id: string\n  nombre: string\n  pts: number\n  nMatches: number\n  jugadoresEnPlantilla: number\n  idLiga: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamJsonServerStorageMapping implements IBaseMapping {\n  setAdd(data: Team):TeamRaw {\n      return {\n          id:data.id, \n          nombre:data.name, \n          pts: data.pts,\n          nMatches: data.nMatches,\n          jugadoresEnPlantilla:data.numberOfPlayers,\n          idLiga:data.league!,\n      };\n  }\n  setUpdate(data: Team):TeamRaw {\n      let toReturn:any = {};\n      Object.keys(data).forEach(key => {\n          switch (key) {\n              case 'name': toReturn['nombre']=data[key];\n                  break;\n              case 'numberOfPlayers': toReturn['jugadoresEnPlantilla']=data[key];\n                  break;\n              case 'pts': toReturn['pts']=data[key];\n                  break;\n              case 'nMatches': toReturn['nMatches']=data[key];\n                  break;\n              case 'league': toReturn['idLiga']=data[key];\n                  break;\n              default:\n                  break;\n          }\n      });\n      return toReturn;\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:TeamRaw[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:TeamRaw)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: TeamRaw):Team {\n      return {\n          id:data.id, \n          name:data.nombre, \n          numberOfPlayers:data.jugadoresEnPlantilla,\n          pts: data.pts,\n          nMatches: data.nMatches,\n          league:data.idLiga,\n      };\n  }\n  getAdded(data: any):Team {\n      throw new Error(\"Method not implemented.\");\n  }\n  getUpdated(data: any):Team {\n      throw new Error(\"Method not implemented.\");\n  }\n  getDeleted(data: any):Team {\n      throw new Error(\"Method not implemented.\");\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamRaw-2.html":{"url":"interfaces/TeamRaw-2.html","title":"interface - TeamRaw-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/team-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\"\nimport { Paginated } from \"../../models/paginated.model\"\nimport { Team } from \"../../models/teams.model\"\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\"\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\"\n\ninterface MediaRaw{\n  data: StrapiMedia\n}\n\ninterface TeamRaw{\n  data: Data\n}\n\ninterface Data{\n  id: number\n  attributes: TeamAttributes\n}\n\ninterface TeamData{\n  data: TeamAttributes\n}\n\ninterface TeamAttributes{\n  name: string\n  numberOfPlayers: number\n  pts: number\n  nMatches: number\n  league: LeagueRaw | number | null\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface LeagueRaw{\n  data: LeagueData\n  meta: Meta\n}\n\ninterface LeagueData{\n  id: number\n  attributes: LeagueAttributes\n}\n\ninterface LeagueData{\n  data: LeagueAttributes\n}\n\ninterface LeagueAttributes{\n  name: string\n  createdAt?: string\n  updatedAt?: string\n  publishedAt?: string\n}\n\ninterface Meta{}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamMappingStrapi implements IBaseMapping {\n  \n\n  setAdd(data: Team):TeamData {\n      return {\n          data:{\n              name: data.name,\n              numberOfPlayers: data.numberOfPlayers,\n              pts: data.pts,\n              nMatches: data.nMatches,\n              league: data.league?Number(data.league): null\n          }\n      };\n  }\n  setUpdate(data: Team):TeamData {\n      const mappedData: Partial = {} \n      Object.keys(data).forEach(key=>{\n          switch(key){\n              case 'name': mappedData.name=data[key];\n              break;\n              case 'numberOfPlayers': mappedData.numberOfPlayers=data[key];\n              break;\n              case 'pts': mappedData.pts=data[key];\n              break;\n              case 'nMatches': mappedData.nMatches=data[key];\n              break;\n              case 'league': mappedData.league=data[key] ? Number(data[key]) : null;\n              break;\n              \n              default:\n          }\n      });\n      return {data: mappedData as TeamAttributes};\n  }\n  getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n      return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data)=>{\n          return this.getOne(d);\n      })};\n  }\n  getOne(data: Data | TeamRaw): Team {\n      const isTeamRaw = (data: Data | TeamRaw): data is TeamRaw => 'meta' in data;\n      \n      const attributes = isTeamRaw(data) ? data.data.attributes : data.attributes;\n      const id = isTeamRaw(data) ? data.data.id : data.id;\n\n      return {\n          id: id.toString(),\n          name: attributes.name,\n          numberOfPlayers: attributes.numberOfPlayers,\n          pts: attributes.pts,\n          nMatches: attributes.nMatches,\n          league: typeof attributes.league === 'object' ? attributes.league?.data?.id.toString() : undefined\n      };\n  }\n  getAdded(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getUpdated(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n  getDeleted(data: TeamRaw):Team {\n      return this.getOne(data.data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamSelectableComponent.html":{"url":"components/TeamSelectableComponent.html","title":"component - TeamSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/team-selectable/team-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TeamSelectableComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                app-team-selectable\n            \n\n\n\n            \n                styleUrls\n                ./team-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./team-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _teams\n                            \n                            \n                                disabled\n                            \n                            \n                                page\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                    \n                                popover\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                teams$\n                            \n                            \n                                teamSelected\n                            \n                            \n                                    Public\n                                teamSvc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                deselect\n                            \n                            \n                                loadMoreTeams\n                            \n                            \n                                    Private\n                                    Async\n                                loadTeams\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onGroupClicked\n                            \n                            \n                                onLoadTeams\n                            \n                            \n                                onMoreTeams\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectTeam\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamSvc: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamSvc\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMoreTeams\n                        \n                    \n                \n            \n            \n                \nloadMoreTeams(notify: HTMLIonInfiniteScrollElement | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                notify\n                                            \n                                                        HTMLIonInfiniteScrollElement | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadTeams\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGroupClicked\n                        \n                    \n                \n            \n            \n                \nonGroupClicked(popover: IonPopover, group: Team)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                group\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoadTeams\n                        \n                    \n                \n            \n            \n                \nonLoadTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoreTeams\n                        \n                    \n                \n            \n            \n                \nonMoreTeams(ev: InfiniteScrollCustomEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                        InfiniteScrollCustomEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectTeam(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _teams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        popover\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonPopover | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('popover', {read: IonPopover})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        teams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._teams.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        teamSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-selectable/team-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, OnInit, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, InfiniteScrollCustomEvent, IonInput } from '@ionic/angular';\nimport { BehaviorSubject, lastValueFrom } from 'rxjs';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { Team } from 'src/app/core/models/teams.model';\nimport { TeamService } from 'src/app/core/services/impl/team.service';\n\n@Component({\n  selector: 'app-team-selectable',\n  templateUrl: './team-selectable.component.html',\n  styleUrls: ['./team-selectable.component.scss'],\n  providers:[{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TeamSelectableComponent),\n    multi: true\n  }]\n})\nexport class TeamSelectableComponent  implements OnInit {\n\n  teamSelected:Team | null = null;\n  disabled:boolean = true;\n  private _teams:BehaviorSubject = new BehaviorSubject([]);\n  public teams$ = this._teams.asObservable();\n\n  propagateChange = (obj: any) => {}\n\n  @ViewChild('popover', { read: IonPopover }) popover: IonPopover | undefined;\n\n  page:number = 1;\n  pageSize:number = 25;\n  pages:number = 0;\n  constructor(\n    public teamSvc:TeamService\n  ) { \n  }\n  ngOnDestroy(): void {\n    this.popover?.dismiss();\n  }\n  \n  onLoadTeams(){\n    this.loadTeams();\n  }\n\n  \n\n  private async loadTeams(){\n    this.page = 1;\n    this.teamSvc.getAll(this.page, this.pageSize).subscribe({\n      next:response=>{\n        this._teams.next([...response.data]);\n        this.page++;\n        this.pages = response.pages;\n      },\n      error:err=>{}\n    }) \n  }\n\n\n  loadMoreTeams(notify:HTMLIonInfiniteScrollElement | null = null) {\n    if(this.page)=>{\n          this._teams.next([...this._teams.value, ...response.data]);\n          this.page++;\n          notify?.complete();\n        }\n      });\n    }\n    else{\n      notify?.complete();\n    }\n  }\n  \n  onMoreTeams(ev:InfiniteScrollCustomEvent){\n    this.loadMoreTeams(ev.target);\n  }\n\n  private async selectTeam(id:string|undefined, propagate:boolean=false){\n    if(id){\n      this.teamSelected  = await lastValueFrom(this.teamSvc.getById(id));\n    }\n    else\n      this.teamSelected = null;\n    if(propagate && this.teamSelected)\n      this.propagateChange(this.teamSelected.id);\n  }\n  \n  writeValue(obj: any): void {\n    this.selectTeam(obj);\n      \n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    \n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit() {}\n\n\n  onGroupClicked(popover:IonPopover, group:Team){\n    this.selectTeam(group.id, true);\n    popover.dismiss();\n  }\n\n  clearSearch(input:IonInput){\n    input.value = \"\";\n  }\n\n  deselect(popover:IonPopover|null=null){\n    this.selectTeam(undefined, true);\n    if(popover)\n      popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'TEAM_SELECTABLE.SELECT_TEAM' | translate }}\n      {{ 'TEAM_SELECTABLE.NONE' | translate }}\n      {{teamSelected.name}}\n    \n    \n  \n  \n    \n      \n        \n          \n            \n              \n              \n            \n\n          \n          \n            \n              {{ 'TEAM_SELECTABLE.NONE' | translate }}\n            \n            \n              {{team.name}} \n            \n            \n              \n            \n          \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./team-selectable.component.scss\n                \n                .popover-content {\n  height: 300px;\n  /* Remove the overflow here since we'll handle it in scrollable-content */\n  overflow: hidden;\n}\n\n.fixed-search {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  background-color: #355e38 ;\n  /* Add a subtle shadow to separate it from content */\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.scrollable-content {\n  height: 300px;\n  overflow-y: auto;\n  \n  /* Firefox */\n  scrollbar-width: thin;\n  scrollbar-color: #355e38 rgba(255, 255, 255, 0.1);\n  \n  /* Chrome/Safari/Edge */\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #355e38;\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #355e38;\n    border-radius: 4px;\n  }\n  \n  /* Hover state */\n  &:hover {\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n\n    &::-webkit-scrollbar-track {\n      background: #589e5c;\n      border-radius: 4px;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      background: #589e5c;\n    }\n  }\n}\n\n/* Make sure the ion-list doesn't add its own scroll */\n.list-scrollable {\n  overflow: hidden;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'TEAM_SELECTABLE.SELECT_TEAM\\' | translate }}      {{ \\'TEAM_SELECTABLE.NONE\\' | translate }}      {{teamSelected.name}}                                                                                                                                          {{ \\'TEAM_SELECTABLE.NONE\\' | translate }}                                      {{team.name}}                                                                                           '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'TeamSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/team.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeamByLeague\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ITeamRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/team.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ITeamRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamByLeague\n                        \n                    \n                \n            \n            \n                \ngetTeamByLeague(league: string, page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/team.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                league\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@angular/core\";\nimport { Team } from \"../../models/teams.model\";\nimport { TEAM_REPOSITORY_TOKEN } from \"../../repositories/repository.tokens\";\nimport { ITeamService } from \"../interfaces/team-service.interface\";\nimport { BaseService } from \"./base-service.service\";\nimport { Observable } from \"rxjs\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { ITeamRepository } from \"../../repositories/intefaces/team-repository.interface\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService extends BaseService implements ITeamService {\n  constructor(\n    @Inject(TEAM_REPOSITORY_TOKEN) repository: ITeamRepository\n  ) {\n    super(repository);\n  }\n  getTeamByLeague(league: string, page: number, pageSize: number): Observable> {\n    const leagueId = league.split('/').pop() ?? league;\n    const filters = { league: leagueId };\n    return this.repository.getAll(page, pageSize, filters) as Observable>;\n  }\n\n  // Implementa métodos específicos si los hay\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsPageModule.html":{"url":"modules/TeamsPageModule.html","title":"module - TeamsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamsPageModule\n\n\n\ncluster_TeamsPageModule_imports\n\n\n\ncluster_TeamsPageModule_declarations\n\n\n\n\nTeamsPage\n\nTeamsPage\n\n\n\nTeamsPageModule\n\nTeamsPageModule\n\nTeamsPageModule -->\n\nTeamsPage->TeamsPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamsPageModule -->\n\nSharedModule->TeamsPageModule\n\n\n\n\n\nTeamsPageRoutingModule\n\nTeamsPageRoutingModule\n\nTeamsPageModule -->\n\nTeamsPageRoutingModule->TeamsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/teams/teams.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TeamsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TeamsPageRoutingModule } from './teams-routing.module';\n\nimport { TeamsPage } from './teams.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    TeamsPageRoutingModule,\n    TranslateModule.forChild()],\n  declarations: [TeamsPage]\n})\nexport class TeamsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsPageRoutingModule.html":{"url":"modules/TeamsPageRoutingModule.html","title":"module - TeamsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/teams/teams-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TeamsPage } from './teams.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeamsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thumbnail.html":{"url":"interfaces/Thumbnail.html","title":"interface - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService{\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimeDirectiveDirective.html":{"url":"directives/TimeDirectiveDirective.html","title":"directive - TimeDirectiveDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TimeDirectiveDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/time-directive/time-directive.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFormatDate]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appFormatDate\n                            \n                            \n                                format\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, locale: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/time-directive/time-directive.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appFormatDate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/time-directive/time-directive.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        format\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fullDate'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/time-directive/time-directive.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/time-directive/time-directive.directive.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Inject, Input, LOCALE_ID, OnChanges } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Directive({\n  selector: '[appFormatDate]' // Debe coincidir con lo que usas en el HTML\n})\n\nexport class TimeDirectiveDirective implements OnChanges {\n  @Input('appFormatDate') date!: string; // Recibe la fecha\n  @Input() format: string = 'fullDate'; // Formato por defecto\n\n  constructor(private el: ElementRef, @Inject(LOCALE_ID) private locale: string) {}\n\n  ngOnChanges() {\n    if (this.date) {\n      try {\n        // For debugging\n        console.log('Input date:', this.date, 'Format:', this.format);\n        \n        // If it's just a time string, create a full date\n        let dateValue = this.date;\n        if (/^\\d{1,2}:\\d{1,2}(:\\d{1,2})?$/.test(this.date)) {\n          const today = new Date();\n          dateValue = `${today.toISOString().split('T')[0]}T${this.date}`;\n        }\n        \n        this.el.nativeElement.innerText = formatDate(dateValue, this.format, this.locale);\n      } catch (error) {\n        console.error('Error formatting date:', error, 'Input was:', this.date);\n        // Fallback behavior - display original value\n        this.el.nativeElement.innerText = this.date;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload{\n    email:string,\n    password:string\n}\n\nexport interface SignUpPayload{\n    email:string,\n    password:string,\n    name:string,\n    surname:string,\n    birthDate:string,\n    gender:string,\n    group:string,\n    user:string\n}\n\nexport interface User{\n    id:string,\n    username:string,\n    email:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserAttributes.html":{"url":"interfaces/UserAttributes.html","title":"interface - UserAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         UserAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRaw.html":{"url":"interfaces/UserRaw.html","title":"interface - UserRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-local-storage.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\n\ninterface UserRaw{\n    id:string,\n    name:{\n        title:string;\n        first:string;\n        last:string;\n    },\n    age:number,\n    picture:{\n        url:string,\n        large:string,\n        medium:string,\n        small:string,\n        thumbnail:string\n    },\n    role:string\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Users) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: UserRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:UserRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: UserRaw):Users {\n        return {\n            id:data.id, \n            name:data.name.first, \n            surname:data.name.last, \n            picture:{\n                url:data.picture.url,\n                large:data.picture.large, \n                medium:data.picture.medium,\n                small:data.picture.small,\n                thumbnail:data.picture.thumbnail\n            },\n            role:data.role};\n    }\n    getAdded(data: UserRaw):Users {\n        return this.getOne(data);\n    }\n    getUpdated(data: UserRaw):Users {\n        return this.getOne(data);\n    }\n    getDeleted(data: UserRaw):Users {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRaw-1.html":{"url":"interfaces/UserRaw-1.html","title":"interface - UserRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Users.html":{"url":"interfaces/Users.html","title":"interface - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/users.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            leagueFav\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playerFav\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamFav\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leagueFav\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leagueFav:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playerFav\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playerFav:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamFav\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamFav:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Users extends Model{\n    name:string,\n    surname:string,\n    email?:string, //TODO: Quitar interrogación más adelante\n    picture?:{\n        url:string | undefined,\n        large:string | undefined,\n        medium:string | undefined,\n        small:string | undefined,\n        thumbnail:string | undefined\n    },\n    role:string,\n    userId?:string,\n    playerFav?:string,\n    teamFav?:string,\n    leagueFav?:string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersLocalStorageMapping.html":{"url":"injectables/UsersLocalStorageMapping.html","title":"injectable - UsersLocalStorageMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersLocalStorageMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: UserRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-local-storage.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: UserRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-local-storage.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: UserRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-local-storage.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: UserRaw[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-local-storage.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        UserRaw[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: UserRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-local-storage.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Users)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Users\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-local-storage.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\n\ninterface UserRaw{\n    id:string,\n    name:{\n        title:string;\n        first:string;\n        last:string;\n    },\n    age:number,\n    picture:{\n        url:string,\n        large:string,\n        medium:string,\n        small:string,\n        thumbnail:string\n    },\n    role:string\n}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersLocalStorageMapping implements IBaseMapping {\n    setAdd(data: Users) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setUpdate(data: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getPaginated(page:number, pageSize:number, pages:number, data: UserRaw[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:UserRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: UserRaw):Users {\n        return {\n            id:data.id, \n            name:data.name.first, \n            surname:data.name.last, \n            picture:{\n                url:data.picture.url,\n                large:data.picture.large, \n                medium:data.picture.medium,\n                small:data.picture.small,\n                thumbnail:data.picture.thumbnail\n            },\n            role:data.role};\n    }\n    getAdded(data: UserRaw):Users {\n        return this.getOne(data);\n    }\n    getUpdated(data: UserRaw):Users {\n        return this.getOne(data);\n    }\n    getDeleted(data: UserRaw):Users {\n        return this.getOne(data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersMappingFirebase.html":{"url":"injectables/UsersMappingFirebase.html","title":"injectable - UsersMappingFirebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersMappingFirebase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/users-mapping-firebase.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-firebase.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-firebase.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-firebase.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, total: number, data: ()[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-firebase.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                total\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        ()[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-firebase.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Users)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-firebase.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Users\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-firebase.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FirebaseUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/users-mapping-firebase.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Player } from \"../../models/players.model\";\nimport { doc, Firestore, getFirestore } from \"firebase/firestore\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { FIREBASE_CONFIG_TOKEN } from \"../repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\nimport { FirebasePlayer } from \"../../models/firebase-player.model\";\nimport { Users } from \"../../models/users.model\";\nimport { FirebaseUser } from \"../../models/firebase-user.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersMappingFirebase implements IBaseMapping{\n  \n  private db: Firestore;\n  \n  constructor(@Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any){\n    this.db = getFirestore(initializeApp(firebaseConfig))\n  }\n  getPaginated(page: number, pageSize: number, total: number, data: ({ id: string } & FirebaseUser)[]): Paginated {\n    return{\n      page,\n      pageSize,\n      pages: Math.ceil(total/pageSize),\n      data: data.map(item => this.getOne(item))\n    }\n  }\n  getOne(data: { id: string } & FirebaseUser): Users {\n    return {\n      id: data.id,\n      name: data.name,\n      surname: data.surname,\n      email: data.email,\n      picture: data.picture ? {\n        url: data.picture,\n        large: data.picture,\n        medium: data.picture,\n        small: data.picture,\n        thumbnail: data.picture\n      }: undefined,\n      role: data.role,\n      userId: data.userId,\n      playerFav: data.playerFav?.id,\n      teamFav: data.teamFav?.id,\n      leagueFav: data.leagueFav?.id      \n    };\n  }\n  getAdded(data: { id: string } & FirebaseUser): Users {\n    return this.getOne(data)\n  }\n  getUpdated(data: { id: string } & FirebaseUser): Users {\n    return this.getOne(data)\n  }\n  getDeleted(data: { id: string } & FirebaseUser): Users {\n    return this.getOne(data)\n  }\n  setAdd(data: Users): FirebaseUser {\n    let dataMapping:FirebaseUser = {\n        name: data.name,\n        surname: data.surname,\n        email: data.email,\n        userId: data.userId || '',\n        picture: data.picture?.url || '',\n        role: data.role,\n    }\n    if(data.playerFav){\n      dataMapping.playerFav = doc(this.db, 'players', data.playerFav || '')\n    }\n\n    if(data.teamFav){\n      dataMapping.teamFav = doc(this.db, 'teams', data.teamFav || '')\n    }\n\n    if(data.leagueFav){\n      dataMapping.leagueFav = doc(this.db, 'leagues', data.leagueFav || '')\n    }\n    return dataMapping;\n  }\n  setUpdate(data: Partial): FirebaseUser {\n    const result: any = {};\n    if (data.name) result.name = data.name;\n    if (data.surname) result.surname = data.surname;\n    if (data.email) result.email = data.email;\n    if (data.picture) result.picture = data.picture?.url || '';\n    if (data.role) result.role  = data.role\n    result.playerFav = data.playerFav ? doc(this.db, 'players', data.playerFav) : null;\n    result.teamFav = data.teamFav ? doc(this.db, 'teams', data.teamFav) : null;\n    result.leagueFav = data.leagueFav ? doc(this.db, 'leagues', data.leagueFav) : null;\n    return result;\n  }\n  \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersMappingStrapi.html":{"url":"injectables/UsersMappingStrapi.html","title":"injectable - UsersMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/users-mapping-strapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: PersonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-strapi.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PersonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: PersonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-strapi.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PersonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: Data | PersonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-strapi.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Data | PersonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: Data[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-strapi.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Data[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: PersonRaw)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-strapi.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            PersonRaw\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Users\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Users)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-strapi.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Users\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PersonData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/users-mapping-strapi.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PersonData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Users } from \"../../models/users.model\";\nimport { StrapiMedia } from \"../../services/impl/strapi-media.service\";\n\n\ninterface MediaRaw{\n    data: StrapiMedia\n}\ninterface UserRaw{\n    data: UserData\n}\n\ninterface UserData{\n    id: number\n    attributes: UserAttributes\n}\n\ninterface UserAttributes {\n    username: string\n    email: string\n    provider: string\n    confirmed: boolean\n    blocked: boolean\n    createdAt: string\n    updatedAt: string\n  }\n\n  \n  \n\ninterface PersonRaw {\n    data: Data\n    meta: Meta\n  }\n  \ninterface Data {\n    id: number\n    attributes: PersonAttributes\n}\ninterface PersonData {\n    data: PersonAttributes;\n}\n\ninterface PersonAttributes {\n    name: string\n    surname: string\n    birthdate?: string\n    createdAt?: string\n    updatedAt?: string\n    publishedAt?: string\n    user:UserRaw | number | null,\n    picture:MediaRaw | number | null,\n    role:string\n}\n\n\ninterface Meta {}\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class UsersMappingStrapi implements IBaseMapping {\n\n    setAdd(data: Users):PersonData {\n        return {\n            data:{\n                name:data.name,\n                surname:data.surname,\n                user:data.userId?Number(data.userId):null,\n                picture:data.picture?Number(data.picture):null,\n                role:data.role\n            }\n        };\n    }\n    setUpdate(data: Partial): PersonData {\n        const mappedData: Partial = {};\n\n        Object.keys(data).forEach(key => {\n            switch(key){\n                case 'name': mappedData.name = data[key];\n                break;\n                case 'surname': mappedData.surname = data[key];\n                break;\n                case 'userId': mappedData.user = data[key] ? Number(data[key]) : null;\n                break;\n                case 'picture': mappedData.picture = data[key] ? Number(data[key]) : null;\n                break;\n                case 'role':mappedData.role = data[key]\n                break;\n            }\n        });\n\n        return {\n            data: mappedData as PersonAttributes\n        };\n    }\n\n    getPaginated(page:number, pageSize: number, pages:number, data:Data[]): Paginated {\n        return {page:page, pageSize:pageSize, pages:pages, data:data.map((d:Data|PersonRaw)=>{\n            return this.getOne(d);\n        })};\n    }\n    getOne(data: Data | PersonRaw): Users {\n        const isPersonRaw = (data: Data | PersonRaw): data is PersonRaw => 'meta' in data;\n\n        const attributes = isPersonRaw(data) ? data.data.attributes : data.attributes;\n        const id = isPersonRaw(data) ? data.data.id : data.id;\n        \n        return {\n            id: id.toString(),\n            name: attributes.name,\n            surname: attributes.surname,\n            userId: typeof attributes.user === 'object' ? attributes.user?.data?.id.toString() : undefined,\n            picture: typeof attributes.picture === 'object' ? {\n                url: attributes.picture?.data?.attributes?.url,\n                large: attributes.picture?.data?.attributes?.formats?.large?.url || attributes.picture?.data?.attributes?.url,\n                medium: attributes.picture?.data?.attributes?.formats?.medium?.url || attributes.picture?.data?.attributes?.url,\n                small: attributes.picture?.data?.attributes?.formats?.small?.url || attributes.picture?.data?.attributes?.url,\n                thumbnail: attributes.picture?.data?.attributes?.formats?.thumbnail?.url || attributes.picture?.data?.attributes?.url,\n            } : undefined,\n            role: attributes.role\n        };\n    }\n    getAdded(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getUpdated(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n    getDeleted(data: PersonRaw):Users {\n        return this.getOne(data.data);\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersPage.html":{"url":"components/UsersPage.html","title":"component - UsersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/users/users.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n\n\n            \n                styleUrls\n                ./users.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateUserRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, toastController: ToastController, languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/users/users.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers\n                        \n                    \n                \n            \n            \n                \nloadUsers(event?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.page.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.page.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserRole(user: Users)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/users/users.page.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Users\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.page.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Users[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.page.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { Users } from 'src/app/core/models/users.model';\nimport { UsersService } from 'src/app/core/services/impl/users.service';\nimport { LanguageService } from 'src/app/core/services/language.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss'],\n})\nexport class UsersPage implements OnInit {\n  users: Users[] = [];\n  currentLang: string\n\n  constructor(\n    private usersService: UsersService,\n    private toastController: ToastController,\n    private languageService: LanguageService\n  ) {\n    this.currentLang = this.languageService.getStoredLanguage();\n  }\n\n  ngOnInit() {\n    this.loadUsers();\n  }\n\n  loadUsers(event?: any): void {\n    this.usersService.getAll().subscribe({\n      next: (data: any) => {\n        if (Array.isArray(data)) {\n          this.users = data;\n        } else {\n          this.users = data?.data || [];\n        }\n        if (event) event.target.complete();\n      },\n      error: err => {\n        console.error('Error cargando usuarios:', err);\n        if (event) event.target.complete();\n      }\n    });\n  }\n\n  async updateUserRole(user: Users): Promise {\n    const updatedUser: Partial = {\n      role: user.role\n    };\n  \n    this.usersService.update(user.id!, updatedUser as Users).subscribe({\n      next: async () => {\n        const toast = await this.toastController.create({\n          message: `Usuario ${user.name} ahora es ${user.role}`,\n          duration: 2500,\n          position: 'bottom',\n          color: 'success'\n        });\n        await toast.present();\n      },\n      error: async (err) => {\n        console.error('Error al actualizar el rol:', err);\n        const toast = await this.toastController.create({\n          message: 'Hubo un error al actualizar el rol.',\n          duration: 3000,\n          position: 'bottom',\n          color: 'danger'\n        });\n        await toast.present();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        {{\"USERS.TITLE\" | translate}}\n      \n    \n  \n\n  \n    \n      \n    \n\n     0; else noUsers\" class=\"bg-white/0 mb-20\" style=\"--background: transparent;\">\n      \n        \n          \n            \n            \n              \n              \n            \n\n\n            \n              \n                {{ user.name }} {{ user.surname }}\n              \n              \n                {{ user.email }}\n              \n            \n\n            \n              \n                Admin\n                User\n              \n            \n\n\n            \n              \n                \n              \n            \n          \n        \n      \n    \n\n    \n      \n        \n        {{\"USERS.NO_USERS\"}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./users.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{\"USERS.TITLE\" | translate}}                                 0; else noUsers\" class=\"bg-white/0 mb-20\" style=\"--background: transparent;\">                                                                                                                                  {{ user.name }} {{ user.surname }}                                            {{ user.email }}                                                                    Admin                User                                                                                                                                                    {{\"USERS.NO_USERS\"}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LanguageSelectorComponent', 'selector': 'app-language-selector'},{'name': 'LeagueCreateModalComponent', 'selector': 'app-league-create-modal'},{'name': 'LeagueSelectableComponent', 'selector': 'app-league-selectable'},{'name': 'LeaguesPage', 'selector': 'app-leagues'},{'name': 'LineupsPage', 'selector': 'app-lineups'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MatchCreateComponent', 'selector': 'app-match-create'},{'name': 'MatchesPage', 'selector': 'app-matches'},{'name': 'MatchMenuComponent', 'selector': 'app-match-menu'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayerCreateModalComponent', 'selector': 'app-player-create-modal'},{'name': 'PlayerModalComponent', 'selector': 'app-player-modal'},{'name': 'PlayersPage', 'selector': 'app-players'},{'name': 'PositionSelectableComponent', 'selector': 'app-position-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SplashPage', 'selector': 'app-splash'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TeamCreateModalComponent', 'selector': 'app-team-create-modal'},{'name': 'TeamSelectableComponent', 'selector': 'app-team-selectable'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'},{'name': 'FilterByTeamDirective', 'selector': '[appFilterByTeam]'},{'name': 'HighLightDirective', 'selector': '[appHighlight]'},{'name': 'TimeDirectiveDirective', 'selector': '[appFormatDate]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersPageModule.html":{"url":"modules/UsersPageModule.html","title":"module - UsersPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersPageModule\n\n\n\ncluster_UsersPageModule_imports\n\n\n\ncluster_UsersPageModule_declarations\n\n\n\n\nUsersPage\n\nUsersPage\n\n\n\nUsersPageModule\n\nUsersPageModule\n\nUsersPageModule -->\n\nUsersPage->UsersPageModule\n\n\n\n\n\nUsersPageRoutingModule\n\nUsersPageRoutingModule\n\nUsersPageModule -->\n\nUsersPageRoutingModule->UsersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UsersPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsersPageRoutingModule } from './users-routing.module';\n\nimport { UsersPage } from './users.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UsersPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [UsersPage]\n})\nexport class UsersPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersPageRoutingModule.html":{"url":"modules/UsersPageRoutingModule.html","title":"module - UsersPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/users/users-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsersPage } from './users.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/users.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getByUserId\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IUserRepository, authSvc: BaseAuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByUserId\n                        \n                    \n                \n            \n            \n                \ngetByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/users.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/users.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { IUserService } from '../interfaces/users-service.interface';\nimport { Users } from '../../models/users.model';\nimport { USER_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { IUserRepository } from '../../repositories/intefaces/users-repository.interface';\nimport { map, Observable, of, switchMap } from 'rxjs';\nimport { BaseAuthenticationService } from './base-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService extends BaseService implements IUserService {\n  constructor(\n    @Inject(USER_REPOSITORY_TOKEN) repository: IUserRepository,\n    private authSvc: BaseAuthenticationService\n  ) {\n    super(repository);\n  }\n  \n  // Implementa métodos específicos si los hay\n  getByUserId(userId: string): Observable {\n    return this.repository.getAll(1, 1, {userId: userId}).pipe(\n      map(res => Array.isArray(res) ? res[0] || null : res.data[0] || null)\n    );\n  }\n\n  getCurrentUser(): Observable {\n    return this.authSvc.user$.pipe(\n      switchMap(authUser => {\n        console.log('Auth user:', authUser);\n        if (authUser?.id) {\n          return this.getByUserId(authUser.id).pipe(\n            map(user => {\n              console.log('DB user:', user);\n              return user;\n            })\n          );\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n  \n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @capacitor/app : 6.0.2\n        \n            @capacitor/core : 6.2.0\n        \n            @capacitor/haptics : 6.0.2\n        \n            @capacitor/keyboard : 6.0.3\n        \n            @capacitor/share : ^6.0.0\n        \n            @capacitor/status-bar : 6.0.2\n        \n            @ionic/angular : ^8.0.0\n        \n            @lottiefiles/dotlottie-web : ^0.38.1\n        \n            @ngx-translate/core : ^16.0.3\n        \n            @ngx-translate/http-loader : ^16.0.0\n        \n            firebase : ^11.1.0\n        \n            ionicons : ^7.0.0\n        \n            lottie-web : ^5.12.2\n        \n            ngx-lottie : ^12.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBaseAuthMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createBaseMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createBaseRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/repositories/repository.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBaseAuthMappingFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseAuthMappingFactory(token: InjectionToken, dependencies)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBaseMappingFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseMappingFactory(token: InjectionToken, dependencies, modelType)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                modelType\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBaseRepositoryFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseRepositoryFactory(token: InjectionToken, dependencies)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCollectionSubscriptionFactory\n                        \n                    \n                \n            \n            \n                \ncreateCollectionSubscriptionFactory(collectionName: string, mappingToken: InjectionToken, collectionSubscriptionToken: InjectionToken)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mappingToken\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                collectionSubscriptionToken\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/utils/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/utils/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator(group: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFutManager⚽\nFutManager es una aplicación web y móvil que permite a los usuarios gestionar su equipo de fútbol de manera fácil y efectiva. La app ofrece funcionalidades para administrar jugadores, equipos y ligas, todo en un solo lugar.\n✨Características\n\nGestión de Jugadores: Agrega, edita y elimina jugadores de tu equipo.\nGestión de Equipos: Agrega, edita y elimina equipos de tus ligas.\nGestión de Ligas: Agrega, edita y elimina ligas de tu sistema.\nPágina de contacto: Forma de contactar con el creador de la página.\nPágina de Inicio: Página principal que permite la navegación a todas las secciones.\nLogin: Autenticación de usuarios para garantizar acceso seguro.\nRegistro: Permite a los usuarios registrarse con nombre, apellidos, email y contraseña.\nPágina de Usuario: Sección donde los usuarios pueden ver y editar su perfil.\nPágina de Partidos: Permite gestionar y visualizar partidos de fútbol, con la posibilidad de compartirlos mediante un plugin de capacitor.\nSubida de Imágenes: Posibilidad de cargar imágenes a la base de datos.\nSplash/Lottie: Pantalla de carga animada.\nIntegración de CustomValueAccessor.\n\n🚀 Tecnologías\nEste proyecto está desarrollado utilizando las siguientes tecnologías:\n\nIonic\nAngular\nTypeScript\nFirebase (Base de datos y almacenamiento de imágenes)\nPatrón Repositorio\n\n🛠 Requisitos de instalación\n\nNode.js (versión 16+)\nIonic CLI\nAngular CLI\n\n🔗 Información y enlaces\n\nEnlace a Firebase: (Agregar enlace si es público)\nEnlace a la aplicación en Netlify: FutManager en Netlify\nEnlace a YouTube: Demostración en YouTube\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeaguesPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeaguesPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LineupsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LineupsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchesPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchesPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayersPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayersPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SplashPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SplashPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatisticsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatisticsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_LeaguesPageModule\n\n\n\ncluster_LeaguesPageModule_declarations\n\n\n\ncluster_LeaguesPageModule_imports\n\n\n\ncluster_LineupsPageModule\n\n\n\ncluster_LineupsPageModule_declarations\n\n\n\ncluster_LineupsPageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_MatchesPageModule\n\n\n\ncluster_MatchesPageModule_declarations\n\n\n\ncluster_MatchesPageModule_imports\n\n\n\ncluster_PlayersPageModule\n\n\n\ncluster_PlayersPageModule_declarations\n\n\n\ncluster_PlayersPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SplashPageModule\n\n\n\ncluster_SplashPageModule_imports\n\n\n\ncluster_StatisticsPageModule\n\n\n\ncluster_StatisticsPageModule_declarations\n\n\n\ncluster_StatisticsPageModule_imports\n\n\n\ncluster_TeamsPageModule\n\n\n\ncluster_TeamsPageModule_declarations\n\n\n\ncluster_TeamsPageModule_imports\n\n\n\ncluster_UsersPageModule\n\n\n\ncluster_UsersPageModule_declarations\n\n\n\ncluster_UsersPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nLeaguesPageModule\n\nLeaguesPageModule\n\nLeaguesPageModule -->\n\nSharedModule->LeaguesPageModule\n\n\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\nMatchesPageModule\n\nMatchesPageModule\n\nMatchesPageModule -->\n\nSharedModule->MatchesPageModule\n\n\n\n\n\nPlayersPageModule\n\nPlayersPageModule\n\nPlayersPageModule -->\n\nSharedModule->PlayersPageModule\n\n\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nSharedModule->RegisterPageModule\n\n\n\n\n\nDragDropDirective \n\nDragDropDirective \n\nDragDropDirective  -->\n\nSharedModule->DragDropDirective \n\n\n\n\n\nFilterByTeamDirective \n\nFilterByTeamDirective \n\nFilterByTeamDirective  -->\n\nSharedModule->FilterByTeamDirective \n\n\n\n\n\nHighLightDirective \n\nHighLightDirective \n\nHighLightDirective  -->\n\nSharedModule->HighLightDirective \n\n\n\n\n\nLanguageSelectorComponent \n\nLanguageSelectorComponent \n\nLanguageSelectorComponent  -->\n\nSharedModule->LanguageSelectorComponent \n\n\n\n\n\nLeagueCreateModalComponent \n\nLeagueCreateModalComponent \n\nLeagueCreateModalComponent  -->\n\nSharedModule->LeagueCreateModalComponent \n\n\n\n\n\nLeagueSelectableComponent \n\nLeagueSelectableComponent \n\nLeagueSelectableComponent  -->\n\nSharedModule->LeagueSelectableComponent \n\n\n\n\n\nMatchCreateComponent \n\nMatchCreateComponent \n\nMatchCreateComponent  -->\n\nSharedModule->MatchCreateComponent \n\n\n\n\n\nMatchMenuComponent \n\nMatchMenuComponent \n\nMatchMenuComponent  -->\n\nSharedModule->MatchMenuComponent \n\n\n\n\n\nPasswordTogglePipe \n\nPasswordTogglePipe \n\nPasswordTogglePipe  -->\n\nSharedModule->PasswordTogglePipe \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nPlayerCreateModalComponent \n\nPlayerCreateModalComponent \n\nPlayerCreateModalComponent  -->\n\nSharedModule->PlayerCreateModalComponent \n\n\n\n\n\nPlayerModalComponent \n\nPlayerModalComponent \n\nPlayerModalComponent  -->\n\nSharedModule->PlayerModalComponent \n\n\n\n\n\nPositionSelectableComponent \n\nPositionSelectableComponent \n\nPositionSelectableComponent  -->\n\nSharedModule->PositionSelectableComponent \n\n\n\n\n\nTeamCreateModalComponent \n\nTeamCreateModalComponent \n\nTeamCreateModalComponent  -->\n\nSharedModule->TeamCreateModalComponent \n\n\n\n\n\nTeamSelectableComponent \n\nTeamSelectableComponent \n\nTeamSelectableComponent  -->\n\nSharedModule->TeamSelectableComponent \n\n\n\n\n\nTimeDirectiveDirective \n\nTimeDirectiveDirective \n\nTimeDirectiveDirective  -->\n\nSharedModule->TimeDirectiveDirective \n\n\n\n\n\nTeamsPageModule\n\nTeamsPageModule\n\nTeamsPageModule -->\n\nSharedModule->TeamsPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nLeaguesPage\n\nLeaguesPage\n\nLeaguesPageModule -->\n\nLeaguesPage->LeaguesPageModule\n\n\n\n\n\nLeaguesPageRoutingModule\n\nLeaguesPageRoutingModule\n\nLeaguesPageModule -->\n\nLeaguesPageRoutingModule->LeaguesPageModule\n\n\n\n\n\nLineupsPage\n\nLineupsPage\n\n\n\nLineupsPageModule\n\nLineupsPageModule\n\nLineupsPageModule -->\n\nLineupsPage->LineupsPageModule\n\n\n\n\n\nLineupsPageRoutingModule\n\nLineupsPageRoutingModule\n\nLineupsPageModule -->\n\nLineupsPageRoutingModule->LineupsPageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nMatchesPage\n\nMatchesPage\n\nMatchesPageModule -->\n\nMatchesPage->MatchesPageModule\n\n\n\n\n\nMatchesPageRoutingModule\n\nMatchesPageRoutingModule\n\nMatchesPageModule -->\n\nMatchesPageRoutingModule->MatchesPageModule\n\n\n\n\n\nPlayersPage\n\nPlayersPage\n\nPlayersPageModule -->\n\nPlayersPage->PlayersPageModule\n\n\n\n\n\nPlayersPageRoutingModule\n\nPlayersPageRoutingModule\n\nPlayersPageModule -->\n\nPlayersPageRoutingModule->PlayersPageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nDragDropDirective\n\nDragDropDirective\n\nSharedModule -->\n\nDragDropDirective->SharedModule\n\n\n\n\n\nFilterByTeamDirective\n\nFilterByTeamDirective\n\nSharedModule -->\n\nFilterByTeamDirective->SharedModule\n\n\n\n\n\nHighLightDirective\n\nHighLightDirective\n\nSharedModule -->\n\nHighLightDirective->SharedModule\n\n\n\n\n\nLanguageSelectorComponent\n\nLanguageSelectorComponent\n\nSharedModule -->\n\nLanguageSelectorComponent->SharedModule\n\n\n\n\n\nLeagueCreateModalComponent\n\nLeagueCreateModalComponent\n\nSharedModule -->\n\nLeagueCreateModalComponent->SharedModule\n\n\n\n\n\nLeagueSelectableComponent\n\nLeagueSelectableComponent\n\nSharedModule -->\n\nLeagueSelectableComponent->SharedModule\n\n\n\n\n\nMatchCreateComponent\n\nMatchCreateComponent\n\nSharedModule -->\n\nMatchCreateComponent->SharedModule\n\n\n\n\n\nMatchMenuComponent\n\nMatchMenuComponent\n\nSharedModule -->\n\nMatchMenuComponent->SharedModule\n\n\n\n\n\nPasswordTogglePipe\n\nPasswordTogglePipe\n\nSharedModule -->\n\nPasswordTogglePipe->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nPlayerCreateModalComponent\n\nPlayerCreateModalComponent\n\nSharedModule -->\n\nPlayerCreateModalComponent->SharedModule\n\n\n\n\n\nPlayerModalComponent\n\nPlayerModalComponent\n\nSharedModule -->\n\nPlayerModalComponent->SharedModule\n\n\n\n\n\nPositionSelectableComponent\n\nPositionSelectableComponent\n\nSharedModule -->\n\nPositionSelectableComponent->SharedModule\n\n\n\n\n\nTeamCreateModalComponent\n\nTeamCreateModalComponent\n\nSharedModule -->\n\nTeamCreateModalComponent->SharedModule\n\n\n\n\n\nTeamSelectableComponent\n\nTeamSelectableComponent\n\nSharedModule -->\n\nTeamSelectableComponent->SharedModule\n\n\n\n\n\nTimeDirectiveDirective\n\nTimeDirectiveDirective\n\nSharedModule -->\n\nTimeDirectiveDirective->SharedModule\n\n\n\n\n\nSplashPageRoutingModule\n\nSplashPageRoutingModule\n\n\n\nSplashPageModule\n\nSplashPageModule\n\nSplashPageModule -->\n\nSplashPageRoutingModule->SplashPageModule\n\n\n\n\n\nStatisticsPage\n\nStatisticsPage\n\n\n\nStatisticsPageModule\n\nStatisticsPageModule\n\nStatisticsPageModule -->\n\nStatisticsPage->StatisticsPageModule\n\n\n\n\n\nStatisticsPageRoutingModule\n\nStatisticsPageRoutingModule\n\nStatisticsPageModule -->\n\nStatisticsPageRoutingModule->StatisticsPageModule\n\n\n\n\n\nTeamsPage\n\nTeamsPage\n\nTeamsPageModule -->\n\nTeamsPage->TeamsPageModule\n\n\n\n\n\nTeamsPageRoutingModule\n\nTeamsPageRoutingModule\n\nTeamsPageModule -->\n\nTeamsPageRoutingModule->TeamsPageModule\n\n\n\n\n\nUsersPage\n\nUsersPage\n\n\n\nUsersPageModule\n\nUsersPageModule\n\nUsersPageModule -->\n\nUsersPage->UsersPageModule\n\n\n\n\n\nUsersPageRoutingModule\n\nUsersPageRoutingModule\n\nUsersPageModule -->\n\nUsersPageRoutingModule->UsersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        29 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    25 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    35 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    101 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        42 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StrapiUploadResponse   (src/.../strapi-media.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/impl/strapi-media.service.ts\n    \n    \n        \n            \n                \n                    \n                    StrapiUploadResponse\n                \n            \n            \n                \n                        StrapiMediaData[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_ME_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_SIGN_IN_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_SIGN_UP_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AuthenticationServiceFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            AuthMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            BACKEND_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FIREBASE_COLLECTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            FIREBASE_CONFIG_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            LEAGUE_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            LEAGUE_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            LEAGUE_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            LEAGUE_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            LEAGUE_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            LeagueCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            LeaguesMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            LeaguesRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            MATCH_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MATCH_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MATCH_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MATCH_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MATCH_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MATCH_STATS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MATCH_STATS_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MATCH_STATS_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MATCH_STATS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MATCH_STATS_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MatchCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            MatchMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            MatchRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            MatchStatsCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            MatchStatsMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            MatchStatsRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                        \n                            PLAYER_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            PLAYER_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            PLAYER_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            PLAYER_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            PLAYER_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            PlayerCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            PlayersMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            PlayersRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            STRAPI_AUTH_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TEAM_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TEAM_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TEAM_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TEAM_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TEAM_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            TeamCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            TeamsMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            TeamsRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            UPLOAD_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            USER_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            USER_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            USER_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            USER_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            UserMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            UserRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            USERS_COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            UsersCollectionSubscriptionFactory   (src/.../repository.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/repositories/repository.tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IAuthMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ME_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthMeApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SIGN_IN_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthSignInApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SIGN_UP_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthSignUpApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IAuthentication')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BACKEND_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Backend')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('CollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIREBASE_COLLECTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FirebaseCollectionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIREBASE_CONFIG_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FirebaseConfigToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LEAGUE_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('LeagueApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LEAGUE_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('LeagueCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LEAGUE_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('ILeaguesRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LEAGUE_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ILeagueRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LEAGUE_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('LeagueResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('MatchApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('MatchCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IMatchRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IMatchRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('MatchResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_STATS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('MatchStatisticApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_STATS_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('MatchStatisticsCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_STATS_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IMatchStatsRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_STATS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IMatchStatsRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MATCH_STATS_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('MatchStatisticResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PLAYER_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('PlayerApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PLAYER_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('PlayerCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PLAYER_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IPlayerRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PLAYER_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IPlayerRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PLAYER_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('PlayerResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IBaseRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('REPOSITORY_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRAPI_AUTH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IStrapiAuthentication')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEAM_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('TeamApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEAM_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('TeamCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEAM_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('ITeamRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEAM_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ITeamRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEAM_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('TeamResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UploadApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UserApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IUserRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IUserRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UserResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USERS_COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('UsersCollectionSubscriptionToken')\n                    \n                \n\n\n        \n    \n\n    src/app/core/repositories/repository.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthenticationServiceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: BaseAuthenticationService,\n  useFactory: (backend:string, firebaseConfig:any, signIn:string, signUp:string, meUrl:string, mapping:IAuthMapping, http:HttpClient) => {\n    switch(backend){\n      case 'http':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'local-storage':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'json-server':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'strapi':\n        return new StrapiAuthenticationService(signIn, signUp, meUrl, mapping, http);\n      case 'firebase':\n        return new FirebaseAuthenticationService(firebaseConfig, mapping);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n    }\n    \n  },\n  deps: [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN, AUTH_SIGN_IN_API_URL_TOKEN, AUTH_SIGN_UP_API_URL_TOKEN, AUTH_ME_API_URL_TOKEN, AUTH_MAPPING_TOKEN, HttpClient]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseAuthMappingFactory(AUTH_MAPPING_TOKEN, [BACKEND_TOKEN])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LeagueCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'league',\n  LEAGUE_REPOSITORY_MAPPING_TOKEN,\n  LEAGUE_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LeaguesMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  LEAGUE_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'league'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LeaguesRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(LEAGUE_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    LEAGUE_API_URL_TOKEN, \n    LEAGUE_RESOURCE_NAME_TOKEN, \n    LEAGUE_REPOSITORY_MAPPING_TOKEN, \n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MatchCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'match',\n  MATCH_REPOSITORY_MAPPING_TOKEN,\n  MATCH_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MatchMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  MATCH_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'match'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MatchRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(MATCH_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    MATCH_API_URL_TOKEN, \n    MATCH_RESOURCE_NAME_TOKEN, \n    MATCH_REPOSITORY_MAPPING_TOKEN, \n    FIREBASE_CONFIG_TOKEN]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MatchStatsCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'matchStatistic',\n  MATCH_STATS_REPOSITORY_MAPPING_TOKEN,\n  MATCH_STATS_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MatchStatsMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  MATCH_STATS_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'matchStatistic'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MatchStatsRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(MATCH_STATS_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    MATCH_STATS_API_URL_TOKEN, \n    MATCH_STATS_RESOURCE_NAME_TOKEN, \n    MATCH_STATS_REPOSITORY_MAPPING_TOKEN, \n    FIREBASE_CONFIG_TOKEN]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: BaseMediaService,\n  useFactory: (backend:string, firebaseConfig:any, upload:string, auth:IAuthentication, http:HttpClient) => {\n    switch(backend){\n      case 'http':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'local-storage':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'json-server':\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n      case 'firebase':\n        return new FirebaseMediaService(firebaseConfig, auth)\n      case 'strapi':\n        return new StrapiMediaService(upload, auth as IStrapiAuthentication, http);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n    }\n    \n  },\n  deps: [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN, UPLOAD_API_URL_TOKEN, BaseAuthenticationService, HttpClient]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayerCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'player',\n  PLAYER_REPOSITORY_MAPPING_TOKEN,\n  PLAYER_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayersMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  PLAYER_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'player'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayersRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(PLAYER_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    PLAYER_API_URL_TOKEN, \n    PLAYER_RESOURCE_NAME_TOKEN, \n    PLAYER_REPOSITORY_MAPPING_TOKEN, \n    FIREBASE_CONFIG_TOKEN]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TeamCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'team',\n  TEAM_REPOSITORY_MAPPING_TOKEN,\n  TEAM_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TeamsMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  TEAM_REPOSITORY_MAPPING_TOKEN, \n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'team'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TeamsRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(TEAM_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    TEAM_API_URL_TOKEN, \n    TEAM_RESOURCE_NAME_TOKEN, \n    TEAM_REPOSITORY_MAPPING_TOKEN, \n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  USER_REPOSITORY_MAPPING_TOKEN,\n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'usuario'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : createBaseRepositoryFactory(USER_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN, \n    HttpClient, \n    BaseAuthenticationService, \n    USER_API_URL_TOKEN, \n    USER_RESOURCE_NAME_TOKEN, \n    USER_REPOSITORY_MAPPING_TOKEN, \n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UsersCollectionSubscriptionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createCollectionSubscriptionFactory(\n  'usuario',\n  USER_REPOSITORY_MAPPING_TOKEN,\n  USERS_COLLECTION_SUBSCRIPTION_TOKEN\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n    const authService = inject(BaseAuthenticationService);\n    const router = inject(Router);\n  \n    return authService.ready$.pipe(\n        filter(isReady => isReady), // Esperar a que `ready$` sea true\n        take(1), // Solo tomar el primer valor true\n        switchMap(() => authService.authenticated$), // Obtener el valor actual de autenticación\n        map(isLoggedIn => {\n          if (isLoggedIn) {\n            return true; // Usuario autenticado, permitir acceso\n          } else {\n            // Usuario no autenticado, redirigir al login\n            router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n            return false;\n          }\n        })\n    );\n  }\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'FootballAdminApp',\n  webDir: 'www'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: \"https://footballcompsstrapiv2.onrender.com\"\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:1337'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
